{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\DataGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\DataGrid.vue","mtime":1604546251515},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ToolBar from './ToolBar.vue';\nimport Pager from './Pager.vue';\nexport default {\n  name: \"DataGrid\",\n  inheritAttrs: false,\n  props: {\n    // data-table 参数\n    // 固定高度（基于当前页面高度固定）\n    isFixed: {\n      type: Boolean,\n      default: false\n    },\n    // toolbar 参数\n    title: {\n      type: String,\n      default: ''\n    },\n    // pager 参数）\n    conName: String,\n    procName: String,\n    tableName: String,\n    order: String,\n    filter: String,\n    needUserName: {\n      type: Boolean,\n      default: false\n    },\n    bondCode: {\n      type: String,\n      default: ''\n    },\n    showFilter: {\n      type: Boolean,\n      default: false\n    },\n    // table 参数 (不通过pager组件去取数据，直接给表格填充数据)\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: [String, Number],\n    showHeader: {\n      type: Boolean,\n      default: true\n    },\n    showTable: {\n      type: Boolean,\n      default: true\n    },\n    // 显示分页 默认显示\n    showPager: {\n      type: Boolean,\n      default: true\n    },\n    pageSize: {\n      type: Number,\n      default: 20\n    },\n    //是否允许多选\n    multiSelection: {\n      type: Boolean,\n      default: false\n    },\n    //是否显示loading\n    showLoading: {\n      type: Boolean,\n      default: true\n    },\n    trustId: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  components: {\n    Pager: Pager,\n    ToolBar: ToolBar\n  },\n  data: function data() {\n    return {\n      gridData: [],\n      loading: true\n    };\n  },\n  computed: {\n    tableHeight: function tableHeight() {\n      return this.height ? this.height : this.isFixed ? 'auto' : undefined;\n    }\n  },\n  watch: {\n    data: function data(v) {\n      if (v && Array.isArray(v)) {\n        this.gridData = v;\n      }\n\n      this.$emit('listDataChanged', v);\n      this.loading = false;\n    }\n  },\n  methods: {\n    tableScroll: function tableScroll() {\n      this.$refs.table.bodyWrapper.scrollTop = 0;\n    },\n    loadGridData: function loadGridData(data) {\n      this.gridData = data;\n      this.$emit('listDataChanged', data);\n    },\n    loadingSwitcher: function loadingSwitcher(isDisplay) {\n      this.loading = isDisplay;\n    },\n    // 对Element @selection-change 事件的封装，\n    // 在使用时，建议使用此方式 @selectionChange\n    handleSelectionChange: function handleSelectionChange(data) {\n      if (this.multiSelection) {\n        this.$emit('selectionChange', data);\n      } else {\n        if (data.length > 1) {\n          this.$emit('selectionChange', data.splice(1, 1));\n          this.$refs.table.toggleRowSelection(data[0]);\n        } else {\n          this.$emit('selectionChange', data);\n        }\n      }\n    },\n    handleSortChange: function handleSortChange(sorter) {\n      if (!sorter.prop || !sorter.order) {\n        this.$emit('sortChange', null);\n        return;\n      }\n\n      var order = ' asc';\n\n      if (sorter.order === 'descending') {\n        order = ' desc';\n      }\n\n      var targetOrder = sorter.prop + order;\n\n      if (targetOrder === this.order) {\n        return;\n      }\n\n      this.$emit('sortChange', targetOrder);\n    },\n    // 刷新数据\n    refresh: function refresh() {\n      this.$refs.pager.getListWithPager();\n    },\n    clearSelection: function clearSelection() {\n      this.$refs.table.clearSelection();\n    }\n  },\n  mounted: function mounted() {\n    if (this.data) this.gridData = this.data;\n    this.loading = this.showLoading;\n  }\n};",{"version":3,"sources":["DataGrid.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"data-grid\" :class=\"{'data-grid--fixed':isFixed}\">\n    <tool-bar :title=\"title\" :showFilter=\"showFilter\" ref=\"data-grid-toolbar\" v-if=\"showFilter\">\n      <template slot=\"tool-filter\">\n          <slot name=\"toolbar-filter\"></slot>\n      </template>\n      <template slot=\"tool-right\">\n          <slot name=\"toolbar-right\"></slot>\n      </template>\n    </tool-bar>\n    <el-table :data=\"gridData\" v-show=\"showTable\" v-bind=\"$attrs\" v-on=\"$listeners\"\n      v-loading=\"loading\" :height=\"tableHeight\" @selection-change=\"handleSelectionChange\"\n      @sort-change=\"handleSortChange\" size=\"mini\" ref=\"table\">\n      <slot name=\"table-column\"></slot>\n    </el-table>\n    <template v-if=\"conName && tableName\">\n      <div class=\"grid-pager-control\" v-show=\"showPager\">\n        <pager :conname=\"conName\" :procname=\"procName\" :tablename=\"tableName\" :order=\"order\" :dataloaded=\"loadGridData\" :trustId=\"trustId\"\n          :loadingswitcher=\"loadingSwitcher\":needUserName=\"needUserName\" :filter=\"filter\" :pageSize=\"pageSize\" ref=\"pager\"\n          @tableScroll=\"tableScroll\">\n        </pager>\n      </div>\n    </template>\n    <template v-else>\n      <slot name=\"pager\"></slot>\n    </template>\n  </div>\n</template>\n\n<script>\n  import ToolBar from './ToolBar.vue';\n  import Pager from './Pager.vue';\n  export default {\n    name: \"DataGrid\",\n    inheritAttrs: false,\n    props: {\n      // data-table 参数\n      // 固定高度（基于当前页面高度固定）\n      isFixed: {\n        type: Boolean,\n        default: false\n      },\n      // toolbar 参数\n      title: {\n          type: String,\n          default: ''\n      },\n      // pager 参数）\n      conName: String,\n      procName:String,\n      tableName: String,\n\n      order: String,\n\n      filter: String,\n\n\t\t\tneedUserName:{\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n      },\n      bondCode:{\n        type:String,\n        default:''\n      },\n      showFilter:{\n          type: Boolean,\n          default: false\n      },\n      // table 参数 (不通过pager组件去取数据，直接给表格填充数据)\n      data: {\n        type: Array,\n        default: function () {\n          return [];\n        }\n      },\n\n      height: [String, Number],\n\n      showHeader: {\n        type: Boolean,\n        default: true\n      },\n\n      showTable: {\n        type: Boolean,\n        default: true\n      },\n\n      // 显示分页 默认显示\n      showPager: {\n        type: Boolean,\n        default: true\n      },\n      pageSize: {\n        type: Number,\n        default: 20\n      },\n      //是否允许多选\n      multiSelection: {\n        type: Boolean,\n        default: false\n      },\n      //是否显示loading\n      showLoading: {\n        type: Boolean,\n        default: true\n      },\n      trustId:{\n        type: [Number,String],\n        default: 0\n      }\n    },\n    components: {\n      Pager,ToolBar\n    },\n    data: () => ({\n      gridData: [],\n      loading: true,\n    }),\n    computed: {\n      tableHeight() {\n        return (this.height) ? this.height : this.isFixed ? 'auto' : undefined;\n      }\n    },\n    watch: {\n      data(v) {\n        if (v && Array.isArray(v)) {\n          this.gridData = v;\n        }\n        this.$emit('listDataChanged', v);\n        this.loading = false;\n      }\n    },\n    methods: {\n      tableScroll() {\n        this.$refs.table.bodyWrapper.scrollTop = 0\n      },\n      loadGridData(data) {\n        this.gridData = data;\n        this.$emit('listDataChanged', data);\n      },\n      loadingSwitcher(isDisplay) {\n        this.loading = isDisplay;\n      },\n      // 对Element @selection-change 事件的封装，\n      // 在使用时，建议使用此方式 @selectionChange\n      handleSelectionChange(data) {\n        if (this.multiSelection) {\n          this.$emit('selectionChange', data);\n        } else {\n          if (data.length > 1) {\n            this.$emit('selectionChange', data.splice(1, 1));\n            this.$refs.table.toggleRowSelection(data[0])\n          } else {\n            this.$emit('selectionChange', data);\n          }\n        }\n      },\n      handleSortChange(sorter) {\n        if (!sorter.prop || !sorter.order) {\n          this.$emit('sortChange', null);\n          return;\n        }\n        let order = ' asc';\n        if (sorter.order === 'descending') {\n          order = ' desc';\n        }\n\n        let targetOrder = sorter.prop + order;\n        if (targetOrder === this.order) {\n            return;\n        }\n        this.$emit('sortChange', targetOrder);\n      },\n      // 刷新数据\n      refresh() {\n        this.$refs.pager.getListWithPager();\n      },\n      clearSelection() {\n        this.$refs.table.clearSelection();\n      }\n    },\n    mounted() {\n      if (this.data) this.gridData = this.data;\n      this.loading = this.showLoading;\n    }\n  };\n\n</script>\n"],"sourceRoot":"src/components/common"}]}