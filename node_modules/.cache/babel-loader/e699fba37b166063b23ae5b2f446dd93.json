{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\store\\index.js","mtime":1604281046845},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createLogger from 'vuex/dist/logger';\nimport modules from './modules';\nimport mutations from './mutations.js';\nimport actions from './actions.js';\nimport cookie from '../utils/cookie.js';\nimport keys from '../utils/keys.js'; // vuex 是一个针对于构建复杂逻辑应用的状态管理工具\n// 可以帮助我们解决页面传值，多个组件共享状态的问题\n\nVue.use(Vuex);\nvar isProd = process.env.NODE_ENV === 'production'; // 导出Vuex实例\n\nexport default new Vuex.Store({\n  // state类似于Vue组件中的data， 只不过这里被当做共享属性，\n  // （注意：虽然所有组件都能获取到这个共享属性，但却不能直接在组件中修改它们的值），\n  // 我们可以把与业务逻辑不想关，与页面显示完全相关的全局状态添加到这里\n  state: {\n    locale: 'zh-CN',\n    languages: {\n      'zh-CN': '简体中文',\n      'en-US': 'English'\n    },\n    showHeader: false,\n    showIndicator: false,\n    taskProcessUrl: '',\n    taskProcessCallback: function taskProcessCallback() {},\n    isLogin: false,\n    redirect: '',\n    siteTitle: process.env.VUE_APP_TITLE,\n    kendoIsInit: false,\n    // 记录用户停留页面，用于上报错误信息\n    pageUrl: '',\n    message: '',\n    messageType: 'success'\n  },\n  // getters类似于Vue组件中的计算属性\n  getters: {\n    loggedIn: function loggedIn(state) {\n      return state.isLogin || cookie.get(keys.userInfo) !== null;\n    }\n  },\n  // 用来修改state中的值，记录状态的变化\n  mutations: mutations,\n  actions: actions,\n  modules: modules,\n  strict: process.env.NODE_ENV !== 'production',\n  plugins: !isProd ? [createLogger()] : []\n});",null]}