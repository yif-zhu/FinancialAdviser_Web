{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\admin\\CreateTrust.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\admin\\CreateTrust.vue","mtime":1604281045783},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport csvc from \"@/api/CommonService.js\";\nimport taskprocess from '@/api/TaskProcess';\nimport { mapState } from 'vuex';\nexport default {\n  props: {\n    onDialogClosed: {\n      type: Function\n    },\n    trustID: {\n      type: [Number, String]\n    }\n  },\n  data: function data() {\n    return {\n      formLabelWidth: '90px',\n      trustCodeDisabled: false,\n      marketPlaceOptions: [],\n      assetTypeOptions: [],\n      regulatoryOrgOptions: [],\n      marketCategoryOptions: [],\n      basicAssetTypeOptions: [],\n      collectionMethodOptions: [],\n      trustCode: null,\n      trustName: null,\n      isMarketProduct: true,\n      marketCategory: null,\n      regulatoryOrg: null,\n      marketPlace: null,\n      assetType: null,\n      basicAssetType: null,\n      collectionMethod: null,\n      trustStatus: null,\n      liquidatedDate: null,\n      TrustStatusCode: []\n    };\n  },\n  mounted: function mounted() {\n    this.loadTrustBasicInfo();\n    this.loadTrustStatusCode();\n  },\n  computed: _objectSpread({}, mapState('user', ['userName'])),\n  methods: {\n    loadTrustBasicInfo: function loadTrustBasicInfo() {\n      var self = this;\n      var svc = new csvc(\"PortfolioManagement\", \"DV.GetBasicInfo\", 1);\n\n      if (this.trustID && this.trustID != 0) {\n        //this.trustCodeDisabled = true;\n        svc.AddParam({\n          Name: \"TrustID\",\n          Value: self.trustID,\n          DBType: \"int\"\n        });\n      }\n\n      svc.ExecTables().then(function (res) {\n        if (!res || res.length < 3) {\n          self.$message.error('加载产品信息出错');\n          return;\n        }\n\n        self.marketCategoryOptions = res[0];\n        self.regulatoryOrgOptions = res[1];\n        self.marketPlaceOptions = res[2];\n        self.assetTypeOptions = res[3];\n        self.basicAssetTypeOptions = res[4];\n        self.collectionMethodOptions = res[5];\n\n        if (res[6] && res[6].length > 0) {\n          var t = res[6][0];\n          self.trustCode = t.TrustCode;\n          self.trustName = t.TrustName;\n          self.isMarketProduct = t.IsMarketProduct == 1;\n          self.marketCategory = t.MarketCategory;\n          self.marketPlace = t.MarketPlace;\n          self.regulatoryOrg = t.RegulatoryOrg;\n          self.assetType = t.AssetType;\n          self.basicAssetType = t.BasicAssetType;\n          self.collectionMethod = t.CollectionMethod;\n          self.trustStatus = t.TrustStatus;\n          self.liquidatedDate = t.LiquidatedDate;\n        }\n      });\n    },\n    loadTrustStatusCode: function loadTrustStatusCode() {\n      var self = this;\n      var svc = new csvc(\"PortfolioManagement\", \"DV.ItemData_GetByCategoryCode\", 1);\n      svc.AddParam({\n        Name: \"CategoryCode\",\n        Value: 'TrustStatus',\n        DBType: \"string\"\n      });\n      svc.ExecTable().then(function (res) {\n        self.TrustStatusCode = res;\n      });\n    },\n    cancelCreate: function cancelCreate() {\n      if (this.onDialogClosed) {\n        this.onDialogClosed(0);\n      }\n    },\n    createOrUpdateTrust: function createOrUpdateTrust() {\n      var self = this;\n\n      if (!this.trustCode || !this.trustName) {\n        self.$message.error('产品名称和代码为必填项');\n        return;\n      }\n\n      if (this.isMarketProduct && (!this.marketCategory || !this.regulatoryOrg || !this.marketPlace || !this.assetType || !this.basicAssetType || !this.collectionMethod)) {\n        self.$message.error('市场产品，以下分类属性选填');\n        return;\n      }\n\n      var regCode = new RegExp(\"^[a-zA-Z]([a-zA-Z0-9])*(-[0-9]+)*$\");\n\n      if (!regCode.test(this.trustCode)) {\n        self.$message.error('产品代码不规范');\n        return;\n      }\n\n      var reg = new RegExp(\"[`~!@#$^&*()=_|{}':;',\\\\[\\\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]\");\n\n      if (reg.test(this.trustName)) {\n        self.$message.error('产品名称不规范');\n        return;\n      }\n\n      var svc = new csvc(\"PortfolioManagement\", \"DV.TrustInfo_Update\");\n      svc.AddParam({\n        Name: \"TrustID\",\n        Value: self.trustID,\n        DBType: \"int\"\n      });\n      svc.AddParam({\n        Name: \"TrustCode\",\n        Value: self.trustCode,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"TrustName\",\n        Value: self.trustName,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"IsMarketProduct\",\n        Value: self.isMarketProduct,\n        DBType: \"bool\"\n      });\n      svc.AddParam({\n        Name: \"MarketCategory\",\n        Value: self.marketCategory,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"RegulatoryOrg\",\n        Value: self.regulatoryOrg,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"MarketPlace\",\n        Value: self.marketPlace,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"AssetType\",\n        Value: self.assetType,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"BasicAssetType\",\n        Value: self.basicAssetType,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"CollectionMethod\",\n        Value: self.collectionMethod,\n        DBType: \"string\"\n      });\n      svc.AddParam({\n        Name: \"TrustStatus\",\n        Value: self.trustStatus,\n        DBType: \"string\"\n      });\n\n      if (self.trustStatus === 'Liquidated') {\n        if (!self.liquidatedDate) {\n          self.$message.error('请选择清算日期！');\n          return;\n        }\n\n        svc.AddParam({\n          Name: \"LiquidatedDate\",\n          Value: self.liquidatedDate,\n          DBType: \"string\"\n        });\n      }\n\n      svc.AddParam({\n        Name: \"UserName\",\n        Value: self.userName,\n        DBType: \"string\"\n      });\n      svc.ExecResult().then(function (res) {\n        res = parseInt(res);\n        var tp = new taskprocess(\"Task\", \"FixedIncomeSuite_AddNewTrustFromDealViewer\", \"TaskProcess\");\n\n        if (isNaN(res)) {\n          self.$message.error('更新产品信息发生系统内部错误');\n          return;\n        }\n\n        if (res == 0) {\n          self.$message.error('系统中已存在相同名称或相同代码的产品');\n          return;\n        }\n\n        if (res != self.trustID) {\n          self.$message.success('产品添加成功');\n          self.trustID = res;\n          tp.AddVariableItem(\"TrustID\", res, \"String\");\n          tp.RunTask();\n        } else {\n          self.$message.success('产品信息更新成功');\n          tp.AddVariableItem(\"TrustID\", self.trustID, \"String\");\n          tp.RunTask();\n        }\n\n        if (self.onDialogClosed) {\n          self.onDialogClosed(res);\n        }\n      });\n    }\n  }\n};",null]}