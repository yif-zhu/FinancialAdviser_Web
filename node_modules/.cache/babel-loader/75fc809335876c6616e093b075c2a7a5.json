{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\TaskProcess.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\TaskProcess.js","mtime":1604281044983},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* 重写taskProcess类， 去掉了对jquery的依赖 */\nimport qs from 'qs';\nimport axios from 'axios';\nimport store from '@/store/index.js';\nimport jsonp from '@/utils/jsonp.js';\nimport { TaskProcessIndicatorUrl, SessionManagementServiceUrl, TaskProcessServiceUrl } from '../utils/config.js';\n\nvar TaskProcess = /*#__PURE__*/function () {\n  function TaskProcess(appDomain, taskCode) {\n    var clientName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'TaskProcess';\n\n    _classCallCheck(this, TaskProcess);\n\n    _defineProperty(this, \"variables\", []);\n\n    this.params = {\n      appDomain: appDomain,\n      taskCode: taskCode,\n      clientName: clientName\n    };\n  }\n\n  _createClass(TaskProcess, [{\n    key: \"AddVariableItem\",\n    value: function AddVariableItem(name, value, dataType) {\n      var isConstant = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var isKey = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var keyIndex = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      this.variables.push({\n        Name: name,\n        Value: value,\n        DataType: dataType,\n        IsConstant: isConstant,\n        IsKey: isKey,\n        KeyIndex: keyIndex\n      });\n      return this;\n    }\n  }, {\n    key: \"BuildVariables\",\n    value: function BuildVariables() {\n      var str = '';\n      this.variables.forEach(function (val) {\n        str += '<SessionVariable>';\n\n        for (var key in val) {\n          str += \"<\".concat(key, \">\").concat(val[key], \"</\").concat(key, \">\");\n        }\n\n        str += '</SessionVariable>';\n      });\n      return \"<SessionVariables>\".concat(str, \"</SessionVariables>\");\n    } // 有界面的task运行\n\n  }, {\n    key: \"ShowIndicator\",\n    value: function ShowIndicator(callback) {\n      var curWwwPath = window.document.location.href;\n      var rootUrl = '',\n          env = process.env.NODE_ENV;\n\n      if (curWwwPath.indexOf('localhost') > -1 && env === 'development') {\n        rootUrl = process.env.VUE_APP_Domain;\n      }\n\n      var sContext = encodeURIComponent(this.BuildVariables());\n      var url = rootUrl + TaskProcessIndicatorUrl + '?' + qs.stringify(this.params) + '&sContext=' + sContext;\n\n      var callbackFn = function callbackFn(callback) {\n        if (!callback) return false;\n        return function () {\n          var sessionId = window.sessionStorage.getItem('sessionId');\n          callback(sessionId);\n        };\n      };\n\n      window.sessionStorage.setItem('sContext', sContext);\n      store.commit('showIndicatorWindow', {\n        url: url,\n        callback: callbackFn(callback)\n      });\n    } // 无界面的task运行\n\n  }, {\n    key: \"RunTask\",\n    value: function RunTask(callback) {\n      var _this$params = this.params,\n          appDomain = _this$params.appDomain,\n          clientName = _this$params.clientName;\n      this.CreateSessionByTaskCode(function (err, data) {\n        var params = {\n          sessionId: data,\n          applicationDomain: appDomain,\n          clientName: clientName\n        };\n        axios.get(TaskProcessServiceUrl + 'RunTask?' + qs.stringify(params)).then(function (res) {\n          if (callback) callback(res);\n        });\n      });\n    }\n  }, {\n    key: \"CreateSessionByTaskCode\",\n    value: function CreateSessionByTaskCode(callback) {\n      var _this$params2 = this.params,\n          appDomain = _this$params2.appDomain,\n          taskCode = _this$params2.taskCode;\n      var params = {\n        sessionVariable: this.BuildVariables(),\n        applicationDomain: appDomain,\n        taskCode: taskCode\n      };\n      jsonp(SessionManagementServiceUrl + 'CreateSessionByTaskCode?' + qs.stringify(params), callback);\n    }\n  }]);\n\n  return TaskProcess;\n}();\n\nexport default TaskProcess;",{"version":3,"sources":["C:/Users/yif_z/Desktop/DealViewer/src/api/TaskProcess.js"],"names":["qs","axios","store","jsonp","TaskProcessIndicatorUrl","SessionManagementServiceUrl","TaskProcessServiceUrl","TaskProcess","appDomain","taskCode","clientName","params","name","value","dataType","isConstant","isKey","keyIndex","variables","push","Name","Value","DataType","IsConstant","IsKey","KeyIndex","str","forEach","val","key","callback","curWwwPath","window","document","location","href","rootUrl","env","process","NODE_ENV","indexOf","VUE_APP_Domain","sContext","encodeURIComponent","BuildVariables","url","stringify","callbackFn","sessionId","sessionStorage","getItem","setItem","commit","CreateSessionByTaskCode","err","data","applicationDomain","get","then","res","sessionVariable"],"mappings":"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","sourcesContent":["/* 重写taskProcess类， 去掉了对jquery的依赖 */\nimport qs from 'qs';\nimport axios from 'axios';\nimport store from '@/store/index.js';\nimport jsonp from '@/utils/jsonp.js';\nimport {\n  TaskProcessIndicatorUrl,\n  SessionManagementServiceUrl,\n  TaskProcessServiceUrl\n} from '../utils/config.js';\n\nclass TaskProcess {\n\n  variables = [];\n\n  constructor(appDomain, taskCode, clientName = 'TaskProcess') {\n\n    this.params = {appDomain, taskCode, clientName};\n  }\n\n  AddVariableItem(name, value, dataType, isConstant = 0, isKey = 0, keyIndex = 0) {\n    this.variables.push({\n      Name: name,\n      Value: value,\n      DataType: dataType,\n      IsConstant: isConstant,\n      IsKey: isKey,\n      KeyIndex: keyIndex\n    });\n\n    return this;\n  }\n\n  BuildVariables() {\n    let str = '';\n    this.variables.forEach((val) => {\n      str += '<SessionVariable>';\n      for (let key in val) {\n        str += `<${key}>${val[key]}</${key}>`;\n      }\n      str += '</SessionVariable>';\n    });\n\n    return `<SessionVariables>${str}</SessionVariables>`;\n  }\n\n  // 有界面的task运行\n  ShowIndicator(callback) {\n    let curWwwPath=window.document.location.href;\n    let rootUrl = '', env = process.env.NODE_ENV;\n    if (curWwwPath.indexOf('localhost')>-1 && env === 'development') {\n      rootUrl = process.env.VUE_APP_Domain;\n    }\n    let sContext = encodeURIComponent(this.BuildVariables());\n    const url = rootUrl + TaskProcessIndicatorUrl +'?' + qs.stringify(this.params)+'&sContext='+sContext;\n    const callbackFn = function(callback) {\n      if(!callback) return false;\n      return function () {\n        let sessionId = window.sessionStorage.getItem('sessionId');\n        callback(sessionId);\n      }\n    };\n    window.sessionStorage.setItem('sContext', sContext);\n    store.commit('showIndicatorWindow', {url , callback: callbackFn(callback)});\n  }\n  // 无界面的task运行\n  RunTask(callback) {\n    const {appDomain, clientName} = this.params;\n    this.CreateSessionByTaskCode( (err, data) => {\n      const params = {\n        sessionId: data,\n        applicationDomain: appDomain,\n        clientName\n      };\n      axios.get(TaskProcessServiceUrl +'RunTask?'+qs.stringify(params))\n        .then(res=>{\n          if(callback) callback(res);\n        });\n    })\n  }\n\n  CreateSessionByTaskCode(callback) {\n    const {appDomain, taskCode} = this.params;\n    const params = {\n      sessionVariable: this.BuildVariables(),\n      applicationDomain: appDomain,\n      taskCode: taskCode\n    };\n    jsonp(SessionManagementServiceUrl +'CreateSessionByTaskCode?'+qs.stringify(params), callback);\n  }\n}\n\nexport default TaskProcess;\n"]}]}