{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\Login.vue","mtime":1604316944697},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport md5 from 'js-md5';\nimport cookie from '@/utils/cookie.js';\nimport keys from '@/utils/keys.js';\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport { BasePath } from '@/utils/config.js';\nvar captchaUrl = BasePath + 'Services/AuthenticationService.svc/Captcha';\nexport default {\n  name: \"Login\",\n  data: function data() {\n    var validator = function validator(rule, value, callback) {\n      var test = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/;\n\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (!test.test(value)) {\n        callback(new Error('密码长度为6-20位，必须包括字母、数字'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatorC = function validatorC(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入确认密码'));\n      } else if (value != validator) {\n        callback(new Error('确认密码与密码不相符'));\n      } else {\n        callback();\n      }\n    };\n\n    var checkPhone = function checkPhone(rule, value, callback) {\n      var test = /^1[3456789]\\d{9}$/;\n\n      if (value === '') {\n        callback(new Error('手机号码'));\n      } else if (!test.test(value)) {\n        callback(new Error('请输入有效手机号'));\n      } else {\n        callback();\n      }\n    };\n\n    var checkEMail = function checkEMail(rule, value, callback) {\n      var test = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\n\n      if (value === '') {\n        callback(new Error('请输入邮箱地址'));\n      } else if (!test.test(value)) {\n        callback(new Error('请输入有效邮箱地址'));\n      } else {\n        callback();\n      }\n    };\n\n    var checkUserName = function checkUserName(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      captcha: captchaUrl,\n      form: {\n        email: '',\n        password: '',\n        captcha: ''\n      },\n      isLoginT: true,\n      rules: {\n        email: [{\n          required: true,\n          message: '请输入用户名或邮箱',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 6,\n          message: '密码不能少于6位',\n          trigger: 'blur'\n        }],\n        captcha: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      errorMsg: '',\n      captionErrorMsg: '',\n      submitStatus: false,\n      backgroundDiv: {\n        backgroundImage: 'url(' + require('@/assets/images/loginBg.jpg') + ')'\n      },\n      createUserForm: {\n        userName: '',\n        phone: '',\n        password: '',\n        passwordConfirm: '',\n        EMail: ''\n      },\n      createUserRules: {\n        userName: [{\n          validator: checkUserName,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validator,\n          trigger: 'blur'\n        }],\n        passwordConfirm: [{\n          validatorC: validatorC,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: checkPhone,\n          trigger: 'blur'\n        }],\n        EMail: [{\n          validator: checkEMail,\n          trigger: 'blur'\n        }]\n      },\n      createUserErrors: {\n        userName: '',\n        EMail: '',\n        password: '',\n        passwordConfirm: '',\n        phone: ''\n      },\n      CUSTOMER: process.env.VUE_APP_CUSTOMER,\n      showLogo: process.env.VUE_APP_ShowLogo,\n      isSimple: process.env.VUE_APP_IsSimple\n    };\n  },\n  created: function created() {\n    this.$title('登录');\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isLogin'])), mapState(['siteTitle'])),\n  methods: _objectSpread(_objectSpread({}, mapActions('user', ['handleUserLogin'])), {}, {\n    dvRegister: function dvRegister() {\n      window.location.href = '/Community/#/register?appPath=' + encodeURIComponent('/DealViewer/#/login');\n    },\n    handleCreateUser: function handleCreateUser() {\n      var $form = this.$refs.createUserForm; // $form.validate((valid) => {\n      //   if(valid) {\n      //     const {userName, password, passwordConfirm, EMail,phone} = this.createUserForm;\n      //     let item = `<item>`;\n      //      item += `<UserName>${userName}</UserName>`;\n      //      item += `<Email>${EMail}</Email>`;\n      //      item += `<DisplayName>${displayName}</DisplayName>`;\n      //      item += `<LoweredUserName>${userName.toLocaleLowerCase()}</LoweredUserName>`;\n      //      item += `<Password>${md5(password)}</Password>`;\n      //      item += `<Password>${md5(password)}</Password>`;\n      //      item += `</item>`;\n      //     let svc = this.$http(\n      //       'UserManagement',\n      //       'QuickFrame.usp_AddUser'\n      //     );\n      //     svc.AddParam({\n      //       Name: \"item\",\n      //       Value: item,\n      //       DBType: \"string\"\n      //     });\n      //     svc.ExecResult().then(res=>{\n      //       if(res === 3) {\n      //         this.createUserErrors.userName = '账号已存在，换一个试试';\n      //       }else{\n      //         this.$message.success('账号创建成功!');\n      //         $form.resetFields();\n      //         $form.clearValidate();\n      //       }\n      //     });\n      //   }\n      // });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this.submitStatus = true;\n\n          if (_this.errorMsg !== '') {\n            _this.errorMsg = '';\n          }\n\n          if (_this.captionErrorMsg !== '') {\n            _this.captionErrorMsg = '';\n          } // let param = {\n          //   loginName: \"'\"+this.form.email.trim()+\"'\",\n          //   Password: \"'\"+this.form.password+\"'\"\n          //   //captcha: '1E6046FC-5C78-43D4-9409-3F62BB2979EC',\n          //   //captcha: this.isSimple == '0' ? this.form.captcha : '1E6046FC-5C78-43D4-9409-3F62BB2979EC'\n          // };\n\n\n          var param = {\n            username: _this.form.email.trim(),\n            password: md5(_this.form.password),\n            //captcha: '1E6046FC-5C78-43D4-9409-3F62BB2979EC',\n            captcha: _this.isSimple == '0' ? _this.form.captcha : '1E6046FC-5C78-43D4-9409-3F62BB2979EC'\n          };\n\n          _this.handleUserLogin(param).then(function (data) {\n            _this.submitStatus = false;\n\n            if (!data) {\n              _this.captionErrorMsg = '您输入的验证码不正确！';\n\n              _this.refreshCaptcha();\n\n              return;\n            }\n\n            var redirectURL = _this.$route.query.redirectURL;\n\n            if (redirectURL !== undefined) {\n              _this.$router.replace(redirectURL);\n            } else {\n              _this.$router.push(_this.isSimple == '0' ? \"/Product/ProductList\" : \"/quotation-analysis/index\");\n            }\n\n            cookie.set(keys.userInfo, JSON.stringify(data), {\n              path: '/'\n            });\n          }, function () {\n            _this.errorMsg = '您输入的密码和账户名不匹配！';\n            _this.captionErrorMsg = '';\n\n            _this.refreshCaptcha();\n\n            _this.submitStatus = false;\n          });\n        }\n      });\n    },\n    refreshCaptcha: function refreshCaptcha() {\n      this.captcha = captchaUrl + '?' + Math.random() * 100;\n    }\n  })\n};",null]}