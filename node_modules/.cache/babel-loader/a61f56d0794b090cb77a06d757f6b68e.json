{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\UserApi.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\UserApi.js","mtime":1604647091538},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*\n    用户模块 API\n\n    命令规则 请求方式加接口名（接口名应简洁明了）\n    正例： getUserInfo\n    反例： getUsp_GetUserInfo\n*/\nimport axios from 'axios';\nimport enchelper from '../utils/encryptHelper';\nimport { UserServiceUrl } from '../utils/config.js';\nimport utils from '@/utils/index';\nexport var UserApi = {\n  // postUserLogin(data) {\n  //   return axios.post(`${UserServiceUrl}Login`,{'info': enchelper.Encrypt(JSON.stringify(data))})\n  //     .then(res => {\n  //       if(res.headers['content-result']) {\n  //         return Promise.resolve(false);\n  //       }\n  //       return Promise.resolve(res.data !== '' ? utils.isObject(res.data) || utils.isArray(res.data) ? res.data : JSON.parse(res.data) : {});\n  //     });\n  // },\n  postUserLogin: function postUserLogin(data) {\n    return axios.post(\"\".concat(UserServiceUrl), {\n      \"ApiName\": \"Login\",\n      'RequestParam': data\n    }).then(function (res) {\n      if (res.headers['content-result']) {\n        return Promise.resolve(false);\n      }\n\n      return Promise.resolve(res.data !== '' ? utils.isObject(res.data) || utils.isArray(res.data) ? res.data : JSON.parse(res.data) : {});\n    });\n  },\n  postUserLogout: function postUserLogout() {\n    return axios.post(\"\".concat(UserServiceUrl, \"Logout\")).then(function (res) {\n      return Promise.resolve(res.data);\n    });\n  }\n};",{"version":3,"sources":["C:/Users/yif_z/Desktop/DealViewer/src/api/UserApi.js"],"names":["axios","enchelper","UserServiceUrl","utils","UserApi","postUserLogin","data","post","then","res","headers","Promise","resolve","isObject","isArray","JSON","parse","postUserLogout"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAXqB,yBAWPC,IAXO,EAWD;AAClB,WAAON,KAAK,CAACO,IAAN,WAAcL,cAAd,GAA+B;AACpC,iBAAU,OAD0B;AAEpC,sBAAgBI;AAFoB,KAA/B,EAIJE,IAJI,CAIC,UAAAC,GAAG,EAAI;AACX,UAAGA,GAAG,CAACC,OAAJ,CAAY,gBAAZ,CAAH,EAAkC;AAChC,eAAOC,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AACD,aAAOD,OAAO,CAACC,OAAR,CAAgBH,GAAG,CAACH,IAAJ,KAAa,EAAb,GAAkBH,KAAK,CAACU,QAAN,CAAeJ,GAAG,CAACH,IAAnB,KAA4BH,KAAK,CAACW,OAAN,CAAcL,GAAG,CAACH,IAAlB,CAA5B,GAAsDG,GAAG,CAACH,IAA1D,GAAiES,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACH,IAAf,CAAnF,GAA0G,EAA1H,CAAP;AACD,KATI,CAAP;AAUD,GAtBoB;AAwBrBW,EAAAA,cAxBqB,4BAwBJ;AACf,WAAOjB,KAAK,CAACO,IAAN,WAAcL,cAAd,aACJM,IADI,CACC,UAAAC,GAAG,EAAI;AACX,aAAOE,OAAO,CAACC,OAAR,CAAgBH,GAAG,CAACH,IAApB,CAAP;AACD,KAHI,CAAP;AAID;AA7BoB,CAAhB","sourcesContent":["/*\n    用户模块 API\n\n    命令规则 请求方式加接口名（接口名应简洁明了）\n    正例： getUserInfo\n    反例： getUsp_GetUserInfo\n*/\nimport axios from 'axios';\nimport enchelper from '../utils/encryptHelper'\nimport { UserServiceUrl } from '../utils/config.js';\nimport utils from '@/utils/index'\n\nexport const UserApi = {\n\n  // postUserLogin(data) {\n  //   return axios.post(`${UserServiceUrl}Login`,{'info': enchelper.Encrypt(JSON.stringify(data))})\n  //     .then(res => {\n  //       if(res.headers['content-result']) {\n  //         return Promise.resolve(false);\n  //       }\n  //       return Promise.resolve(res.data !== '' ? utils.isObject(res.data) || utils.isArray(res.data) ? res.data : JSON.parse(res.data) : {});\n  //     });\n  // },\n  postUserLogin(data) {\n    return axios.post(`${UserServiceUrl}`,{\n      \"ApiName\":\"Login\",\n      'RequestParam': data\n    })\n      .then(res => {\n        if(res.headers['content-result']) {\n          return Promise.resolve(false);\n        }\n        return Promise.resolve(res.data !== '' ? utils.isObject(res.data) || utils.isArray(res.data) ? res.data : JSON.parse(res.data) : {});\n      });\n  },\n\n  postUserLogout() {\n    return axios.post(`${UserServiceUrl}Logout`)\n      .then(res => {\n        return Promise.resolve(res.data);\n      });\n  }\n};\n"]}]}