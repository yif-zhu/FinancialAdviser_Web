{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\TaskProcess.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\TaskProcess.js","mtime":1604281044983},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* 重写taskProcess类， 去掉了对jquery的依赖 */\nimport qs from 'qs';\nimport axios from 'axios';\nimport store from '@/store/index.js';\nimport jsonp from '@/utils/jsonp.js';\nimport { TaskProcessIndicatorUrl, SessionManagementServiceUrl, TaskProcessServiceUrl } from '../utils/config.js';\n\nvar TaskProcess = /*#__PURE__*/function () {\n  function TaskProcess(appDomain, taskCode) {\n    var clientName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'TaskProcess';\n\n    _classCallCheck(this, TaskProcess);\n\n    _defineProperty(this, \"variables\", []);\n\n    this.params = {\n      appDomain: appDomain,\n      taskCode: taskCode,\n      clientName: clientName\n    };\n  }\n\n  _createClass(TaskProcess, [{\n    key: \"AddVariableItem\",\n    value: function AddVariableItem(name, value, dataType) {\n      var isConstant = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var isKey = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var keyIndex = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      this.variables.push({\n        Name: name,\n        Value: value,\n        DataType: dataType,\n        IsConstant: isConstant,\n        IsKey: isKey,\n        KeyIndex: keyIndex\n      });\n      return this;\n    }\n  }, {\n    key: \"BuildVariables\",\n    value: function BuildVariables() {\n      var str = '';\n      this.variables.forEach(function (val) {\n        str += '<SessionVariable>';\n\n        for (var key in val) {\n          str += \"<\".concat(key, \">\").concat(val[key], \"</\").concat(key, \">\");\n        }\n\n        str += '</SessionVariable>';\n      });\n      return \"<SessionVariables>\".concat(str, \"</SessionVariables>\");\n    } // 有界面的task运行\n\n  }, {\n    key: \"ShowIndicator\",\n    value: function ShowIndicator(callback) {\n      var curWwwPath = window.document.location.href;\n      var rootUrl = '',\n          env = process.env.NODE_ENV;\n\n      if (curWwwPath.indexOf('localhost') > -1 && env === 'development') {\n        rootUrl = process.env.VUE_APP_Domain;\n      }\n\n      var sContext = encodeURIComponent(this.BuildVariables());\n      var url = rootUrl + TaskProcessIndicatorUrl + '?' + qs.stringify(this.params) + '&sContext=' + sContext;\n\n      var callbackFn = function callbackFn(callback) {\n        if (!callback) return false;\n        return function () {\n          var sessionId = window.sessionStorage.getItem('sessionId');\n          callback(sessionId);\n        };\n      };\n\n      window.sessionStorage.setItem('sContext', sContext);\n      store.commit('showIndicatorWindow', {\n        url: url,\n        callback: callbackFn(callback)\n      });\n    } // 无界面的task运行\n\n  }, {\n    key: \"RunTask\",\n    value: function RunTask(callback) {\n      var _this$params = this.params,\n          appDomain = _this$params.appDomain,\n          clientName = _this$params.clientName;\n      this.CreateSessionByTaskCode(function (err, data) {\n        var params = {\n          sessionId: data,\n          applicationDomain: appDomain,\n          clientName: clientName\n        };\n        axios.get(TaskProcessServiceUrl + 'RunTask?' + qs.stringify(params)).then(function (res) {\n          if (callback) callback(res);\n        });\n      });\n    }\n  }, {\n    key: \"CreateSessionByTaskCode\",\n    value: function CreateSessionByTaskCode(callback) {\n      var _this$params2 = this.params,\n          appDomain = _this$params2.appDomain,\n          taskCode = _this$params2.taskCode;\n      var params = {\n        sessionVariable: this.BuildVariables(),\n        applicationDomain: appDomain,\n        taskCode: taskCode\n      };\n      jsonp(SessionManagementServiceUrl + 'CreateSessionByTaskCode?' + qs.stringify(params), callback);\n    }\n  }]);\n\n  return TaskProcess;\n}();\n\nexport default TaskProcess;",null]}