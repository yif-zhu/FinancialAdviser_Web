{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\utils\\polyfill.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\utils\\polyfill.js","mtime":1604281047252},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["Date.prototype.Format = function (format) {\n  var o = {\n    \"M+\": this.getMonth() + 1,\n    //月份\n    \"d+\": this.getDate(),\n    //日\n    \"h+\": this.getHours() % 12 == 0 ? 12 : this.getHours() % 12,\n    //小时\n    \"H+\": this.getHours(),\n    //小时\n    \"m+\": this.getMinutes(),\n    //分\n    \"s+\": this.getSeconds(),\n    //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3),\n    //季度\n    \"S\": this.getMilliseconds() //毫秒\n\n  };\n  var week = {\n    \"0\": \"\\u65E5\",\n    \"1\": \"\\u4E00\",\n    \"2\": \"\\u4E8C\",\n    \"3\": \"\\u4E09\",\n    \"4\": \"\\u56DB\",\n    \"5\": \"\\u4E94\",\n    \"6\": \"\\u516D\"\n  };\n\n  if (/(y+)/.test(format)) {\n    format = format.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  }\n\n  if (/(E+)/.test(format)) {\n    format = format.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? \"\\u661F\\u671F\" : \"\\u5468\" : \"\") + week[this.getDay() + \"\"]);\n  }\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(format)) {\n      format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n    }\n  }\n\n  return format;\n};\n\nDate.prototype.Diff = function (interval, objDate) {\n  //若参数不足或 objDate 不是日期类型則回传 undefined\n  if (arguments.length < 2 || objDate.constructor != Date) {\n    return undefined;\n  }\n\n  switch (interval) {\n    //计算秒差\n    case 's':\n      return parseInt((objDate - this) / 1000);\n    //计算分差\n\n    case 'n':\n      return parseInt((objDate - this) / 60000);\n    //计算時差\n\n    case 'h':\n      return parseInt((objDate - this) / 3600000);\n    //计算日差\n\n    case 'd':\n      return parseInt((objDate - this) / 86400000);\n    //计算周差\n\n    case 'w':\n      return parseInt((objDate - this) / (86400000 * 7));\n    //计算月差\n\n    case 'm':\n      return objDate.getMonth() + 1 + (objDate.getFullYear() - this.getFullYear()) * 12 - (this.getMonth() + 1);\n    //计算年差\n\n    case 'y':\n      return objDate.getFullYear() - this.getFullYear();\n    //输入有误\n\n    default:\n      return undefined;\n  }\n}; // 不建议使用（可使用ES6模板字符串语法替代）\n\n\nString.prototype.Format = function () {\n  var args = arguments;\n  return this.replace(/{(\\d+)}/g, function (match, number) {\n    return typeof args[number] != 'undefined' ? args[number] : match;\n  });\n}; // 时间格式转换 将后台返回的日期格式如 /new Date(xxx)/ 转换成 年-月-日\n\n\nString.prototype.S2Date = function () {\n  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'yyyy-MM-dd';\n  // windows 平台下返回的日期格式与linux存在差异，这里仅处理windows平台下的日期\n  var isWin = process.env.VUE_APP_Platform === 'win';\n  return isWin ? new Date(parseInt(this.replace(/[^\\d]/g, ''))).Format(format) : new Date(this).Format(format);\n};\n\nArray.prototype.Remove = function (val) {\n  var index = this.indexOf(val);\n\n  if (index > -1) {\n    this.splice(index, 1);\n  }\n};",null]}