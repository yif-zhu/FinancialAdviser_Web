{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\DataGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\DataGrid.vue","mtime":1604546251515},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ToolBar from './ToolBar.vue';\nimport Pager from './Pager.vue';\nexport default {\n  name: \"DataGrid\",\n  inheritAttrs: false,\n  props: {\n    // data-table 参数\n    // 固定高度（基于当前页面高度固定）\n    isFixed: {\n      type: Boolean,\n      default: false\n    },\n    // toolbar 参数\n    title: {\n      type: String,\n      default: ''\n    },\n    // pager 参数）\n    conName: String,\n    procName: String,\n    tableName: String,\n    order: String,\n    filter: String,\n    needUserName: {\n      type: Boolean,\n      default: false\n    },\n    bondCode: {\n      type: String,\n      default: ''\n    },\n    showFilter: {\n      type: Boolean,\n      default: false\n    },\n    // table 参数 (不通过pager组件去取数据，直接给表格填充数据)\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: [String, Number],\n    showHeader: {\n      type: Boolean,\n      default: true\n    },\n    showTable: {\n      type: Boolean,\n      default: true\n    },\n    // 显示分页 默认显示\n    showPager: {\n      type: Boolean,\n      default: true\n    },\n    pageSize: {\n      type: Number,\n      default: 20\n    },\n    //是否允许多选\n    multiSelection: {\n      type: Boolean,\n      default: false\n    },\n    //是否显示loading\n    showLoading: {\n      type: Boolean,\n      default: true\n    },\n    trustId: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  components: {\n    Pager: Pager,\n    ToolBar: ToolBar\n  },\n  data: function data() {\n    return {\n      gridData: [],\n      loading: true\n    };\n  },\n  computed: {\n    tableHeight: function tableHeight() {\n      return this.height ? this.height : this.isFixed ? 'auto' : undefined;\n    }\n  },\n  watch: {\n    data: function data(v) {\n      if (v && Array.isArray(v)) {\n        this.gridData = v;\n      }\n\n      this.$emit('listDataChanged', v);\n      this.loading = false;\n    }\n  },\n  methods: {\n    tableScroll: function tableScroll() {\n      this.$refs.table.bodyWrapper.scrollTop = 0;\n    },\n    loadGridData: function loadGridData(data) {\n      this.gridData = data;\n      this.$emit('listDataChanged', data);\n    },\n    loadingSwitcher: function loadingSwitcher(isDisplay) {\n      this.loading = isDisplay;\n    },\n    // 对Element @selection-change 事件的封装，\n    // 在使用时，建议使用此方式 @selectionChange\n    handleSelectionChange: function handleSelectionChange(data) {\n      if (this.multiSelection) {\n        this.$emit('selectionChange', data);\n      } else {\n        if (data.length > 1) {\n          this.$emit('selectionChange', data.splice(1, 1));\n          this.$refs.table.toggleRowSelection(data[0]);\n        } else {\n          this.$emit('selectionChange', data);\n        }\n      }\n    },\n    handleSortChange: function handleSortChange(sorter) {\n      if (!sorter.prop || !sorter.order) {\n        this.$emit('sortChange', null);\n        return;\n      }\n\n      var order = ' asc';\n\n      if (sorter.order === 'descending') {\n        order = ' desc';\n      }\n\n      var targetOrder = sorter.prop + order;\n\n      if (targetOrder === this.order) {\n        return;\n      }\n\n      this.$emit('sortChange', targetOrder);\n    },\n    // 刷新数据\n    refresh: function refresh() {\n      this.$refs.pager.getListWithPager();\n    },\n    clearSelection: function clearSelection() {\n      this.$refs.table.clearSelection();\n    }\n  },\n  mounted: function mounted() {\n    if (this.data) this.gridData = this.data;\n    this.loading = this.showLoading;\n  }\n};",null]}