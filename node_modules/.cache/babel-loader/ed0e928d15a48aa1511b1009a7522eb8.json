{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\reportManage\\ReportList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\reportManage\\ReportList.vue","mtime":1604633384630},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import advFilter from '@/components/common/AdvanceFilter.vue'\nimport reportFilter from '@/components/common/ReportFilter.vue';\nimport dataGrid from '@/components/common/DataGrid.vue';\nimport FileSaver from 'file-saver';\nimport XLSX from 'xlsx';\nimport { BasePath } from '@/utils/config.js';\nimport { addClass, removeClass, hasClass } from '@/utils/dom.js';\nimport { mapState, mapMutations } from 'vuex';\nimport fsvc from \"@/api/FileService\";\nimport csvc from \"@/api/CommonService\";\nimport taskprocess from \"@/api/TaskProcess\";\nexport default {\n  components: {\n    dataGrid: dataGrid,\n    reportFilter: reportFilter\n  },\n  data: function data() {\n    return {\n      listOrder: 'ItemId asc,TrustStartDate asc',\n      listFilter: 'IsMarketProduct = 1',\n      searchS: true,\n      fields: [],\n      removeShow: false,\n      searchCon: false,\n      bondCode: '',\n      checkedData: [],\n      tableDataList: [],\n      // 为华泰客户环境\n      IS_HUATAI: process.env.VUE_APP_CUSTOMER && process.env.VUE_APP_CUSTOMER === 'huatai',\n      viewType: 'DV.view_Products',\n      reportUpload: false,\n      dialogUploadFileName: '',\n      progressSw: false,\n      progressText: '正在保存文件，请稍等',\n      percentage: 0\n    };\n  },\n  computed: {\n    userName: function userName() {\n      return this.$store.state.user.userName;\n    },\n    ConcernTrust: function ConcernTrust() {\n      return this.$store.state.productInfo.ConcernTrust;\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations('productInfo', ['setProductDetail', 'setConcernTrust'])), {}, {\n    searchSC: function searchSC() {\n      this.searchS = !this.searchS;\n    },\n    EditReport: function EditReport(TrustID) {\n      this.reportUpload = true;\n      this.TrustId = TrustID;\n    },\n    downloadReport: function downloadReport(TrustId) {\n      //下载报告\n      this.$message.success('下载成功');\n    },\n    deleteReport: function deleteReport(TrustID) {\n      //删除报告\n      var self = this;\n\n      if (confirm(\"确定要删除所选产品吗?\")) {\n        self.$message.success('删除成功');\n      }\n    },\n    dialogFileInputs: function dialogFileInputs(event) {\n      var file = event.target.files;\n\n      if (file.length == 1) {\n        this.dialogUploadFileName = file[0].name;\n      }\n    },\n    dialogUploadCilck: function dialogUploadCilck(id) {\n      $(\"#\" + id).click();\n    },\n    reportingFilesUpload: function reportingFilesUpload() {\n      var self = this;\n      var postData = $(\"#excelUploads\")[0].files;\n\n      if (postData.length < 1) {\n        self.$message.error('请选择上传的文件');\n        return;\n      }\n\n      self.reportUpload = false;\n      self.percentage = 0;\n      var postDataI = 0;\n      var nbprogress = 0;\n      var postDataName = postData[postDataI].name;\n\n      var progress = function progress(progressEvt) {\n        self.progressSw = true;\n        nbprogress = progressEvt.loaded / progressEvt.total;\n        self.percentage = parseInt((postDataI + nbprogress) / postData.length * 100);\n      };\n\n      var callback1 = function callback1(fpath) {\n        self.progressText = '';\n        var filePath = fpath.UploadResult;\n        filePath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\n        var fileType = postDataName.substr(postDataName.lastIndexOf(\".\") + 1);\n        var svc = self.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Add');\n        svc.AddParam({\n          Name: \"TrustId\",\n          Value: self.TrustID,\n          DBType: \"int\"\n        });\n        svc.AddParam({\n          Name: \"FileCategory\",\n          Value: self.fileType,\n          DBType: \"string\"\n        });\n        svc.AddParam({\n          Name: \"FilePath\",\n          Value: filePath,\n          DBType: \"string\"\n        });\n        svc.AddParam({\n          Name: \"FileName\",\n          Value: postDataName,\n          DBType: \"string\"\n        });\n        svc.AddParam({\n          Name: \"FileType\",\n          Value: fileType,\n          DBType: \"string\"\n        });\n        svc.AddParam({\n          Name: \"UserName\",\n          Value: self.userName,\n          DBType: \"string\"\n        });\n        svc.ExecResult().then(function (res) {\n          res = parseInt(res);\n\n          if (isNaN(res)) {\n            self.$message.error('文件上传发生内部服务错误');\n            self.progressSw = false;\n          } else {\n            self.progressSw = true;\n            self.progressText = '已成功上传文件';\n            setTimeout(function () {\n              self.progressSw = false;\n              self.progressText = '';\n            }, 500);\n          }\n        });\n      };\n\n      fsvc.UploadOther(postData[postDataI], postDataName, folderName, 1)(progress, callback1);\n    },\n    row_key: function row_key(row) {\n      //console.log(row)\n      return this.viewType === 'DV.view_Products' ? row.TrustId : row.SNO;\n    },\n    doProductListFilter: function doProductListFilter(condition) {\n      console.log(condition);\n      this.listFilter = condition; // this.bondCode = bondCode;\n    },\n    handleSearchCon: function handleSearchCon(fields, removeShow) {\n      this.fields = fields;\n      this.removeShow = removeShow;\n      console.log(fields);\n    },\n    removeColdChosen: function removeColdChosen() {\n      this.$refs.advFilterR.bondCodeClear();\n    },\n    removeFieldChosen: function removeFieldChosen(fields) {\n      this.$refs.advFilterR.removeFieldChosen(fields);\n    },\n    doListSortChange: function doListSortChange(orderBy) {\n      this.listOrder = orderBy ? orderBy : 'TrustId desc';\n    },\n    //选中产品\n    selectRow: function selectRow(data) {\n      console.log(data);\n      this.checkedData = data;\n    },\n    listDataChanged: function listDataChanged(data) {\n      this.tableDataList = data;\n    }\n  }),\n  mounted: function mounted() {\n    this.$title();\n    this.listFilter = \"IsMarketProduct = 1\";\n  }\n};",null]}