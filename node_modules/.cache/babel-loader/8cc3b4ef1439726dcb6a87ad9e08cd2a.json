{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\FileService.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\api\\FileService.js","mtime":1604281044718},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport paramsBuilder from './ParamsBuilder.js';\nimport enchelper from '../utils/encryptHelper.js';\nimport { FileOperationServiceUrl } from '../utils/config.js';\n\nfunction jsFormSubmit(targetUrl, param) {\n  var tempform = document.createElement(\"form\");\n  tempform.action = targetUrl;\n  tempform.method = \"post\";\n  var platform = process.env.VUE_APP_Platform;\n\n  if ('linux' === platform) {\n    tempform.enctype = \"multipart/form-data\";\n  }\n\n  tempform.style.display = \"none\";\n\n  for (var x in param) {\n    var _opt = document.createElement(\"input\");\n\n    _opt.name = x;\n    _opt.value = param[x];\n    tempform.appendChild(_opt);\n  }\n\n  var opt = document.createElement(\"input\");\n  opt.type = \"submit\";\n  tempform.appendChild(opt);\n  document.body.appendChild(tempform);\n  tempform.submit();\n  document.body.removeChild(tempform);\n}\n\nexport default {\n  Upload: function Upload(fileData, fileName, folder, toFTP) {\n    var argsObj = {\n      'Name': fileName,\n      'Folder': folder,\n      'IsFTP': toFTP ? true : false\n    };\n    console.log(argsObj);\n    var formData = new FormData();\n    formData.append(\"file\", fileData);\n    var args = JSON.stringify(argsObj);\n    var svcUrl = FileOperationServiceUrl + 'Upload?args=' + enchelper.EncryptForGetRequest(args);\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      headers: {\n        'Content-Type': 'multipart/form-data; boundary=----' + +new Date()\n      },\n      data: process.env.VUE_APP_Platform === 'win' ? fileData : formData\n    }).then(function (res) {\n      return Promise.resolve(process.env.VUE_APP_Platform === 'win' ? res.data : {\n        UploadResult: res.data\n      });\n    }).catch(function (thrown) {\n      if (axios.isCancel(thrown)) {\n        console.log('Request canceled');\n      }\n    });\n  },\n  UploadOther: function UploadOther(fileData, fileName, folder, toFTP) {\n    var formData = new FormData();\n    formData.append(\"file\", fileData);\n    var argsObj = {\n      'Name': fileName,\n      'Folder': folder,\n      'IsFTP': toFTP ? true : false\n    };\n    console.log(argsObj);\n    var args = JSON.stringify(argsObj);\n    var svcUrl = FileOperationServiceUrl + 'Upload?args=' + enchelper.EncryptForGetRequest(args);\n    return function (progress, callback) {\n      var CancelToken = axios.CancelToken;\n      var source = CancelToken.source();\n      return axios({\n        method: 'post',\n        url: svcUrl,\n        headers: {\n          'Content-Type': 'multipart/form-data; boundary=----' + +new Date()\n        },\n        data: process.env.VUE_APP_Platform === 'win' ? fileData : formData,\n        cancelToken: source.token,\n        onUploadProgress: function onUploadProgress(progressEvent) {\n          if (progress) progress(progressEvent);\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        if (callback) callback(process.env.VUE_APP_Platform === 'win' ? res.data : {\n          UploadResult: res.data\n        });\n      }); //return source.cancel;\n    };\n  },\n  // 上传文件(支持上传进度、取消上传）\n  UploadFile: function UploadFile(fileData, fileName, folder, toFTP) {\n    var argsObj = {\n      'Name': fileName,\n      'Folder': folder,\n      'IsFTP': toFTP ? true : false\n    };\n    console.log(argsObj);\n    var args = JSON.stringify(argsObj);\n    var svcUrl = FileOperationServiceUrl + 'Upload?args=' + enchelper.EncryptForGetRequest(args);\n    return function (progress, callback) {\n      var CancelToken = axios.CancelToken;\n      var source = CancelToken.source();\n      axios({\n        method: 'post',\n        url: svcUrl,\n        data: fileData,\n        cancelToken: source.token,\n        onUploadProgress: function onUploadProgress(progressEvent) {\n          if (progress) progress(progressEvent);\n        }\n      }).then(function (res) {\n        if (callback) callback(res.data);\n      }).catch(function (thrown) {\n        if (axios.isCancel(thrown)) {\n          console.log('Request canceled');\n        }\n      });\n      return source.cancel;\n    };\n  },\n  LoadText: function LoadText(fileRelativePath) {\n    var svcUrl = FileOperationServiceUrl + 'LoadContent';\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'filePath': enchelper.Encrypt(fileRelativePath)\n      }\n    }).then(function (res) {\n      return Promise.resolve(res.data);\n    });\n  },\n  UpdateText: function UpdateText(fileRelativePath, fileContent) {\n    var svcUrl = FileOperationServiceUrl + 'UpdateContent';\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'filePath': enchelper.Encrypt(fileRelativePath),\n        'fileContent': fileContent\n      }\n    }).then(function (res) {\n      return Promise.resolve(res.data);\n    });\n  },\n  CopyFolder: function CopyFolder(sourceFolder, destFolder) {\n    var svcUrl = FileOperationServiceUrl + 'CopyFolder';\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'sourceFolder': enchelper.Encrypt(sourceFolder),\n        'destFolder': enchelper.Encrypt(destFolder)\n      }\n    }).then(function (res) {\n      return Promise.resolve(res.data);\n    });\n  },\n  Remove: function Remove(fileRelativePath, isFTP) {\n    var svcUrl = FileOperationServiceUrl + 'Remove';\n    var argsObj = {\n      'Path': fileRelativePath,\n      'IsFTP': isFTP ? true : false\n    };\n    console.log(argsObj);\n    var args = JSON.stringify(argsObj);\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'args': enchelper.Encrypt(args)\n      }\n    }).then(function (res) {\n      return Promise.resolve(res.data);\n    });\n  },\n  DownLoadFileByPath: function DownLoadFileByPath(fileRelativePath, renameTo, fromFTP) {\n    var serviceUrl = FileOperationServiceUrl + 'Download';\n    var fileName = renameTo;\n\n    if (!renameTo || renameTo.length < 3) {\n      fileName = fileRelativePath.substring(fileRelativePath.lastIndexOf('\\\\') + 1);\n    }\n\n    var argsObj = {\n      'Name': fileName,\n      'Path': fileRelativePath,\n      'IsFTP': fromFTP ? true : false\n    };\n    console.log(argsObj);\n    var args = JSON.stringify(argsObj);\n    var param = {\n      'args': enchelper.Encrypt(args)\n    };\n    jsFormSubmit(serviceUrl, param);\n  },\n  Export: function Export(connName, spName) {\n    paramsBuilder.call(this, connName, spName);\n\n    this.ExportExcelFile = function (excelName) {\n      var serviceUrl = FileOperationServiceUrl + 'ExportExcel';\n      var dbParams = this.PrepareparamObj();\n      var argsObj = {\n        'Name': excelName,\n        'Conn': connName,\n        'Params': dbParams\n      };\n      console.log(argsObj);\n      var args = JSON.stringify(argsObj);\n      var param = {\n        'args': enchelper.Encrypt(args)\n      };\n      jsFormSubmit(serviceUrl, param);\n    };\n  }\n};",{"version":3,"sources":["C:/Users/yif_z/Desktop/DealViewer/src/api/FileService.js"],"names":["axios","paramsBuilder","enchelper","FileOperationServiceUrl","jsFormSubmit","targetUrl","param","tempform","document","createElement","action","method","platform","process","env","VUE_APP_Platform","enctype","style","display","x","opt","name","value","appendChild","type","body","submit","removeChild","Upload","fileData","fileName","folder","toFTP","argsObj","console","log","formData","FormData","append","args","JSON","stringify","svcUrl","EncryptForGetRequest","url","headers","Date","data","then","res","Promise","resolve","UploadResult","catch","thrown","isCancel","UploadOther","progress","callback","CancelToken","source","cancelToken","token","onUploadProgress","progressEvent","UploadFile","cancel","LoadText","fileRelativePath","Encrypt","UpdateText","fileContent","CopyFolder","sourceFolder","destFolder","Remove","isFTP","DownLoadFileByPath","renameTo","fromFTP","serviceUrl","length","substring","lastIndexOf","Export","connName","spName","call","ExportExcelFile","excelName","dbParams","PrepareparamObj"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport paramsBuilder from './ParamsBuilder.js';\nimport enchelper from '../utils/encryptHelper.js';\nimport { FileOperationServiceUrl } from '../utils/config.js';\n\nfunction jsFormSubmit(targetUrl, param) {\n  let tempform = document.createElement(\"form\");\n  tempform.action = targetUrl;\n  tempform.method = \"post\";\n  let platform = process.env.VUE_APP_Platform;\n  if('linux' === platform) {\n    tempform.enctype=\"multipart/form-data\";\n  }\n  tempform.style.display = \"none\";\n\n  for (let x in param) {\n    let opt = document.createElement(\"input\");\n    opt.name = x;\n    opt.value = param[x];\n    tempform.appendChild(opt);\n  }\n\n  let opt = document.createElement(\"input\");\n  opt.type = \"submit\";\n  tempform.appendChild(opt);\n  document.body.appendChild(tempform);\n  tempform.submit();\n  document.body.removeChild(tempform);\n}\n\nexport default {\n\n  Upload(fileData, fileName, folder, toFTP) {\n    let argsObj = {\n      'Name': fileName,\n      'Folder': folder,\n      'IsFTP': toFTP ? true : false\n    };\n    console.log(argsObj);\n    \n    let formData = new FormData();\n    formData.append(\"file\", fileData);\n\n    let args = JSON.stringify(argsObj);\n    let svcUrl = FileOperationServiceUrl + 'Upload?args=' + enchelper.EncryptForGetRequest(args);\n\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      headers: {\n        'Content-Type': 'multipart/form-data; boundary=----'+(+new Date())\n      },\n      data: process.env.VUE_APP_Platform === 'win' ? fileData : formData\n    }).then(res => {\n      return Promise.resolve(process.env.VUE_APP_Platform === 'win' ? res.data : { UploadResult: res.data });\n    }).catch(function (thrown) {\n      if (axios.isCancel(thrown)) {\n        console.log('Request canceled');\n      }\n    });\n  },\n\n  UploadOther(fileData, fileName, folder, toFTP) {\n    \n    let formData = new FormData();\n    formData.append(\"file\", fileData);\n        \n    let argsObj = {\n      'Name': fileName,\n      'Folder': folder,\n      'IsFTP': toFTP ? true : false\n    };\n    console.log(argsObj);\n\n    let args = JSON.stringify(argsObj);\n    let svcUrl = FileOperationServiceUrl + 'Upload?args=' + enchelper.EncryptForGetRequest(args);\n\n    return function (progress, callback) {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n      return axios({\n        method: 'post',\n        url: svcUrl,\n        headers: {\n          'Content-Type': 'multipart/form-data; boundary=----'+(+new Date())\n        },\n        data: process.env.VUE_APP_Platform === 'win' ? fileData : formData,\n        cancelToken: source.token,\n        onUploadProgress: function (progressEvent) {\n          if (progress) progress(progressEvent);\n        }\n      }).then(res => {\n        console.log(res.data)\n        if (callback) callback(process.env.VUE_APP_Platform === 'win' ? res.data : { UploadResult: res.data });\n      });\n      //return source.cancel;\n    }\n  },\n  // 上传文件(支持上传进度、取消上传）\n  UploadFile (fileData, fileName, folder, toFTP) {\n    let argsObj = {\n      'Name': fileName,\n      'Folder': folder,\n      'IsFTP': toFTP ? true : false\n    };\n    console.log(argsObj);\n\n    let args = JSON.stringify(argsObj);\n    let svcUrl = FileOperationServiceUrl + 'Upload?args=' + enchelper.EncryptForGetRequest(args);\n\n    return function (progress, callback) {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n      axios({\n        method: 'post',\n        url: svcUrl,\n        data: fileData,\n        cancelToken: source.token,\n        onUploadProgress: function (progressEvent) {\n          if (progress) progress(progressEvent);\n        }\n      }).then((res) => {\n        if (callback) callback(res.data);\n      }).catch(function (thrown) {\n        if (axios.isCancel(thrown)) {\n          console.log('Request canceled');\n        }\n      });\n      return source.cancel;\n    }\n  },\n\n  LoadText(fileRelativePath) {\n    let svcUrl = FileOperationServiceUrl + 'LoadContent';\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'filePath': enchelper.Encrypt(fileRelativePath)\n      }\n    }).then(res => {\n      return Promise.resolve(res.data);\n    });\n  },\n  UpdateText(fileRelativePath, fileContent) {\n    let svcUrl = FileOperationServiceUrl + 'UpdateContent';\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'filePath': enchelper.Encrypt(fileRelativePath),\n        'fileContent': fileContent\n      }\n    }).then(res => {\n      return Promise.resolve(res.data);\n    });\n  },\n  CopyFolder(sourceFolder, destFolder) {\n    let svcUrl = FileOperationServiceUrl + 'CopyFolder';\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'sourceFolder': enchelper.Encrypt(sourceFolder),\n        'destFolder': enchelper.Encrypt(destFolder)\n      }\n    }).then(res => {\n      return Promise.resolve(res.data);\n    });\n  },\n  Remove(fileRelativePath, isFTP) {\n    let svcUrl = FileOperationServiceUrl + 'Remove';\n    let argsObj = {\n      'Path': fileRelativePath,\n      'IsFTP': isFTP ? true : false\n    };\n    console.log(argsObj);\n    let args = JSON.stringify(argsObj);\n\n    return axios({\n      method: 'post',\n      url: svcUrl,\n      data: {\n        'args': enchelper.Encrypt(args)\n      }\n    }).then(res => {\n      return Promise.resolve(res.data);\n    });\n  },\n  DownLoadFileByPath(fileRelativePath, renameTo, fromFTP) {\n    let serviceUrl = FileOperationServiceUrl + 'Download';\n    let fileName = renameTo;\n    if (!renameTo || renameTo.length < 3) {\n      fileName = fileRelativePath.substring(fileRelativePath.lastIndexOf('\\\\') + 1);\n    }\n    let argsObj = {\n      'Name': fileName,\n      'Path': fileRelativePath,\n      'IsFTP': fromFTP ? true : false\n    };\n    console.log(argsObj);\n\n    let args = JSON.stringify(argsObj);\n    let param = {\n      'args': enchelper.Encrypt(args)\n    };\n\n    jsFormSubmit(serviceUrl, param);\n  },\n  Export(connName, spName) {\n\n    paramsBuilder.call(this, connName, spName);\n\n    this.ExportExcelFile = function (excelName) {\n      let serviceUrl = FileOperationServiceUrl + 'ExportExcel';\n      let dbParams = this.PrepareparamObj();\n      let argsObj = {\n        'Name': excelName,\n        'Conn': connName,\n        'Params': dbParams\n      };\n      console.log(argsObj);\n\n      let args = JSON.stringify(argsObj);\n      let param = {\n        'args': enchelper.Encrypt(args)\n      };\n      jsFormSubmit(serviceUrl, param);\n    };\n  }\n}\n"]}]}