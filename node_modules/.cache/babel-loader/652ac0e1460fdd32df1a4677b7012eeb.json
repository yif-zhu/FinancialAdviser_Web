{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\Highcharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\Highcharts.vue","mtime":1604281046033},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport Highcharts from 'highcharts';\nimport highcharts3d from 'highcharts/highcharts-3d.js';\nimport exporting from 'highcharts/modules/exporting.js';\nimport highchartsMore from 'highcharts/highcharts-more.js'; //扩展图表类型\n\nhighcharts3d(Highcharts);\nhighchartsMore(Highcharts);\nexport default {\n  name: \"Highcharts\",\n  props: {\n    rows: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dims: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    options: Object,\n    isItExport: {\n      //加一个“isItExport”参数判断图表是否需要导出功能\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    options: function options(_options) {\n      if (!this.chart && _options) {\n        this.renderChart();\n      } else {\n        this.chart.update(_options);\n      }\n    }\n  },\n  methods: {\n    renderChart: function renderChart() {\n      if (this.chart || !this.options) return;\n      Highcharts.setOptions({\n        //图表导出\n        lang: {\n          contextButtonTitle: '导出图表',\n          printChart: \"打印图表\",\n          downloadJPEG: \"下载JPEG 图片\",\n          downloadPDF: \"下载PDF文档\",\n          downloadPNG: \"下载PNG 图片\",\n          downloadSVG: \"下载SVG 矢量图\",\n          exportButtonTitle: \"导出图片\",\n          thousandsSep: ','\n        }\n      });\n      var options = Object.assign({}, this.options);\n\n      if (this.dims.length > 0 && this.rows.length > 0) {\n        var seriesObj = {};\n\n        for (var i = 0, len = this.dims.length; i < len; i++) {\n          var d = this.dims[i];\n          seriesObj[d] = [];\n        }\n\n        for (var i = 0, len = this.rows.length; i < len; i++) {\n          var r = this.rows[i];\n\n          for (var key in seriesObj) {\n            seriesObj[key].push(r[key]);\n          }\n        }\n\n        var ss = [];\n\n        for (var key in seriesObj) {\n          ss.push({\n            name: key,\n            data: seriesObj[key]\n          });\n        }\n\n        options.series = ss;\n      }\n\n      options.credits = {\n        enabled: false\n      };\n\n      if (typeof options.series === 'undefined') {\n        options.title = {\n          text: null\n        };\n      }\n\n      options.exporting = {\n        enabled: this.isItExport\n      };\n      this.chart = new Highcharts.Chart(this.$el, options); //this.dragInit();\n    },\n    // colorInit(){\n    //   Highcharts.getOptions().colors = $.map(Highcharts.getOptions().colors, function (color) {\n    //     return {\n    //       radialGradient: {\n    //         cx: 0.4,\n    //         cy: 0.3,\n    //         r: 0.5\n    //       },\n    //       stops: [\n    //         [0, color],\n    //         [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]\n    //       ]\n    //     };\n    //   });\n    // },\n    // dragInit(){\n    //   let chart = this.chart;\n    //   $(chart.container).bind('mousedown.hc touchstart.hc', function (e) {\n    //     e = chart.pointer.normalize(e);\n    //     var posX = e.pageX,\n    //       posY = e.pageY,\n    //       alpha = chart.options.chart.options3d.alpha,\n    //       beta = chart.options.chart.options3d.beta,\n    //       newAlpha,\n    //       newBeta,\n    //       sensitivity = 5; // lower is more sensitive\n    //     $(document).bind({\n    //       'mousemove.hc touchdrag.hc': function (e) {\n    //         // Run beta\n    //         newBeta = beta + (posX - e.pageX) / sensitivity;\n    //         newBeta = Math.min(100, Math.max(-100, newBeta));\n    //         chart.options.chart.options3d.beta = newBeta;\n    //         // Run alpha\n    //         newAlpha = alpha + (e.pageY - posY) / sensitivity;\n    //         newAlpha = Math.min(100, Math.max(-100, newAlpha));\n    //         chart.options.chart.options3d.alpha = newAlpha;\n    //         chart.redraw(false);\n    //       },\n    //       'mouseup touchend': function () {\n    //         $(document).unbind('.hc');\n    //       }\n    //     });\n    //   });\n    // },\n    reflow: function reflow() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.reflow();\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (!this.chart && this.options !== undefined) {\n      this.renderChart();\n    }\n\n    exporting(Highcharts);\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart !== null) {\n      this.chart.destroy();\n    }\n  }\n};",{"version":3,"sources":["Highcharts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"highcharts-container\" />\n</template>\n\n<script>\n  import Highcharts from 'highcharts';\n  import highcharts3d from 'highcharts/highcharts-3d.js';\n  import exporting from 'highcharts/modules/exporting.js';\n  import highchartsMore from 'highcharts/highcharts-more.js';//扩展图表类型\n\n  highcharts3d(Highcharts);\n  highchartsMore(Highcharts);\n  export default {\n    name: \"Highcharts\",\n    props: {\n      rows: {\n        type: Array,\n        default: function() {\n          return [];\n        }\n      },\n      dims: {\n        type: Array,\n        default: function() {\n          return [];\n        }\n      },\n      options: Object,\n      isItExport:{//加一个“isItExport”参数判断图表是否需要导出功能\n        type: Boolean,\n        default: false\n      }\n    },\n    data: () => ({\n      chart: null\n    }),\n    watch: {\n      options (options) {\n        if (!this.chart && options) {\n          this.renderChart();\n        } else {\n          this.chart.update(options);\n        }\n      }\n    },\n    methods: {\n      renderChart() {\n        if(this.chart || !this.options) return;\n        Highcharts.setOptions({//图表导出\n          lang: {\n            contextButtonTitle:'导出图表',\n            printChart:\"打印图表\",\n            downloadJPEG: \"下载JPEG 图片\" ,\n            downloadPDF: \"下载PDF文档\"  ,\n            downloadPNG: \"下载PNG 图片\"  ,\n            downloadSVG: \"下载SVG 矢量图\" ,\n            exportButtonTitle: \"导出图片\",\n            thousandsSep: ','\n          }\n        });\n        let options = Object.assign({},this.options);\n        if (this.dims.length>0 && this.rows.length>0) {\n          var seriesObj = {};\n          for (var i = 0, len = this.dims.length; i < len; i++) {\n            var d = this.dims[i];\n            seriesObj[d] = [];\n          }\n          for (var i = 0, len = this.rows.length; i < len; i++) {\n            var r = this.rows[i];\n            for (var key in seriesObj) {\n              seriesObj[key].push(r[key]);\n            }\n          }\n\n          var ss = [];\n          for (var key in seriesObj) {\n            ss.push({\n              name: key,\n              data: seriesObj[key]\n            });\n          }\n\n          options.series = ss;\n        }\n\n        options.credits = {\n          enabled: false\n        };\n        if(typeof options.series === 'undefined'){\n          options.title = {\n            text:null\n          };\n        }\n        options.exporting = {\n          enabled: this.isItExport\n        }\n        this.chart = new Highcharts.Chart(this.$el, options);\n\n        //this.dragInit();\n      },\n      // colorInit(){\n      //   Highcharts.getOptions().colors = $.map(Highcharts.getOptions().colors, function (color) {\n      //     return {\n      //       radialGradient: {\n      //         cx: 0.4,\n      //         cy: 0.3,\n      //         r: 0.5\n      //       },\n      //       stops: [\n      //         [0, color],\n      //         [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]\n      //       ]\n      //     };\n      //   });\n      // },\n      // dragInit(){\n      //   let chart = this.chart;\n      //   $(chart.container).bind('mousedown.hc touchstart.hc', function (e) {\n      //     e = chart.pointer.normalize(e);\n      //     var posX = e.pageX,\n      //       posY = e.pageY,\n      //       alpha = chart.options.chart.options3d.alpha,\n      //       beta = chart.options.chart.options3d.beta,\n      //       newAlpha,\n      //       newBeta,\n      //       sensitivity = 5; // lower is more sensitive\n      //     $(document).bind({\n      //       'mousemove.hc touchdrag.hc': function (e) {\n      //         // Run beta\n      //         newBeta = beta + (posX - e.pageX) / sensitivity;\n      //         newBeta = Math.min(100, Math.max(-100, newBeta));\n      //         chart.options.chart.options3d.beta = newBeta;\n      //         // Run alpha\n      //         newAlpha = alpha + (e.pageY - posY) / sensitivity;\n      //         newAlpha = Math.min(100, Math.max(-100, newAlpha));\n      //         chart.options.chart.options3d.alpha = newAlpha;\n      //         chart.redraw(false);\n      //       },\n      //       'mouseup touchend': function () {\n      //         $(document).unbind('.hc');\n      //       }\n      //     });\n      //   });\n      // },\n      reflow() {\n        this.$nextTick(()=>{\n          this.chart.reflow();\n        });\n      }\n    },\n    mounted() {\n      if (!this.chart && this.options !== undefined) {\n        this.renderChart();\n      }\n      exporting(Highcharts);\n    },\n    beforeDestroy() {\n      if(this.chart !== null) {\n        this.chart.destroy();\n      }\n    }\n  };\n</script>\n"],"sourceRoot":"src/components/common"}]}