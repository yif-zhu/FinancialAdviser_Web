{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\product\\CashInFlow.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\product\\CashInFlow.vue","mtime":1604281225823},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport advFilter from '@/components/common/AdvanceFilter.vue';\nimport dataGrid from '@/components/common/DataGrid.vue';\nimport dynamicTab from '@/mixins/dynamicTab.js';\nimport FileSaver from 'file-saver';\nimport ItemBox from '@/components/layout/ItemBox.vue';\nimport XLSX from 'xlsx';\nimport { mapState, mapMutations } from 'vuex';\nimport { addClass, removeClass, hasClass } from '@/utils/dom.js';\nexport default {\n  data: function data() {\n    return {\n      data: [],\n      payment1: true\n    };\n  },\n  components: {\n    ItemBox: ItemBox\n  },\n  computed: {\n    TrustID: function TrustID() {\n      return this.$store.state.productInfo.trustId;\n    }\n  },\n  created: function created() {\n    this.initInflow();\n  },\n  methods: {\n    initInflow: function initInflow() {\n      var _this = this;\n\n      var self = this;\n      var svc = this.$http('PortfolioManagement', 'DV.usp_GetPoolCashInflowSimpleByTrustId');\n      svc.AddParam({\n        Name: 'TrustID',\n        Value: self.TrustID,\n        //4513,\n        DBType: 'int'\n      });\n      svc.ExecTable().then(function (res) {\n        _this.data = res;\n      });\n    },\n    exportExcel: function exportExcel() {\n      /* out-table关联导出的dom节点  */\n      var wb = XLSX.utils.table_to_book(document.querySelector('#out-table'));\n      /* get binary string as output */\n\n      var wbout = XLSX.write(wb, {\n        bookType: 'xlsx',\n        bookSST: true,\n        type: 'array'\n      });\n\n      try {\n        FileSaver.saveAs(new Blob([wbout], {\n          type: 'application/octet-stream'\n        }), '现金流流入.xlsx');\n      } catch (e) {\n        if (typeof console !== 'undefined') console.log(e, wbout);\n      }\n\n      return wbout;\n    },\n    stateFormat: function stateFormat(row, column, cellValue) {\n      if (cellValue == null) {\n        return '';\n      } else {\n        var money = cellValue != 'ND' ? Number(cellValue).toFixed(2).toString().replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g, \"$&,\") : cellValue;\n        return money;\n      }\n    }\n  }\n};",{"version":3,"sources":["CashInFlow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,SAAA,MAAA,uCAAA;AACA,OAAA,QAAA,MAAA,kCAAA;AACA,OAAA,UAAA,MAAA,wBAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,OAAA,MAAA,iCAAA;AACA,OAAA,IAAA,MAAA,MAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,SACA,QADA,EAEA,WAFA,EAGA,QAHA,QAIA,gBAJA;AAKA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAPA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,OAAA;AACA;AAHA,GAVA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,UAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,GAAA,GAAA,KAAA,KAAA,CAAA,qBAAA,EAAA,yCAAA,CAAA;AACA,MAAA,GAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,IAAA,CAAA,OAFA;AAEA;AACA,QAAA,MAAA,EAAA;AAHA,OAAA;AAKA,MAAA,GAAA,CAAA,SAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,GAAA;AACA,OAFA;AAGA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,aAAA,CAAA,YAAA,CAAA,CAAA;AACA;;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AAAA,QAAA,QAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;;AACA,UAAA;AACA,QAAA,SAAA,CAAA,MAAA,CAAA,IAAA,IAAA,CAAA,CAAA,KAAA,CAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA,EAAA,YAAA;AACA,OAFA,CAEA,OAAA,CAAA,EAAA;AAAA,YAAA,OAAA,OAAA,KAAA,WAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA;AAAA;;AACA,aAAA,KAAA;AACA,KAtBA;AAuBA,IAAA,WAvBA,uBAuBA,GAvBA,EAuBA,MAvBA,EAuBA,SAvBA,EAuBA;AACA,UAAA,SAAA,IAAA,IAAA,EAAA;AACA,eAAA,EAAA;AACA,OAFA,MAEA;AACA,YAAA,KAAA,GAAA,SAAA,IAAA,IAAA,GAAA,MAAA,CAAA,SAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,GAAA,OAAA,CAAA,gCAAA,EAAA,KAAA,CAAA,GAAA,SAAA;AACA,eAAA,KAAA;AACA;AACA;AA9BA;AAlBA,CAAA","sourcesContent":["<template>\n  <div class=\"detailPage\">\n  \t<ItemBox title=\"现金流流入\" class=\"baseItemBox\">\n      <template slot=\"right\">\n        <el-button  size=\"mini\" type=\"primary\" @click=\"exportExcel\" plain style=\"position: absolute;right: 60px;top: 20px;\"><i class=\"iconfont icon-xiazai1\" style=\"margin-right:5px;\"></i>现金流流入导出</el-button>\n        <span class=\"flodText\" @click=\"payment1 = !payment1\">{{!payment1?'展开':'收起'}}</span>\n      </template>\n      <el-table :data=\"data\" size=\"mini\"  id=\"out-table\" v-show=\"payment1\">\n        <el-table-column prop=\"期数\" label=\"期数\" width=80>\n        </el-table-column>\n        <el-table-column prop=\"处置中资产\" label=\"处置中资产\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n        <el-table-column prop=\"本期处置完毕资产\" label=\"本期处置完毕资产\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n        <el-table-column prop=\"流动性支持资金\" label=\"流动性支持资金\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n        <el-table-column prop=\"其他收入\" label=\"其他收入\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n        <el-table-column prop=\"合格投资\" label=\"合格投资\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n        <el-table-column prop=\"季度结息\" label=\"季度结息\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n        <el-table-column prop=\"合计\" label=\"合计\" :formatter=\"stateFormat\" min-width=140>\n        </el-table-column>\n      </el-table>\n  \t</ItemBox>\n  </div>\n</template>\n\n<script>\n  import advFilter from '@/components/common/AdvanceFilter.vue'\n  import dataGrid from '@/components/common/DataGrid.vue';\n  import dynamicTab from '@/mixins/dynamicTab.js';\n  import FileSaver from 'file-saver';\n  import ItemBox from '@/components/layout/ItemBox.vue';\n  import XLSX from 'xlsx';\n  import {mapState, mapMutations} from 'vuex';\n  import {\n    addClass,\n    removeClass,\n    hasClass\n  } from '@/utils/dom.js'\n  export default {\n  \tdata() {\n  \t\treturn {\n        data: [],\n        payment1:true\n  \t\t}\n  \t},\n  \tcomponents:{\n      ItemBox\n    },\n  \tcomputed:{\n  \t\tTrustID() {\n        return this.$store.state.productInfo.trustId;\n      },\n  \t},\n  \tcreated() {\n  \t\tthis.initInflow()\n  \t},\n  \tmethods:{\n  \t\tinitInflow() {\n  \t\t\tvar self = this;\n        var svc = this.$http('PortfolioManagement', 'DV.usp_GetPoolCashInflowSimpleByTrustId');\n        svc.AddParam({\n          Name: 'TrustID',\n          Value: self.TrustID, //4513,\n          DBType: 'int'\n        });\n        svc.ExecTable().then(res => {\n          this.data = res;\n        })\n      },\n      exportExcel () {\n         /* out-table关联导出的dom节点  */\n         var wb = XLSX.utils.table_to_book(document.querySelector('#out-table'))\n         /* get binary string as output */\n         var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' })\n         try {\n             FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), '现金流流入.xlsx')\n         } catch (e) { if (typeof console !== 'undefined') console.log(e, wbout) }\n         return wbout\n      },\n  \t\tstateFormat(row, column, cellValue) {\n  \t\t\tif(cellValue == null){\n  \t\t\t\treturn ''\n  \t\t\t}else{\n  \t\t\t\tlet money = cellValue != 'ND'?Number(cellValue).toFixed(2).toString().replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g, \"$&,\"):cellValue\n          return money;\n  \t\t\t}\n  \t\t},\n  \t}\n  }\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/product"}]}