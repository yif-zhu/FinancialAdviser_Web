{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\store\\modules\\dynamicTabs.js","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\store\\modules\\dynamicTabs.js","mtime":1604281046845},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* 动态标签栏 */\nexport default {\n  state: {\n    currentTab: null,\n    currentTabIndex: '',\n    tabs: [],\n    cacheTabs: [],\n    // 组件缓存\n    tabIndex: 0,\n    isActivated: false\n  },\n  mutations: {\n    // 新增或更新\n    addTab: function addTab(state, payload) {\n      if (_typeof(payload) !== 'object') return; // 默认自动打开\n\n      if (typeof payload.autoOpen === 'undefined') payload.autoOpen = true; // 默认允许关闭\n\n      if (typeof payload.closable === 'undefined') payload.closable = true;\n\n      if (payload.id === undefined) {\n        payload.id = ++state.tabIndex + '';\n      } else {\n        payload.id = payload.id + '';\n      }\n\n      var len = state.tabs.length;\n\n      for (var i = 0; i < len; i++) {\n        var tab = state.tabs[i];\n\n        if (tab.id !== undefined && tab.id === payload.id) {\n          if (payload.title) tab.title = payload.title;\n          if (payload.name) tab.name = payload.name;\n\n          if (tab.params !== undefined && payload.params !== undefined) {\n            // 相当于路由params属性\n            tab.params = payload.params;\n          }\n\n          if (tab.autoOpen) {\n            state.currentTab = tab;\n            state.currentTabIndex = tab.id;\n          }\n\n          return;\n        }\n      }\n\n      state.tabs.push(payload); // 在router-view模式下是否缓存（for keep-alive）\n\n      if (payload.isCache && state.cacheTabs.indexOf(payload.id) === -1) {\n        state.cacheTabs.push(payload.id);\n      }\n\n      if (payload.autoOpen) {\n        state.currentTab = payload;\n        state.currentTabIndex = payload.id;\n      }\n    },\n    setTab: function setTab(state, payload) {\n      if (_typeof(payload) !== 'object') return;\n      var len = state.tabs.length;\n\n      for (var i = 0; i < len; i++) {\n        var tab = state.tabs[i];\n\n        if (tab.id !== undefined && tab.id === payload.id) {\n          tab.name = payload.name;\n        }\n      }\n    },\n    setCurrentTab: function setCurrentTab(state, payload) {\n      if (_typeof(payload) !== 'object') return;\n      state.currentTab = payload;\n    },\n    setCurrentTabIndex: function setCurrentTabIndex(state, payload) {\n      state.currentTabIndex = payload;\n    },\n    // 本地缓存\n    setCacheTabs: function setCacheTabs(state) {\n      localStorage.setItem('dynamicTabs', JSON.stringify(state));\n    },\n    removeCacheTabs: function removeCacheTabs() {\n      localStorage.removeItem('dynamicTabs');\n    },\n    removeTab: function removeTab(state, id) {\n      if (typeof id !== 'string') id = id.toString();\n      var len = state.tabs.length;\n\n      for (var i = 0; i < len; i++) {\n        var tab = state.tabs[i];\n\n        if (tab.id === id) {\n          if (state.currentTabIndex === id) {\n            var nextTab = state.tabs[i + 1] || state.tabs[i - 1];\n\n            if (nextTab) {\n              state.currentTab = nextTab;\n              state.currentTabIndex = nextTab.id;\n            }\n          }\n\n          if (tab.isCache) {\n            var cacheIndex = state.cacheTabs.indexOf(tab.id);\n\n            if (cacheIndex > -1) {\n              state.cacheTabs.splice(cacheIndex, 1);\n            }\n          }\n\n          state.tabs.splice(i, 1);\n          return;\n        }\n      }\n    },\n    setAllTabs: function setAllTabs(state) {\n      var tabs = localStorage.getItem('dynamicTabs');\n      var payload = typeof tabs === 'string' ? JSON.parse(tabs) : null;\n      if (!payload) return;\n      state.tabs = payload.tabs;\n      state.cacheTabs = payload.cacheTabs;\n      state.currentTab = payload.currentTab;\n      state.currentTabIndex = payload.currentTabIndex;\n      state.tabIndex = payload.tabIndex; // 动态标签是新鲜的 （此属性用于拿到最新tabs数据后做一些新增操作）\n\n      state.isActivated = true;\n    },\n    removeAllTabs: function removeAllTabs(state) {\n      state.tabs = [];\n      state.cacheTabs = [];\n      state.currentTab = null;\n      state.currentTabIndex = '';\n      state.tabIndex = 0; // 动态标签凋谢了\n\n      state.isActivated = false;\n    }\n  }\n};",{"version":3,"sources":["C:/Users/yif_z/Desktop/DealViewer/src/store/modules/dynamicTabs.js"],"names":["state","currentTab","currentTabIndex","tabs","cacheTabs","tabIndex","isActivated","mutations","addTab","payload","autoOpen","closable","id","undefined","len","length","i","tab","title","name","params","push","isCache","indexOf","setTab","setCurrentTab","setCurrentTabIndex","setCacheTabs","localStorage","setItem","JSON","stringify","removeCacheTabs","removeItem","removeTab","toString","nextTab","cacheIndex","splice","setAllTabs","getItem","parse","removeAllTabs"],"mappings":"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","sourcesContent":["/* 动态标签栏 */\nexport default {\n  state: {\n    currentTab: null,\n    currentTabIndex:'',\n    tabs: [],\n    cacheTabs: [], // 组件缓存\n    tabIndex: 0,\n    isActivated: false\n  },\n  mutations: {\n    // 新增或更新\n    addTab(state, payload) {\n      if(typeof payload !== 'object') return;\n      // 默认自动打开\n      if(typeof payload.autoOpen === 'undefined') payload.autoOpen = true;\n      // 默认允许关闭\n      if(typeof payload.closable === 'undefined') payload.closable = true;\n      if(payload.id === undefined) {\n        payload.id = ++state.tabIndex + '';\n      }else{\n        payload.id = payload.id + '';\n      }\n      let len = state.tabs.length;\n      for (let i = 0; i < len; i++) {\n        let tab = state.tabs[i];\n        if (tab.id !== undefined &&\n          tab.id === payload.id) {\n          if(payload.title) tab.title = payload.title;\n          if(payload.name) tab.name = payload.name;\n          if(tab.params !== undefined &&\n            payload.params !== undefined) {\n            // 相当于路由params属性\n            tab.params = payload.params;\n          }\n          if(tab.autoOpen) {\n            state.currentTab = tab;\n            state.currentTabIndex = tab.id;\n          }\n          return;\n        }\n      }\n      state.tabs.push(payload);\n      // 在router-view模式下是否缓存（for keep-alive）\n      if(payload.isCache && (state.cacheTabs.indexOf(payload.id) === -1)) {\n        state.cacheTabs.push(payload.id);\n      }\n      if(payload.autoOpen) {\n        state.currentTab = payload;\n        state.currentTabIndex = payload.id;\n      }\n    },\n    setTab(state,payload) {\n      if(typeof payload !== 'object') return;\n      let len = state.tabs.length;\n      for (let i = 0; i < len; i++) {\n        let tab = state.tabs[i];\n        if (tab.id !== undefined &&\n          tab.id === payload.id) {\n          tab.name = payload.name;\n        }\n      }\n    },\n    setCurrentTab(state, payload) {\n      if(typeof payload !== 'object') return;\n      state.currentTab = payload;\n    },\n    setCurrentTabIndex(state, payload) {\n      state.currentTabIndex = payload;\n    },\n    // 本地缓存\n    setCacheTabs(state) {\n      localStorage.setItem('dynamicTabs', JSON.stringify(state));\n    },\n    removeCacheTabs() {\n      localStorage.removeItem('dynamicTabs');\n    },\n    removeTab(state, id) {\n      if(typeof id !== 'string') id = id.toString();\n      let len = state.tabs.length;\n      for(let i = 0 ; i < len; i++) {\n        let tab = state.tabs[i];\n        if(tab.id === id) {\n          if (state.currentTabIndex === id) {\n            let nextTab = state.tabs[i + 1] || state.tabs[i - 1];\n            if(nextTab) {\n              state.currentTab = nextTab;\n              state.currentTabIndex = nextTab.id;\n            }\n          }\n          if(tab.isCache) {\n            let cacheIndex = state.cacheTabs.indexOf(tab.id);\n            if(cacheIndex > -1) {\n              state.cacheTabs.splice(cacheIndex, 1);\n            }\n          }\n          state.tabs.splice(i, 1);\n          return;\n        }\n      }\n    },\n    setAllTabs(state) {\n      let tabs = localStorage.getItem('dynamicTabs');\n      let payload = (typeof tabs === 'string') ? JSON.parse(tabs) : null;\n      if(!payload) return;\n      state.tabs = payload.tabs;\n      state.cacheTabs = payload.cacheTabs;\n      state.currentTab = payload.currentTab;\n      state.currentTabIndex = payload.currentTabIndex;\n      state.tabIndex = payload.tabIndex;\n      // 动态标签是新鲜的 （此属性用于拿到最新tabs数据后做一些新增操作）\n      state.isActivated = true;\n    },\n    removeAllTabs(state) {\n      state.tabs = [];\n      state.cacheTabs = [];\n      state.currentTab = null;\n      state.currentTabIndex = '';\n      state.tabIndex = 0;\n      // 动态标签凋谢了\n      state.isActivated = false;\n    },\n  }\n};\n"]}]}