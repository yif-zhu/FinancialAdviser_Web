{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\admin\\CreateTrust.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\admin\\CreateTrust.vue","mtime":1604281045783},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import csvc from \"@/api/CommonService.js\";\n\timport taskprocess from '@/api/TaskProcess';\n\timport {\n\t\tmapState\n\t} from 'vuex';\n    export default {\n        props: {\n            onDialogClosed: {\n                type: Function\n            },\n            trustID: {\n                type: [Number, String]\n            }\n        },\n        data() {\n            return {\n                formLabelWidth: '90px',\n                trustCodeDisabled: false,\n\n                marketPlaceOptions: [],\n                assetTypeOptions: [],\n                regulatoryOrgOptions: [],\n                marketCategoryOptions: [],\n                basicAssetTypeOptions: [],\n                collectionMethodOptions: [],\n\n                trustCode: null,\n                trustName: null,\n                isMarketProduct: true,\n                marketCategory: null,\n                regulatoryOrg: null,\n                marketPlace: null,\n                assetType: null,\n                basicAssetType: null,\n                collectionMethod: null,\n\t\t\t\ttrustStatus: null,\n\t\t\t\tliquidatedDate: null,\n\t\t\t\tTrustStatusCode:[],\n            };\n        },\n        mounted() {\n\t\t\tthis.loadTrustBasicInfo();\n\t\t\tthis.loadTrustStatusCode();\n        },\n\t\tcomputed:{\n\t\t\t...mapState('user',['userName']),\n\t\t},\n        methods: {\n            loadTrustBasicInfo() {\n                var self = this;\n                var svc = new csvc(\"PortfolioManagement\", \"DV.GetBasicInfo\", 1);\n                if (this.trustID && this.trustID != 0) {\n                    //this.trustCodeDisabled = true;\n                    svc.AddParam({\n                        Name: \"TrustID\",\n                        Value: self.trustID,\n                        DBType: \"int\"\n                    });\n                }\n                svc.ExecTables().then(res => {\n                    if (!res || res.length < 3) {\n                        self.$message.error('加载产品信息出错');\n                        return;\n                    }\n                    self.marketCategoryOptions = res[0];\n                    self.regulatoryOrgOptions = res[1];\n                    self.marketPlaceOptions = res[2];\n                    self.assetTypeOptions = res[3];\n                    self.basicAssetTypeOptions = res[4];\n                    self.collectionMethodOptions = res[5];\n                    if (res[6] && res[6].length > 0) {\n                        let t = res[6][0];\n                        self.trustCode = t.TrustCode;\n                        self.trustName = t.TrustName;\n                        self.isMarketProduct = t.IsMarketProduct == 1;\n                        self.marketCategory = t.MarketCategory;\n                        self.marketPlace = t.MarketPlace;\n                        self.regulatoryOrg = t.RegulatoryOrg;\n                        self.assetType = t.AssetType;\n                        self.basicAssetType = t.BasicAssetType;\n                        self.collectionMethod = t.CollectionMethod;\n                        self.trustStatus = t.TrustStatus;\n                        self.liquidatedDate = t.LiquidatedDate;\n                    }\n                });\n            },\n\t\t\tloadTrustStatusCode(){\n\t\t\t\tvar self = this;\n\t\t\t\tvar svc = new csvc(\"PortfolioManagement\", \"DV.ItemData_GetByCategoryCode\", 1);\n\t\t\t\tsvc.AddParam({\n\t\t\t\t    Name: \"CategoryCode\",\n\t\t\t\t    Value: 'TrustStatus',\n\t\t\t\t    DBType: \"string\"\n\t\t\t\t});\n\t\t\t\tsvc.ExecTable().then(res=>{\n\t\t\t\t\tself.TrustStatusCode=res;\n\t\t\t\t});\n\t\t\t},\n            cancelCreate() {\n                if (this.onDialogClosed) {\n                    this.onDialogClosed(0);\n                }\n            },\n            createOrUpdateTrust() {\n                let self = this;\n                if (!this.trustCode || !this.trustName) {\n                    self.$message.error('产品名称和代码为必填项');\n                    return;\n                }\n                if (this.isMarketProduct && (!this.marketCategory || !this.regulatoryOrg ||\n                        !this.marketPlace || !this.assetType || !this.basicAssetType || !this.collectionMethod)) {\n                    self.$message.error('市场产品，以下分类属性选填');\n                    return;\n                }\n\n                let regCode = new RegExp(\"^[a-zA-Z]([a-zA-Z0-9])*(-[0-9]+)*$\");\n                if (!regCode.test(this.trustCode)) {\n                    self.$message.error('产品代码不规范');\n                    return;\n                }\n                let reg = new RegExp(\"[`~!@#$^&*()=_|{}':;',\\\\[\\\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]\");\n                if (reg.test(this.trustName)) {\n                    self.$message.error('产品名称不规范');\n                    return;\n                }\n\n                var svc = new csvc(\"PortfolioManagement\", \"DV.TrustInfo_Update\");\n                svc.AddParam({\n                    Name: \"TrustID\",\n                    Value: self.trustID,\n                    DBType: \"int\"\n                });\n                svc.AddParam({\n                    Name: \"TrustCode\",\n                    Value: self.trustCode,\n                    DBType: \"string\"\n                });\n                svc.AddParam({\n                    Name: \"TrustName\",\n                    Value: self.trustName,\n                    DBType: \"string\"\n                });\n                svc.AddParam({\n                    Name: \"IsMarketProduct\",\n                    Value: self.isMarketProduct,\n                    DBType: \"bool\"\n                });                \n                svc.AddParam({\n                    Name: \"MarketCategory\",\n                    Value: self.marketCategory,\n                    DBType: \"string\"\n                });\n                svc.AddParam({\n                    Name: \"RegulatoryOrg\",\n                    Value: self.regulatoryOrg,\n                    DBType: \"string\"\n                });                \n                svc.AddParam({\n                    Name: \"MarketPlace\",\n                    Value: self.marketPlace,\n                    DBType: \"string\"\n                });\n                svc.AddParam({\n                    Name: \"AssetType\",\n                    Value: self.assetType,\n                    DBType: \"string\"\n                });\n                svc.AddParam({\n                    Name: \"BasicAssetType\",\n                    Value: self.basicAssetType,\n                    DBType: \"string\"\n                });\n                svc.AddParam({\n                    Name: \"CollectionMethod\",\n                    Value: self.collectionMethod,\n                    DBType: \"string\"\n                }); \n                svc.AddParam({\n                    Name: \"TrustStatus\",\n                    Value: self.trustStatus,\n                    DBType: \"string\"\n                });\n\t\t\t\tif(self.trustStatus === 'Liquidated') {\n\t\t\t\t\tif(!self.liquidatedDate) {\n\t\t\t\t\t\tself.$message.error('请选择清算日期！');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tsvc.AddParam({\n\t\t\t\t\t\tName: \"LiquidatedDate\",\n\t\t\t\t\t\tValue: self.liquidatedDate,\n\t\t\t\t\t\tDBType: \"string\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsvc.AddParam({\n\t\t\t\t\tName: \"UserName\",\n\t\t\t\t\tValue: self.userName,\n\t\t\t\t\tDBType: \"string\"\n\t\t\t\t});\n                svc.ExecResult().then(res => {\n\t\t\t\t\tres = parseInt(res);\n\t\t\t\t\tvar tp = new taskprocess(\n\t\t\t\t\t\t\"Task\",\n\t\t\t\t\t\t\"FixedIncomeSuite_AddNewTrustFromDealViewer\",\n\t\t\t\t\t\t\"TaskProcess\"\n\t\t\t\t\t);\n\t\t\t\t\t\n                    if (isNaN(res)) {\n                        self.$message.error('更新产品信息发生系统内部错误');\n                        return;\n                    }\n                    if (res == 0) {\n                        self.$message.error('系统中已存在相同名称或相同代码的产品');\n                        return;\n                    }\n\t\t\t\t\tif(res!=self.trustID){\n\t\t\t\t\t\tself.$message.success('产品添加成功');\n\t\t\t\t\t\tself.trustID=res;\n\t\t\t\t\t\ttp.AddVariableItem(\"TrustID\", res, \"String\");\n\t\t\t\t\t\ttp.RunTask();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tself.$message.success('产品信息更新成功');\n\t\t\t\t\t\ttp.AddVariableItem(\"TrustID\", self.trustID, \"String\");\n\t\t\t\t\t\ttp.RunTask();\n\t\t\t\t\t}\n                    if (self.onDialogClosed) {\n                        self.onDialogClosed(res);\n                    }\n                });\n            }\n        }\n    };\n\n",null]}