{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\product\\PaymentHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\product\\PaymentHistory.vue","mtime":1604281047867},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Highcharts from 'highcharts';\nimport ItemBox from '@/components/layout/ItemBox.vue';\nimport {mapState, mapMutations} from 'vuex';\nimport utils from '@/utils/index';\nlet o = null;\nexport default {\n  data() {\n    return {\n      allot: [],\n      allotUpdate:[],\n      payment: [],\n      period: '',\n      paymentShow:true,\n      allotShow:true,\n      chartDestAr:[],\n      outPayment:[],\n      monetaryUnit:0,\n      allotSelect:'-1',\n      bondEach:[],\n      showChart: false,\n    }\n  },\n  components:{\n    ItemBox\n  },\n  created() {\n    this.initAllot();\n    if (this.AssetType == 'NPL') {\n      this.initOutPayment()\n    }else{\n      this.initPayment()\n    }\n  },\n  computed: {\n    ...mapState('productInfo',['productDetail']),\n    TrustID() {\n      return this.$store.state.productInfo.trustId;\n    },\n    AssetType() {\n      return this.productDetail.AssetType\n    },\n    AssetTypeB() {\n      if (this.AssetType == 'NPL') {\n        return true\n      }else{\n        return false\n      }\n    }\n  },\n  watch: {\n    AssetType(v) {\n      if (v == 'NPL') {\n      this.initOutPayment()\n      }else{\n        this.initPayment()\n      }\n    },\n\n  },\n  methods: {\n    openChart() {\n      this.showChart = true;\n      if(this.$_tempChart) {\n        this.$_tempChart.destroy()\n      }\n      this.$nextTick(() => {\n        this.$_tempChart = Highcharts.chart('dialogChart', o);\n      })\n    },\n    numUnit(num){\n      if (num == '0.00') {\n        return 0;\n      }\n      let money = num && num != 'ND'?(num*(this.monetaryUnit?0.0001:1)).toFixed(2).toString().replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g, \"$&,\"):num\n      return money;\n    },\n    unitSwitch(unit) {\n      this.monetaryUnit = unit;\n    },\n    allotChange() {\n      console.log(this.allotSelect)\n      if (this.allotSelect == '-1') {\n        this.allotUpdate = this.allot\n      }else if(String(this.allotSelect).indexOf('each')>-1) {\n        let id = this.allotSelect.split('each')[0];\n        this.allotUpdate = this.bondEach.filter((item) => {\n          return item.TrustBondId == id\n        })\n      }else{\n        for (var i = 0; i < this.chartDestAr.length; i++) {\n          if (this.allotSelect == this.chartDestAr[i].TrustBondID) {\n            this.allotUpdate = this.chartDestAr[i].dataTable\n          }\n        }\n      }\n    },\n    flodFun(name) {\n      if (name == 'allot') {\n        this.allotShow = !this.allotShow\n      }else if(name == 'payment') {\n        this.paymentShow = !this.paymentShow\n      }\n    },\n    chartDestArFun(res) {\n      var self = this;\n      var map = {},dest = [];\n      for (var i = 0; i < res.length; i++) {\n        var ai = res[i];\n        ai.date = ai.PaymentDate?ai.PaymentDate.S2Date():ai.PaymentDate;\n        ai.key = i+1;\n        if (!map[ai.TrustBondID]) {\n          dest.push([{\n            Interest: ai.Interest,\n            InterestLeftOver: ai.InterestLeftOver,\n            Principal: ai.Principal,\n            RemainingBalance: ai.RemainingBalance,\n            RemainingBalances:ai.RemainingBalances,\n            ShortName: ai.ShortName,\n            TrustBondID: ai.TrustBondID,\n            TrustPeriod: ai.TrustPeriod,\n            date:ai.date,\n            key:ai.key\n          }]);\n          map[ai.TrustBondID] = ai;\n        } else {\n          for (var j = 0; j < dest.length; j++) {\n            var dj = dest[j];\n            if (dj[0].TrustBondID == ai.TrustBondID) {\n              dj.push(ai);\n              break;\n            }\n          }\n        }\n      }\n      console.log(dest)\n      var charAr = []\n      var categoriesX = []\n      for (var i = 0; i < dest.length; i++) {\n        charAr.push({\n          name:dest[i][0].ShortName,\n          TrustBondID:dest[i][0].TrustBondID,\n          data:[],\n          dataTable:[]\n        })\n        for (var a = 0; a < dest[i].length; a++) {\n          charAr[i].data.push(parseFloat((dest[i][a].RemainingBalances/10000).toFixed(4)))\n          charAr[i].dataTable.push(dest[i][a])\n          if (i==dest.length-1) {\n            categoriesX.push(a+1+'期')\n          }\n\n        }\n      }\n      self.chartDestAr = charAr;\n      categoriesX = dest[dest.length-1] ? dest[dest.length-1].map(v => v.TrustPeriod+'期') : [];\n      self.highChartFun(categoriesX,charAr)\n    },\n    initOutPayment() {\n      var self = this;\n      var svc = this.$http('PortfolioManagement', 'DV.usp_GetPoolCashOutflowByTrustId');\n      svc.AddParam({\n        Name: 'TrustId',\n        Value: self.TrustID,\n        DBType: 'int'\n      });\n      svc.ExecTable().then(res => {\n        this.outPayment = res\n      })\n    },\n    initPayment() {\n      var self = this;\n      var svc = this.$http('PortfolioManagement', 'DV.FeeStructure_Get');\n      svc.AddParam({\n        Name: 'TrustID',\n        Value: self.TrustID,\n        DBType: 'int'\n      });\n      svc.ExecTable().then(res => {\n        for (var i = 0; i < res.length; i++) {\n          Object.keys(res[i]).forEach((key) => {\n            if (key != 'ReceivingDays' && key != 'PaymentDays' && key != 'Period') {\n              res[i][key] = res[i][key]?res[i][key].toLocaleString():res[i][key]\n            }\n          })\n        }\n        self.payment = res\n\n      })\n    },\n    initAllot() {\n      var self = this;\n      var svc = this.$http('PortfolioManagement', 'DV.FactBondPayment_Get');\n      svc.AddParam({\n        Name: 'TrustID',\n        Value: self.TrustID,\n        DBType: 'int'\n      });\n      svc.ExecTables().then(ress => {\n        if (!ress.length) {\n          return\n        }\n        for (var a = 0; a < ress.length; a++) {\n          for (var i = 0; i < ress[a].length; i++) {\n            ress[a][i].RemainingBalances =  ress[a][i].RemainingBalance\n            ress[a][i].RemainingBalance = utils.formatCurrency(ress[a][i].RemainingBalance)\n            ress[a][i].Principal = utils.formatCurrency(ress[a][i].Principal)\n            ress[a][i].InterestLeftOver = utils.formatCurrency(ress[a][i].InterestLeftOver)\n            ress[a][i].Interest = utils.formatCurrency(ress[a][i].Interest)\n            if (a == 1) {\n              ress[a][i].date = ress[a][i].PaymentDate?ress[a][i].PaymentDate.S2Date():ress[a][i].PaymentDate;\n              ress[a][i].TrustPeriod = ress[a][i].PaymentPeriod\n            }\n          }\n\n        }\n        this.bondEach = ress[1]\n        let res = ress[0]\n        self.chartDestArFun(res)\n        var map = {},dest = [];\n        for (var i = 0; i < res.length; i++) {\n          var ai = res[i];\n          ai.date = ai.PaymentDate?ai.PaymentDate.S2Date():ai.PaymentDate;\n          ai.key = i+1;\n          if(ai.TrustPeriod < 0) continue;\n          if (!map[ai.TrustPeriod]) {\n            dest.push([{\n              Interest: ai.Interest,\n              InterestLeftOver: ai.InterestLeftOver,\n              Principal: ai.Principal,\n              RemainingBalance: ai.RemainingBalance,\n              ShortName: ai.ShortName,\n              TrustBondID: ai.TrustBondID,\n              TrustPeriod: ai.TrustPeriod,\n              date:ai.date,\n              key:ai.key\n            }]);\n            map[ai.TrustPeriod] = ai;\n          } else {\n            for (var j = 0; j < dest.length; j++) {\n              var dj = dest[j];\n              if (dj[0].TrustPeriod == ai.TrustPeriod) {\n                dj.push(ai);\n                break;\n              }\n            }\n          }\n        }\n        if (dest.length>0) {\n          self.period = dest[0][0].TrustPeriod\n        }else {\n          self.period = ''\n        }\n        var levelAr = []\n        for (var i = 0; i < dest.length; i++) {\n          dest[i][0].children =[]\n          levelAr.push(dest[i][0])\n        }\n        for (var i = 0; i < levelAr.length; i++) {\n          levelAr[i].children = dest[i].slice(1)\n        }\n        self.allot = levelAr\n        self.allotUpdate = levelAr\n        console.log(levelAr)\n        // highChart数据\n\n\n      })\n    },\n    stateFormat(row, column, cellValue) {\n      if(cellValue == null){\n        return ''\n      }else{\n        cellValue += \"\";\n        if (!cellValue.includes(\".\")) cellValue += \".\";\n        return cellValue\n          .replace(/(\\d)(?=(\\d{3})+\\.)/g, function($0, $1) {\n            return $1 + \",\";\n          })\n          .replace(/\\.$/, \"\");\n      }\n    },\n    highChartFun(categoriesX,data) {\n      o = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: ''\n        },\n        subtitle: {\n          text: ''\n        },\n        yAxis: {\n          title: {\n            text: '期末余额（万元）'\n          },\n          labels: {\n            format: '{value:.,0f}'\n          }\n        },\n        xAxis: {\n          categories:categoriesX\n        },\n        exporting: { enabled: false },//隐藏导出图片\n        credits: { enabled: false },//隐藏highcharts的站点标志\n        plotOptions: {\n          // series: {\n          //   label: {\n          //     connectorAllowed: false\n          //   },\n          //   pointStart: 2010\n          // }\n        },\n        tooltip: {\n          // head + 每个 point + footer 拼接成完整的 table\n          headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n          pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}(万元): </td>' +\n          '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\n          footerFormat: '</table>',\n          //shared: true,\n          useHTML: true\n        },\n        series: data,\n      }\n      Highcharts.chart('containerChart', o);\n      Highcharts.setOptions({\n        lang: {\n          thousandsSep: ','\n        }\n      });\n    }\n  }\n}\n\n",{"version":3,"sources":["PaymentHistory.vue"],"names":[],"mappingsfile":"PaymentHistory.vue","sourceRoot":"src/views/product","sourcesContent":["<template>\n  <div class=\"detailPage\">\n    <ItemBox title=\"收益分配记录\">\n      <template slot=\"right\">\n        <span class=\"flodText\" @click=\"flodFun('allot')\">{{!allotShow?'展开':'收起'}}</span>\n      </template>\n      <div style=\"display:flex;\" v-show=\"allotShow\">\n        <div class=\"leftTableF\">\n          <span>切换证券显示分配记录：</span>\n          <el-select v-model=\"allotSelect\" placeholder=\"请选择\" @change=\"allotChange\">\n            <el-option key=\"-1\" label=\"全部\" value=\"-1\"/>\n            <el-option\n              v-for=\"item in chartDestAr\"\n              :key=\"item.TrustBondID\"\n              :label=\"item.name\"\n              :value=\"item.TrustBondID\"/>\n              <el-option\n              v-for=\"item in chartDestAr\"\n              :key=\"item.TrustBondID+'0'\"\n              :label=\"item.name+'-每份'\"\n              :value=\"item.TrustBondID+'each'\"/>\n          </el-select>\n        <el-table :data=\"allotUpdate\" row-key=\"key\" height=\"360px\" :key=\"allotSelect\" class=\"syfpjlTable\">\n          <el-table-column prop=\"TrustPeriod\" label=\"期数\" width=\"60\"></el-table-column>\n          <el-table-column prop=\"ShortName\" label=\"债券简称\"></el-table-column>\n          <el-table-column prop=\"Principal\" label=\"本金支付（元）\"></el-table-column>\n          <el-table-column prop=\"Interest\" label=\"利息支付（元）\"></el-table-column>\n          <el-table-column prop=\"RemainingBalance\" label=\"期末余额（元）\"></el-table-column>\n          <el-table-column prop=\"date\" label=\"兑付日期\"></el-table-column>\n          <!-- <el-table-column prop=\"InterestLeftOver\" label=\"顺延至下期利息（元）\" min-width=\"100\"></el-table-column> -->\n        </el-table>\n        </div>\n        <div  class=\"rightChart\" v-show=\"allot.length>0\">\n          <div class=\"fullscreen-button\">\n            <el-button type=\"text\" @click=\"openChart\">图表全屏</el-button>\n          </div>\n          <div id=\"containerChart\"></div>\n        </div>\n      </div>\n      <div v-show=\"!allotShow\" class=\"fold-content-tip\">内容已被隐藏，可点击右上方按钮展开</div>\n    </ItemBox>\n    <ItemBox title=\"费用支付记录\" >\n      <template slot=\"right\">\n        <span class=\"flodText\" @click=\"flodFun('payment')\">{{!paymentShow?'展开':'收起'}}</span>\n      </template>\n      <div v-show=\"paymentShow\">\n        <div class=\"unitSwitch\">切换金额单位：<span @click=\"unitSwitch(0)\" :class=\"!monetaryUnit?'active':''\">元</span> <span class=\"fg\">/</span> <span @click=\"unitSwitch(1)\"  :class=\"monetaryUnit?'active':''\">万元</span></div>\n        <div v-if=\"AssetTypeB\" key=\"type-a\">\n          <el-table :data=\"outPayment\" style=\"width: 100%\"  height=\"360px\">\n            <el-table-column prop=\"PaymentPeriod\" label=\"期数\" width=\"50\"></el-table-column>\n            <el-table-column prop=\"Tax\" :label=\"'税收('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"110\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Tax)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"AgentPayment\" :label=\"'代理兑付费用('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.AgentPayment)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Issuance_fee\" :label=\"'发行费用('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Issuance_fee)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Trustee_Pay\" :label=\"'受托机构报酬('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Trustee_Pay)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"FundCustodian_Pay\" :label=\"'资金保管机构报酬('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"160\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.FundCustodian_Pay)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Disposal_cost\" :label=\"'处置费用('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Disposal_cost)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"LoanService_Pay\" :label=\"'贷款服务机构报酬('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"160\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.LoanService_Pay)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Audit_fees\" :label=\"'审计费('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Audit_fees)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"TrackService_fee\" :label=\"'跟踪评级服务费('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"160\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.TrackService_fee)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Other_expenses\" :label=\"'其他费用支出('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Other_expenses)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Expenses\" :label=\"'费用支出('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Expenses)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Total_Amount\" :label=\"'总计('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Total_Amount)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Total_interest\" :label=\"'证券本金总支出('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"160\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Total_interest)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Total_principal\" :label=\"'证券利息总支出('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"160\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Total_principal)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Secondary_income\" :label=\"'次级档收益('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"130\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Secondary_income)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Secondary_capitalCost\" :label=\"'次级档固定资金成本('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"190\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Secondary_capitalCost)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"Secondary_totalRevenue\" :label=\"'次级档总收益('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.Secondary_totalRevenue)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"SpecialTrust_Benefits\" :label=\"'特别信托收益权特别信托利益('+(monetaryUnit?'万元':'元')+')'\" :formatter=\"stateFormat\" width=\"230\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.SpecialTrust_Benefits)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"RevolvingPurchase\" :label=\"'持续购买资产支出（循环购买金额/'+(monetaryUnit?'万元':'元')+'）'\" :formatter=\"stateFormat\" width=\"210\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.RevolvingPurchase)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"PrincipalBalance\" :label=\"'转存下期本金（结余存入本金账户金额/'+(monetaryUnit?'万元':'元')+'）'\" :formatter=\"stateFormat\" width=\"230\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.PrincipalBalance)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"InterestBalance\" :label=\"'转存下期收入（结余存入利息账户金额/'+(monetaryUnit?'万元':'元')+'）'\" :formatter=\"stateFormat\" width=\"230\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.InterestBalance)}}\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        <div v-else key=\"type-b\">\n          <el-table :data=\"payment\" style=\"width: 100%\" height=\"360px\">\n            <el-table-column prop=\"PaymentPeriodID\" label=\"期数\" width=\"50\"></el-table-column>\n            <el-table-column prop=\"AssetInterestCollected\" :label=\"'资产池利息收入('+(monetaryUnit?'万元':'元')+')'\" min-width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.AssetInterestCollected)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"TotalInterestCollected\" :label=\"'全部利息回收款('+(monetaryUnit?'万元':'元')+')'\" min-width=\"140\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.TotalInterestCollected)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"TaxFee\" :label=\"'税收('+(monetaryUnit?'万元':'元')+')'\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.TaxFee)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"TotalFee\" :label=\"'费用总支出('+(monetaryUnit?'万元':'元')+')'\" width=\"130\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.TotalFee)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"PaymentDays\" label=\"计息期间(天)\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                {{scope.row.PaymentDays?Number(scope.row.PaymentDays):scope.row.PaymentDays}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"ReceivingDays\" label=\"收款期间(天)\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                {{scope.row.ReceivingDays?Number(scope.row.ReceivingDays):scope.row.ReceivingDays}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"AssetOpeningBalance\" :label=\"'期初资产池未还本金('+(monetaryUnit?'万元':'元')+')'\" min-width=\"170\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.AssetOpeningBalance)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"BondOpeningBalance\" :label=\"'证券未还本金('+(monetaryUnit?'万元':'元')+')'\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.BondOpeningBalance)}}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"BondOpeningBalancePriority\" :label=\"'证券未还本金(优先级/'+(monetaryUnit?'万元':'元')+')'\" min-width=\"170\">\n              <template slot-scope=\"scope\">\n                {{numUnit(scope.row.BondOpeningBalancePriority)}}\n              </template>\n            </el-table-column>\n            <!-- <el-table-column prop=\"AssetAmount\" label=\"资产池总规模（元）\" width=\"130\"></el-table-column>\n            <el-table-column prop=\"TotalOfferAmount\" label=\"证券发行总规模（元）\" width=\"130\"></el-table-column> -->\n          </el-table>\n          </div>\n      </div>\n      <div v-show=\"!paymentShow\" class=\"fold-content-tip\">内容已被隐藏，可点击右上方按钮展开</div>\n    </ItemBox>\n    <base-dialog :visible.sync=\"showChart\" title=\"图表\" fullscreen :showFullscreen=\"false\">\n      <div id=\"dialogChart\" style=\"height: 90vh;\"></div>\n    </base-dialog>\n  </div>\n</template>\n\n<script>\n  import Highcharts from 'highcharts';\n  import ItemBox from '@/components/layout/ItemBox.vue';\n  import {mapState, mapMutations} from 'vuex';\r\n  import utils from '@/utils/index';\n  let o = null;\n  export default {\n    data() {\n      return {\n        allot: [],\n        allotUpdate:[],\n        payment: [],\n        period: '',\n        paymentShow:true,\n        allotShow:true,\n        chartDestAr:[],\n        outPayment:[],\n        monetaryUnit:0,\n        allotSelect:'-1',\n        bondEach:[],\n        showChart: false,\n      }\n    },\n    components:{\n      ItemBox\n    },\n    created() {\n      this.initAllot();\n      if (this.AssetType == 'NPL') {\n        this.initOutPayment()\n      }else{\n        this.initPayment()\n      }\n    },\n    computed: {\n      ...mapState('productInfo',['productDetail']),\n      TrustID() {\n        return this.$store.state.productInfo.trustId;\n      },\n      AssetType() {\n        return this.productDetail.AssetType\n      },\n      AssetTypeB() {\n        if (this.AssetType == 'NPL') {\n          return true\n        }else{\n          return false\n        }\n      }\n    },\n    watch: {\n      AssetType(v) {\n        if (v == 'NPL') {\n        this.initOutPayment()\n        }else{\n          this.initPayment()\n        }\n      },\n\n    },\n    methods: {\n      openChart() {\n        this.showChart = true;\n        if(this.$_tempChart) {\n          this.$_tempChart.destroy()\n        }\n        this.$nextTick(() => {\n          this.$_tempChart = Highcharts.chart('dialogChart', o);\n        })\n      },\n      numUnit(num){\n        if (num == '0.00') {\n          return 0;\n        }\n        let money = num && num != 'ND'?(num*(this.monetaryUnit?0.0001:1)).toFixed(2).toString().replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g, \"$&,\"):num\n        return money;\n      },\n      unitSwitch(unit) {\n        this.monetaryUnit = unit;\n      },\n      allotChange() {\n        console.log(this.allotSelect)\n        if (this.allotSelect == '-1') {\n          this.allotUpdate = this.allot\n        }else if(String(this.allotSelect).indexOf('each')>-1) {\n          let id = this.allotSelect.split('each')[0];\n          this.allotUpdate = this.bondEach.filter((item) => {\n            return item.TrustBondId == id\n          })\n        }else{\n          for (var i = 0; i < this.chartDestAr.length; i++) {\n            if (this.allotSelect == this.chartDestAr[i].TrustBondID) {\n              this.allotUpdate = this.chartDestAr[i].dataTable\n            }\n          }\n        }\n      },\n      flodFun(name) {\n        if (name == 'allot') {\n          this.allotShow = !this.allotShow\n        }else if(name == 'payment') {\n          this.paymentShow = !this.paymentShow\n        }\n      },\n      chartDestArFun(res) {\n        var self = this;\n        var map = {},dest = [];\n        for (var i = 0; i < res.length; i++) {\n          var ai = res[i];\n          ai.date = ai.PaymentDate?ai.PaymentDate.S2Date():ai.PaymentDate;\n          ai.key = i+1;\n          if (!map[ai.TrustBondID]) {\n            dest.push([{\n              Interest: ai.Interest,\n              InterestLeftOver: ai.InterestLeftOver,\n              Principal: ai.Principal,\n              RemainingBalance: ai.RemainingBalance,\n              RemainingBalances:ai.RemainingBalances,\n              ShortName: ai.ShortName,\n              TrustBondID: ai.TrustBondID,\n              TrustPeriod: ai.TrustPeriod,\n              date:ai.date,\n              key:ai.key\n            }]);\n            map[ai.TrustBondID] = ai;\n          } else {\n            for (var j = 0; j < dest.length; j++) {\n              var dj = dest[j];\n              if (dj[0].TrustBondID == ai.TrustBondID) {\n                dj.push(ai);\n                break;\n              }\n            }\n          }\n        }\n        console.log(dest)\n        var charAr = []\n        var categoriesX = []\n        for (var i = 0; i < dest.length; i++) {\n          charAr.push({\n            name:dest[i][0].ShortName,\n            TrustBondID:dest[i][0].TrustBondID,\n            data:[],\n            dataTable:[]\n          })\n          for (var a = 0; a < dest[i].length; a++) {\n            charAr[i].data.push(parseFloat((dest[i][a].RemainingBalances/10000).toFixed(4)))\n            charAr[i].dataTable.push(dest[i][a])\n            if (i==dest.length-1) {\n              categoriesX.push(a+1+'期')\n            }\n\n          }\n        }\n        self.chartDestAr = charAr;\n        categoriesX = dest[dest.length-1] ? dest[dest.length-1].map(v => v.TrustPeriod+'期') : [];\n        self.highChartFun(categoriesX,charAr)\n      },\n      initOutPayment() {\n        var self = this;\n        var svc = this.$http('PortfolioManagement', 'DV.usp_GetPoolCashOutflowByTrustId');\n        svc.AddParam({\n          Name: 'TrustId',\n          Value: self.TrustID,\n          DBType: 'int'\n        });\n        svc.ExecTable().then(res => {\n          this.outPayment = res\n        })\n      },\n      initPayment() {\n        var self = this;\n        var svc = this.$http('PortfolioManagement', 'DV.FeeStructure_Get');\n        svc.AddParam({\n          Name: 'TrustID',\n          Value: self.TrustID,\n          DBType: 'int'\n        });\n        svc.ExecTable().then(res => {\n          for (var i = 0; i < res.length; i++) {\n            Object.keys(res[i]).forEach((key) => {\n              if (key != 'ReceivingDays' && key != 'PaymentDays' && key != 'Period') {\n                res[i][key] = res[i][key]?res[i][key].toLocaleString():res[i][key]\n              }\n            })\n          }\n          self.payment = res\n\n        })\n      },\n      initAllot() {\n        var self = this;\n        var svc = this.$http('PortfolioManagement', 'DV.FactBondPayment_Get');\n        svc.AddParam({\n          Name: 'TrustID',\n          Value: self.TrustID,\n          DBType: 'int'\n        });\n        svc.ExecTables().then(ress => {\n          if (!ress.length) {\n            return\n          }\n          for (var a = 0; a < ress.length; a++) {\n            for (var i = 0; i < ress[a].length; i++) {\n              ress[a][i].RemainingBalances =  ress[a][i].RemainingBalance\n              ress[a][i].RemainingBalance = utils.formatCurrency(ress[a][i].RemainingBalance)\n              ress[a][i].Principal = utils.formatCurrency(ress[a][i].Principal)\n              ress[a][i].InterestLeftOver = utils.formatCurrency(ress[a][i].InterestLeftOver)\n              ress[a][i].Interest = utils.formatCurrency(ress[a][i].Interest)\n              if (a == 1) {\n                ress[a][i].date = ress[a][i].PaymentDate?ress[a][i].PaymentDate.S2Date():ress[a][i].PaymentDate;\n                ress[a][i].TrustPeriod = ress[a][i].PaymentPeriod\n              }\n            }\n\n          }\n          this.bondEach = ress[1]\n          let res = ress[0]\n          self.chartDestArFun(res)\n          var map = {},dest = [];\n          for (var i = 0; i < res.length; i++) {\n            var ai = res[i];\n            ai.date = ai.PaymentDate?ai.PaymentDate.S2Date():ai.PaymentDate;\n            ai.key = i+1;\n            if(ai.TrustPeriod < 0) continue;\n            if (!map[ai.TrustPeriod]) {\n              dest.push([{\n                Interest: ai.Interest,\n                InterestLeftOver: ai.InterestLeftOver,\n                Principal: ai.Principal,\n                RemainingBalance: ai.RemainingBalance,\n                ShortName: ai.ShortName,\n                TrustBondID: ai.TrustBondID,\n                TrustPeriod: ai.TrustPeriod,\n                date:ai.date,\n                key:ai.key\n              }]);\n              map[ai.TrustPeriod] = ai;\n            } else {\n              for (var j = 0; j < dest.length; j++) {\n                var dj = dest[j];\n                if (dj[0].TrustPeriod == ai.TrustPeriod) {\n                  dj.push(ai);\n                  break;\n                }\n              }\n            }\n          }\n          if (dest.length>0) {\n            self.period = dest[0][0].TrustPeriod\n          }else {\n            self.period = ''\n          }\n          var levelAr = []\n          for (var i = 0; i < dest.length; i++) {\n            dest[i][0].children =[]\n            levelAr.push(dest[i][0])\n          }\n          for (var i = 0; i < levelAr.length; i++) {\n            levelAr[i].children = dest[i].slice(1)\n          }\n          self.allot = levelAr\n          self.allotUpdate = levelAr\n          console.log(levelAr)\n          // highChart数据\n\n\n        })\n      },\n      stateFormat(row, column, cellValue) {\n        if(cellValue == null){\n          return ''\n        }else{\n          cellValue += \"\";\n          if (!cellValue.includes(\".\")) cellValue += \".\";\n          return cellValue\n            .replace(/(\\d)(?=(\\d{3})+\\.)/g, function($0, $1) {\n              return $1 + \",\";\n            })\n            .replace(/\\.$/, \"\");\n        }\n      },\n      highChartFun(categoriesX,data) {\n        o = {\n          chart: {\n            type: 'spline'\n          },\n          title: {\n            text: ''\n          },\n          subtitle: {\n            text: ''\n          },\n          yAxis: {\n            title: {\n              text: '期末余额（万元）'\n            },\n            labels: {\n              format: '{value:.,0f}'\n            }\n          },\n          xAxis: {\n            categories:categoriesX\n          },\n          exporting: { enabled: false },//隐藏导出图片\n          credits: { enabled: false },//隐藏highcharts的站点标志\n          plotOptions: {\n            // series: {\n            //   label: {\n            //     connectorAllowed: false\n            //   },\n            //   pointStart: 2010\n            // }\n          },\n          tooltip: {\n            // head + 每个 point + footer 拼接成完整的 table\n            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}(万元): </td>' +\n            '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\n            footerFormat: '</table>',\n            //shared: true,\n            useHTML: true\n          },\n          series: data,\n        }\n        Highcharts.chart('containerChart', o);\n        Highcharts.setOptions({\n          lang: {\n            thousandsSep: ','\n          }\n        });\n      }\n    }\n  }\n\n</script>\n\n<style lang=\"scss\" scpoed>\n.flodText{\n  font-size: 13px;\n  cursor: pointer;\n  color: $--color-primary;\n}\n.leftTableF{\n  width: calc(100% - 350px);\n  /deep/ .el-table__body-wrapper{\n    overflow-y: auto;\n  }\n}\n.rightChart{\n  flex:0 0 350px;\n  border-left: 1px solid #f0f0f0;\n  min-height: 260px;\n  padding: 10px 0;\n  margin-left: 10px;\n}\n.el-table.syfpjlTable .cell{\n  padding: 0;\n}\n.fold-content-tip{\n  color: $--color-grey;\n}\n.unitSwitch{\n  font-size: 14px;\n  padding-left: 10px;\n  span{\n    cursor: pointer;\n    &.active{\n      color: #4c5cc9;\n      font-weight: bold;\n      font-size: 14px;\n    }\n    &.fg{\n      color: #c6c6c6;\n      display: inline-block;\n      margin: 0 6px;\n    }\n  }\n}\n.fullscreen-button{\n  text-align: right;\n  padding-right: 10px;\n}\n</style>\n"]}]}