{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\product\\LiquidatedData.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\product\\LiquidatedData.vue","mtime":1604281047661},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.liquidated{\n  .is-loading{\n    text-align: center;\n    color: #999;\n    height: 60px;\n    padding: 100px 0;\n\n    i{\n      font-size: 36px;\n      margin-bottom: 10px;\n      color: #bbb;\n    }\n  }\n}\n",{"version":3,"sources":["LiquidatedData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LiquidatedData.vue","sourceRoot":"src/views/product","sourcesContent":["<template>\n  <div class=\"detailPage liquidated\">\n    <template v-for=\"(item, index) in tables\">\n      <ItemBox v-if=\"tablesHead[index]\" :title=\"tablesHead[index].title\">\n        <el-table :data=\"item\">\n          <el-table-column v-for=\"(col, colIndex) in tablesHead[index].head\"\n            :prop=\"col\"\n            :label=\"col\"\n            :formatter=\"(row) => formatCurrency(col, row[col])\"\n            :key=\"colIndex\" >\n          </el-table-column>\n        </el-table>\n      </ItemBox>\n    </template>\n    <template v-if=\"isEmpty\">\n      <div class=\"is-loading\">\n        <i class=\"el-icon-time\"></i>\n        <p>数据处理中</p>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\n  import utils from '@/utils/index';\n  import ItemBox from '@/components/layout/ItemBox.vue';\n  export default{\n    data() {\n      return {\n        tables: [],\n        tablesHead: [],\n        isEmpty: false\n      }\n    },\n    components: { ItemBox },\n    created() {\n      this.getTableData();\n    },\n    computed: {\n      AssetType() {\n        return this.$store.state.productInfo.productDetail.AssetType;\n      },\n      TrustID() {\n        return this.$store.state.productInfo.trustId;\n      }\n    },\n    methods: {\n      formatCurrency(head, val) {\n        if(head.indexOf('元') > -1 && val !== 'ND') {\n          return utils.formatCurrency(val);\n        }else{\n          return val;\n        }\n      },\n      getTableData() {\n        let proc = this.AssetType === 'NPL' ? 'DV.usp_NonTrusteeLiquidation_Get' : 'DV.usp_TrusteeLiquidation_Get';\n        let svc = this.$http('PortfolioManagement', proc);\n        svc.AddParam({\n          Name: 'TrustID',\n          Value: this.TrustID,\n          DBType: 'int'\n        });\n        svc.ExecTables().then(res => {\n          let heads = [];\n          res.forEach(v => {\n            let hasContent = v.length;\n            if(hasContent) {\n              let head = Object.keys(v[0]);\n              let title = head.shift();\n              heads.push({\n                title: v[0][title],\n                head\n              })\n            }else{\n              heads.push(null)\n            }\n\n            this.tables = res;\n            this.tablesHead = heads;\n            this.isEmpty = res.every(v => v.length === 0);\n          })\n        })\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .liquidated{\n    .is-loading{\n      text-align: center;\n      color: #999;\n      height: 60px;\n      padding: 100px 0;\n\n      i{\n        font-size: 36px;\n        margin-bottom: 10px;\n        color: #bbb;\n      }\n    }\n  }\n</style>\n"]}]}