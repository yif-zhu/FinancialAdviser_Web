{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\admin\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\admin\\Index.vue","mtime":1604371567023},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import userImg from '@/assets/images/user.png'\n  import {mapState, mapMutations} from 'vuex';\n  import md5 from 'js-md5';\n  import DynamicTab from '@/components/common/DynamicTab.vue';\n  export default {\n    name: \"AdminIndex\",\n    data() {\n      const validator = (rule, value, callback) => {\n        let test = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,20}$/;\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        }else if (!(test.test(value))) {\n          callback(new Error('密码长度为8-20位，必须包括字母、数字'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        activeIndex: '1',\n        userImg:userImg,\n        modifyPasswordDialog: false,\n        passwordForm: {\n          oldPassword:'',\n          newPassword:'',\n          confirmPassword: ''\n        },\n        passwordRules: {\n          newPassword: [\n            { validator, trigger: 'blur' }\n          ],\n          confirmPassword: [\n            { validator, trigger: 'blur' }\n          ],\n        },\n        passwordErrors: {\n          oldPassword: '',\n          newPassword: '',\n          confirmPassword: '',\n        },\n      };\n    },\n    components: {\n      DynamicTab\n    },\n    computed: {\n      ...mapState('user',['userName', 'isRoot'])\n    },\n    methods: {\n      ...mapMutations([\n        'setLoginStatus',\n      ]),\n      handleSelect(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      handleModifyUserPassword() {\n        const $form = this.$refs.passwordForm;\n        $form.validate((valid) => {\n          if(valid) {\n            const {\n              oldPassword,\n              newPassword,\n              confirmPassword\n            } = this.passwordForm;\n            if(oldPassword === newPassword) {\n              this.passwordErrors.newPassword = '请设置一个新的密码!';\n              return;\n            }\n            if(newPassword !== confirmPassword) {\n              this.passwordErrors.confirmPassword = '两次输入的密码不一致!';\n              return;\n            }\n\n            let svc = this.$http(\n              'UserManagement',\n              'QuickFrame.usp_ChangePasswordWithResult'\n            );\n            svc.AddParam({\n              Name: \"UserName\",\n              Value: this.userName,\n              DBType: \"string\"\n            });\n            svc.AddParam({\n              Name: \"OldPassword\",\n              Value: md5(oldPassword),\n              DBType: \"string\"\n            });\n            svc.AddParam({\n              Name: \"NewPassword\",\n              Value: md5(newPassword),\n              DBType: \"string\"\n            });\n            svc.ExecResult().then(res => {\n\t\t\t\tres = parseInt(res);\n              if (res === 1) {\n                this.passwordErrors.oldPassword = '原密码不正确!';\n              }else{\n                this.$message.success('恭喜您，密码修改成功!');\n                this.modifyPasswordDialog = false;\n                $form.resetFields();\n                $form.clearValidate();\n              }\n            });\n          }\n        })\n      },\n      handleSetting(type) {\n        var self = this;\n        switch (type) {\n          case 'product':\n            this.$title('');\n            this.$router.push('/product');\n\n            break;\n          case 'logout':\n            this.$store.dispatch('user/handleUserLogout').then(()=>{\n              self.setLoginStatus(false);\n              this.$router.push('/login');\n            });\n            break;\n          case 'modifyPassword':\n            this.modifyPasswordDialog = true\n        }\n        //alert(type)\n      }\n    }\n  }\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Index.vue","sourceRoot":"src/views/admin","sourcesContent":["<style lang=\"scss\" scoped>\n  .el-header{\n    background-color: #fff;\n    height: 40px!important;\n    display: flex;\n    background-color: #3a4489;\n    padding:0;\n    div{\n      vertical-align: middle;\n      line-height: 40px;\n    }\n    >.logo{\n      flex:0 0 200px;\n      font-size: 18px;\n      font-weight: bold;\n      background-color: $--color-primary-light-admin;\n      color: #fff;\n      text-align: center;\n      line-height: 40px;\n    }\n    >.menu{\n      flex:1;\n      position: relative;\n      /*border-bottom: 2px solid #f5c56c;*/\n    }\n    >.userName{\n      flex:0 0 100px;\n      text-align: right;\n      padding-right: 15px;\n      /*border-bottom: 2px solid #f5c56c;*/\n      img{\n        width: 23px;\n        vertical-align: middle;\n        margin-right: 10px;\n      }\n      .setting{\n        color: #b9b9b9;\n        &:hover{\n          color: #fff;\n        }\n      }\n    }\n  }\n  .el-container{\n    height: 100vh;\n  }\n  .el-main{\n    flex: 1;\n    padding-top: 0;\n\t\tbackground-color: white;\n    padding:0;\n  }\n .el-dropdown-menu.el-popper{\n  top:28px!important;\n }\n .el-tabs__item{\n  height: 30px;\n  line-height: 30px;\n }\n</style>\n\n<style lang=\"scss\">\n  .admin-common{\n    &-page{\n      background: #fff;\n      height: 100%;\n    }\n\n    &-title{\n      display: flex;\n      height: 40px;\n      align-items: center;\n      justify-content: space-between;\n      padding: 5px 15px;\n\n      .title-left{\n        font-size: 15px;\n      }\n\n      .title-right{\n\n        .desc{\n          font-size: 12px;\n          color: #999;\n        }\n      }\n    }\n\n    &-content{\n      padding: 5px 15px;\n    }\n  }\n  .el-menu.el-menu--horizontal{\n    background-color: $--color-primary-admin;\n    font-size: 14px;\n  }\n  .el-menu--horizontal > .el-menu-item{\n    line-height: 40px;\n    height: 40px;\n  }\n  .el-menu--horizontal > .el-submenu .el-submenu__title{\n    line-height: 40px;\n    height: 40px;\n  }\n  .el-menu--horizontal > .el-submenu .el-submenu__title{\n    color: $--color-gray-admin;\n  }\n  .el-menu--horizontal > .el-submenu:hover .el-submenu__title{\n    color: #fff;\n  }\n  .el-menu--horizontal > .el-submenu .el-submenu__title:hover{\n    background-color: transparent;\n  }\n  .el-menu--horizontal > .el-menu-item.is-active,\n  .el-menu--horizontal > .el-submenu.is-active .el-submenu__title{\n    border-bottom: 2px solid #fff;\n    color: #fff;\n  }\n  .el-menu--horizontal > .el-menu-item:not(.is-disabled):hover, .el-menu--horizontal > .el-menu-item:not(.is-disabled):focus{\n    background-color: transparent;\n    color: #fff;\n  }\n  .el-menu--horizontal > .el-menu-item{\n    color: #b9b9b9;\n  }\n  .el-menu--horizontal > .el-submenu:focus .el-submenu__title,\n  .el-menu--horizontal > .el-submenu:hover .el-submenu__title{\n    color: #fff;\n  }\n</style>\n\n<template>\n  <el-container id=\"adminPage\">\n    <el-header>\n      <div class=\"logo\">\n        DealViewer Admin\n      </div>\n      <div class=\"menu\">\n        <dynamic-tab></dynamic-tab>\n      </div>\n      <div class=\"userName\">\n        <img :src=\"userImg\"/>\n        <el-dropdown @command=\"handleSetting\">\n          <span class=\"setting cursorP\">\n          设置<i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\" :visibleArrow=\"false\">\n            <el-dropdown-item command=\"product\">产品前台</el-dropdown-item>\n            <el-dropdown-item command=\"modifyPassword\">修改密码</el-dropdown-item>\n            <el-dropdown-item command=\"logout\">退出登录</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </el-header>\n    <el-main>\n    <keep-alive>\n      <router-view></router-view>\n    </keep-alive>\n    </el-main>\n    <el-dialog title=\"修改密码\" width=\"430px\" :visible.sync=\"modifyPasswordDialog\" :lock-scroll=\"false\">\n      <el-form ref=\"passwordForm\" :model=\"passwordForm\" :rules=\"passwordRules\" key=\"modifyPassword\">\n        <el-form-item label=\"原密码\" prop=\"oldPassword\" :error=\"passwordErrors.oldPassword\">\n          <el-input type=\"password\" v-model=\"passwordForm.oldPassword\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\" :error=\"passwordErrors.newPassword\">\n          <el-input type=\"password\" v-model=\"passwordForm.newPassword\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\" :error=\"passwordErrors.confirmPassword\">\n          <el-input type=\"password\" v-model=\"passwordForm.confirmPassword\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleModifyUserPassword\">确定</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </el-container>\n</template>\n\n<script>\n  import userImg from '@/assets/images/user.png'\n  import {mapState, mapMutations} from 'vuex';\n  import md5 from 'js-md5';\n  import DynamicTab from '@/components/common/DynamicTab.vue';\n  export default {\n    name: \"AdminIndex\",\n    data() {\n      const validator = (rule, value, callback) => {\n        let test = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,20}$/;\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        }else if (!(test.test(value))) {\n          callback(new Error('密码长度为8-20位，必须包括字母、数字'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        activeIndex: '1',\n        userImg:userImg,\n        modifyPasswordDialog: false,\n        passwordForm: {\n          oldPassword:'',\n          newPassword:'',\n          confirmPassword: ''\n        },\n        passwordRules: {\n          newPassword: [\n            { validator, trigger: 'blur' }\n          ],\n          confirmPassword: [\n            { validator, trigger: 'blur' }\n          ],\n        },\n        passwordErrors: {\n          oldPassword: '',\n          newPassword: '',\n          confirmPassword: '',\n        },\n      };\n    },\n    components: {\n      DynamicTab\n    },\n    computed: {\n      ...mapState('user',['userName', 'isRoot'])\n    },\n    methods: {\n      ...mapMutations([\n        'setLoginStatus',\n      ]),\n      handleSelect(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      handleModifyUserPassword() {\n        const $form = this.$refs.passwordForm;\n        $form.validate((valid) => {\n          if(valid) {\n            const {\n              oldPassword,\n              newPassword,\n              confirmPassword\n            } = this.passwordForm;\n            if(oldPassword === newPassword) {\n              this.passwordErrors.newPassword = '请设置一个新的密码!';\n              return;\n            }\n            if(newPassword !== confirmPassword) {\n              this.passwordErrors.confirmPassword = '两次输入的密码不一致!';\n              return;\n            }\n\n            let svc = this.$http(\n              'UserManagement',\n              'QuickFrame.usp_ChangePasswordWithResult'\n            );\n            svc.AddParam({\n              Name: \"UserName\",\n              Value: this.userName,\n              DBType: \"string\"\n            });\n            svc.AddParam({\n              Name: \"OldPassword\",\n              Value: md5(oldPassword),\n              DBType: \"string\"\n            });\n            svc.AddParam({\n              Name: \"NewPassword\",\n              Value: md5(newPassword),\n              DBType: \"string\"\n            });\n            svc.ExecResult().then(res => {\n\t\t\t\tres = parseInt(res);\n              if (res === 1) {\n                this.passwordErrors.oldPassword = '原密码不正确!';\n              }else{\n                this.$message.success('恭喜您，密码修改成功!');\n                this.modifyPasswordDialog = false;\n                $form.resetFields();\n                $form.clearValidate();\n              }\n            });\n          }\n        })\n      },\n      handleSetting(type) {\n        var self = this;\n        switch (type) {\n          case 'product':\n            this.$title('');\n            this.$router.push('/product');\n\n            break;\n          case 'logout':\n            this.$store.dispatch('user/handleUserLogout').then(()=>{\n              self.setLoginStatus(false);\n              this.$router.push('/login');\n            });\n            break;\n          case 'modifyPassword':\n            this.modifyPasswordDialog = true\n        }\n        //alert(type)\n      }\n    }\n  }\n</script>\n"]}]}