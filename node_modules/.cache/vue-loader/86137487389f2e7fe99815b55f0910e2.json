{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\admin\\ProductDoc.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\views\\admin\\ProductDoc.vue","mtime":1604281047252},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import fsvc from '@/api/FileService';\n  import csvc from \"@/api/CommonService.js\";\n  import dynamicTab from '@/mixins/dynamicTab.js';\n  import {addClass,removeClass} from '@/utils/dom.js'\n  import {\n    mapState, mapMutations\n  } from 'vuex';\n\n  export default {\n    data() {\n      return {\n        productDetail: {},\n        docList: [],\n        docListDeepCopy:[],\n        updateDialog: false,\n        progressSw: false,\n        percentage: 0,\n        progressText: '正在保存文件，请稍等',\n        fileType: '',\n        dialogUploadFileName: '', //上传文件名\n        filterValue:''\n      }\n    },\n    mixins: [dynamicTab],\n    created() {\n      this.initProductDoc()\n\n    },\n    computed: {\n      TrustID() {\n        return this.$store.state.productInfo.trustId;\n      },\n      ...mapState('user', ['userName']),\n    },\n    watch: {\n      TrustID(v) {\n        this.initProductDoc()\n      },\n      updateDialog(v) {\n        if (v) {\n          this.fileType = ''\n          this.dialogUploadFileName = ''\n        }\n      },\n      filterValue(v) {\n        this.docList = JSON.parse(JSON.stringify(this.docListDeepCopy))\n        if (v.trim() != '') {\n          for (var i = 0; i < this.docList.length; i++) {\n            this.docList[i].children = this.docList[i].children.filter((item) => {\n              if (item.FileName.indexOf(v)>-1) {\n                return item\n              }\n            })\n          }\n        }\n      }\n    },\n    methods: {\n      ...mapMutations('dynamicTabs', ['setTab']),\n      clearFilter() {\n        this.filterValue = ''\n      },\n      foldFun(index) {\n        var dis = document.getElementsByClassName('file'+index)[0].style.display\n        var iconD = document.getElementsByClassName('icon'+index)[0]\n        if (dis == 'none') {\n          document.getElementsByClassName('file'+index)[0].style.display = 'block'\n          removeClass(iconD,'icon-zhankaisvg')\n          addClass(iconD,'icon-zhankai2')\n        }else{\n          document.getElementsByClassName('file'+index)[0].style.display = 'none'\n          addClass(iconD,'icon-zhankaisvg')\n          removeClass(iconD,'icon-zhankai2')\n        }\n      },\n      initProductDoc() {\n        var self = this;\n        var svc = this.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Get');\n        svc.AddParam({Name: 'TrustID', Value: self.TrustID, DBType: 'int'});\n        svc.ExecTables().then(res => {\n          for (var i = 0; i < res[0].length; i++) {\n            res[0][i].FileName = res[0][i].FileCategoryName\n            res[0][i].children = []\n            for (var ii = 0; ii < res[1].length; ii++) {\n              res[1][ii].icon = 'iconfont icon-folder-open'\n              if (res[1][ii].FileCategory == res[0][i].FileCategory) {\n                res[0][i].children.push(res[1][ii])\n              }\n\n            }\n          }\n          self.docList = JSON.parse(JSON.stringify(res[0]))\n          self.docListDeepCopy = JSON.parse(JSON.stringify(res[0]))\n        })\n        self.setTab({\n          id: 'ProductDetail' + self.TrustID,\n          name: 'ProductDoc',\n        });\n      },\n      downLoadFile(file) {\n        fsvc.DownLoadFileByPath(file.FilePath + file.FileName, file.FileName, 1)\n      },\n      dialogFileInputs(event) {\n        var file = event.target.files;\n        let self = this\n        if (file.length > 1) {\n          this.dialogUploadFileName = ''\n          for (let key in file) {\n            if (key == \"length\") {\n              self.dialogUploadFileName = self.dialogUploadFileName.substring(0, self.dialogUploadFileName.length - 1)\n              return\n            }\n            self.dialogUploadFileName = self.dialogUploadFileName + file[key].name + ','\n          }\n        } else if (file.length == 1) {\n          this.dialogUploadFileName = file[0].name;\n\n        }\n\n      },\n      dialogUploadCilck(id) {\n        $(\"#\" + id).click();\n      },\n      reportingFilesUpload() {\n        var self = this;\n        var postData = $(\"#excelUploads\")[0].files;\n        if (self.fileType == '') {\n          self.$message.warning('请选择文件类型');\n          return\n        }\n        if (postData.length < 1) {\n          self.$message.error('请选择上传的文件');\n          return;\n        }\n\n        self.updateDialog = false;\n        var len = postData.length\n        var ai = 0\n        self.percentage = 0\n        //for (var i = 0; i < postData.length; i++) {\n        //(function (i,len) {\n        var postDataI = 0;\n        var nbprogress = 0;\n        var postDataName = postData[postDataI].name;\n        var folderName = 'DealViewer\\\\TrustAssociatedDoc\\\\' + self.$store.state.productInfo.productDetail.TrustCode + '\\\\' + self.fileType;\n        const progress = function (progressEvt) {\n          self.progressSw = true\n\n          nbprogress = progressEvt.loaded / progressEvt.total;\n          // self.progressText = '上传文件进度'+parseInt(nbprogress)+'%'\n          self.percentage = parseInt((postDataI + nbprogress) / (postData.length) * 100)\n\n        };\n        var callback1 = function (fpath) {\n          self.progressText = ''\n          let filePath = fpath.UploadResult;\n          filePath = filePath.substr(0,filePath.lastIndexOf('/')+1)\n          let fileType = postDataName.substr(postDataName.lastIndexOf(\".\") + 1);\n          var svc = self.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Add');\n          svc.AddParam({\n            Name: \"TrustId\",\n            Value: self.TrustID,\n            DBType: \"int\"\n          });\n          svc.AddParam({\n            Name: \"FileCategory\",\n            Value: self.fileType,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FilePath\",\n            Value: filePath,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileName\",\n            Value: postDataName,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileType\",\n            Value: fileType,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"UserName\",\n            Value: self.userName,\n            DBType: \"string\"\n          });\n          svc.ExecResult().then(res => {\n\t\t\t  res = parseInt(res);\n            if (isNaN(res)) {\n              self.$message.error('文件上传发生内部服务错误');\n              self.progressSw = false\n            } else {\n\n              self.progressSw = true\n              // self.percentage = parseInt(((postDataI+1)/(postData.length)) * 100)\n              if (postDataI == postData.length - 1) {\n                self.progressText = '已成功上传' + (postDataI + 1) + '个文件'\n                setTimeout(() => {\n                  self.progressSw = false\n                  self.progressText = ''\n                }, 500)\n\n              }\n              postDataI++\n\n              if (postDataI < postData.length) {\n                postDataName = postData[postDataI].name;\n                fsvc.UploadOther(postData[postDataI], postDataName, folderName, 1)(progress, callback1)\n              }\n\n              self.initProductDoc();\n\n\n            }\n          });\n        }\n        fsvc.UploadOther(postData[postDataI], postDataName, folderName, 1)(progress, callback1)\n\n        //})(i,len)\n\n        //}\n      },\n      deleteFile(data) {\n        var removeName = data.FileCategoryName + '—' + data.FileName\n        var self = this\n        this.$confirm(removeName + '文件将被删除,是否继续？', '提示', {\n          confirmButtonText: '确定',\n          cancelButttonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          var svc = self.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Remove');\n          svc.AddParam({\n            Name: \"ReportDocumentID\",\n            Value: data.TrustDocumentID,\n            DBType: \"int\"\n          });\n          svc.AddParam({\n            Name: \"UserName\",\n            Value: self.userName,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileCategory\",\n            Value: data.FileCategory,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FilePath\",\n            Value: data.FilePath,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileName\",\n            Value: data.FileName,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"TrustID\",\n            Value: self.TrustID,\n            DBType: \"int\"\n          });\n          svc.ExecResult().then(res => {\n            if (isNaN(res)) {\n              self.$message.error('文件删除请求发生错误');\n            } else {\n              self.$message.success('文件删除成功');\n              //删除物理文件\n              fsvc.Remove(data.FilePath, 1);\n              self.initProductDoc();\n            }\n          })\n        }).catch(() => {\n        })\n\n      },\n    }\n  }\n",{"version":3,"sources":["ProductDoc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"ProductDoc.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"detailPage productDoc\">\n    <div class=\"itemBox\">\n      <div class=\"table-title\">文件管理</div>\n      <div style=\"float:right;\">\n        <div class=\"filterBox\">\n          <el-input size=\"mini\" v-model=\"filterValue\" placeholder=\"请输入关键词搜索相关文档\"></el-input>\n          <i class=\"iconfont icon-cha8\" v-show=\"filterValue.trim() != ''\" @click=\"clearFilter\" title=\"清空筛选\"></i>\n        </div>\n        <el-button type=\"primary\" size=\"mini\" @click=\"updateDialog = true\"><span class=\"iconfont icon-upload1\"></span>上传文件\n        </el-button>\n      </div>\n      <div class=\"content\">\n        <ul class=\"report\">\n          <li v-for=\"(item,index) in docList\">\n            <p @click=\"foldFun(index)\" style=\"cursor: pointer;\">{{item.FileCategoryName}}<span><i class=\"iconfont icon-zhankai2\" :class=\"'icon'+index\"></i></span></p>\n            <ul class=\"file\" :class=\"'file'+index\">\n              <li v-for=\"file in item.children\">\n                <span class=\"text\">{{file.FileName}}</span>\n                <el-button @click=\"downLoadFile(file)\" size=\"mini\" icon=\"el-icon-download\" title=\"下载文件\"\n                           round></el-button>\n                <el-button @click=\"deleteFile(file)\" size=\"mini\" icon=\"el-icon-delete\" title=\"删除文件\" round></el-button>\n              </li>\n              <li v-if=\"item.children.length<1\">\n                <span class=\"hint\">暂无数据</span>\n              </li>\n            </ul>\n          </li>\n\n        </ul>\n      </div>\n    </div>\n    <!-- 上传文件 -->\n    <base-dialog :close-on-click-modal=\"false\" title=\"上传文件\" :visible.sync=\"updateDialog\" width=\"500px\" draggable>\n      <div style=\"margin:20px 0;\">\n        <el-form ref=\"form\" autocomplete=\"off\" label-width=\"100px\" v-if=\"updateDialog\">\n          <el-form-item label=\"文件类型\">\n            <el-select v-model=\"fileType\" placeholder=\"请选择\"  popper-class=\"max-zIndex\">\n              <el-option v-for=\"item in docList\" :label=\"item.FileCategoryName\" :value=\"item.FileCategory\">\n              </el-option>\n            </el-select>\n\n          </el-form-item>\n          <el-form-item label=\"文件上传\">\n            <div class=\"dialogfileUploadBox\" style=\"margin:0;text-align:left;\">\n              <input type=\"file\" id=\"excelUploads\" @change=\"dialogFileInputs($event)\" class=\"fileUploadInput\"\n                     multiple=\"multiple\" key=\"01\"/>\n              <el-input class=\"el_fileUploadInput\" v-model=\"dialogUploadFileName\" key=\"02\">\n                <el-button class=\"el_fileUploadBtn\" slot=\"append\" @click=\"dialogUploadCilck('excelUploads')\">选择文件\n                </el-button>\n              </el-input>\n            </div>\n          </el-form-item>\n        </el-form>\n      </div>\n      <p style=\"text-align:center\">\n        <el-button @click=\"updateDialog = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"reportingFilesUpload()\" size=\"mini\">\n          确定上传\n        </el-button>\n      </p>\n    </base-dialog>\n    <!-- 进度条 -->\n    <div class=\"progressOut\" v-if=\"progressSw\">\n      <el-progress type=\"circle\" :percentage=\"percentage\" color=\"#8e71c7\" :width=\"90\"></el-progress>\n      <p style=\"color:#333;position: absolute;top: 50%;width: 100%;text-align: center;font-size: 13px;margin-top:50px;\">\n        {{progressText}}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\n  import fsvc from '@/api/FileService';\n  import csvc from \"@/api/CommonService.js\";\n  import dynamicTab from '@/mixins/dynamicTab.js';\n  import {addClass,removeClass} from '@/utils/dom.js'\n  import {\n    mapState, mapMutations\n  } from 'vuex';\n\n  export default {\n    data() {\n      return {\n        productDetail: {},\n        docList: [],\n        docListDeepCopy:[],\n        updateDialog: false,\n        progressSw: false,\n        percentage: 0,\n        progressText: '正在保存文件，请稍等',\n        fileType: '',\n        dialogUploadFileName: '', //上传文件名\n        filterValue:''\n      }\n    },\n    mixins: [dynamicTab],\n    created() {\n      this.initProductDoc()\n\n    },\n    computed: {\n      TrustID() {\n        return this.$store.state.productInfo.trustId;\n      },\n      ...mapState('user', ['userName']),\n    },\n    watch: {\n      TrustID(v) {\n        this.initProductDoc()\n      },\n      updateDialog(v) {\n        if (v) {\n          this.fileType = ''\n          this.dialogUploadFileName = ''\n        }\n      },\n      filterValue(v) {\n        this.docList = JSON.parse(JSON.stringify(this.docListDeepCopy))\n        if (v.trim() != '') {\n          for (var i = 0; i < this.docList.length; i++) {\n            this.docList[i].children = this.docList[i].children.filter((item) => {\n              if (item.FileName.indexOf(v)>-1) {\n                return item\n              }\n            })\n          }\n        }\n      }\n    },\n    methods: {\n      ...mapMutations('dynamicTabs', ['setTab']),\n      clearFilter() {\n        this.filterValue = ''\n      },\n      foldFun(index) {\n        var dis = document.getElementsByClassName('file'+index)[0].style.display\n        var iconD = document.getElementsByClassName('icon'+index)[0]\n        if (dis == 'none') {\n          document.getElementsByClassName('file'+index)[0].style.display = 'block'\n          removeClass(iconD,'icon-zhankaisvg')\n          addClass(iconD,'icon-zhankai2')\n        }else{\n          document.getElementsByClassName('file'+index)[0].style.display = 'none'\n          addClass(iconD,'icon-zhankaisvg')\n          removeClass(iconD,'icon-zhankai2')\n        }\n      },\n      initProductDoc() {\n        var self = this;\n        var svc = this.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Get');\n        svc.AddParam({Name: 'TrustID', Value: self.TrustID, DBType: 'int'});\n        svc.ExecTables().then(res => {\n          for (var i = 0; i < res[0].length; i++) {\n            res[0][i].FileName = res[0][i].FileCategoryName\n            res[0][i].children = []\n            for (var ii = 0; ii < res[1].length; ii++) {\n              res[1][ii].icon = 'iconfont icon-folder-open'\n              if (res[1][ii].FileCategory == res[0][i].FileCategory) {\n                res[0][i].children.push(res[1][ii])\n              }\n\n            }\n          }\n          self.docList = JSON.parse(JSON.stringify(res[0]))\n          self.docListDeepCopy = JSON.parse(JSON.stringify(res[0]))\n        })\n        self.setTab({\n          id: 'ProductDetail' + self.TrustID,\n          name: 'ProductDoc',\n        });\n      },\n      downLoadFile(file) {\n        fsvc.DownLoadFileByPath(file.FilePath + file.FileName, file.FileName, 1)\n      },\n      dialogFileInputs(event) {\n        var file = event.target.files;\n        let self = this\n        if (file.length > 1) {\n          this.dialogUploadFileName = ''\n          for (let key in file) {\n            if (key == \"length\") {\n              self.dialogUploadFileName = self.dialogUploadFileName.substring(0, self.dialogUploadFileName.length - 1)\n              return\n            }\n            self.dialogUploadFileName = self.dialogUploadFileName + file[key].name + ','\n          }\n        } else if (file.length == 1) {\n          this.dialogUploadFileName = file[0].name;\n\n        }\n\n      },\n      dialogUploadCilck(id) {\n        $(\"#\" + id).click();\n      },\n      reportingFilesUpload() {\n        var self = this;\n        var postData = $(\"#excelUploads\")[0].files;\n        if (self.fileType == '') {\n          self.$message.warning('请选择文件类型');\n          return\n        }\n        if (postData.length < 1) {\n          self.$message.error('请选择上传的文件');\n          return;\n        }\n\n        self.updateDialog = false;\n        var len = postData.length\n        var ai = 0\n        self.percentage = 0\n        //for (var i = 0; i < postData.length; i++) {\n        //(function (i,len) {\n        var postDataI = 0;\n        var nbprogress = 0;\n        var postDataName = postData[postDataI].name;\n        var folderName = 'DealViewer\\\\TrustAssociatedDoc\\\\' + self.$store.state.productInfo.productDetail.TrustCode + '\\\\' + self.fileType;\n        const progress = function (progressEvt) {\n          self.progressSw = true\n\n          nbprogress = progressEvt.loaded / progressEvt.total;\n          // self.progressText = '上传文件进度'+parseInt(nbprogress)+'%'\n          self.percentage = parseInt((postDataI + nbprogress) / (postData.length) * 100)\n\n        };\n        var callback1 = function (fpath) {\n          self.progressText = ''\n          let filePath = fpath.UploadResult;\n          filePath = filePath.substr(0,filePath.lastIndexOf('/')+1)\n          let fileType = postDataName.substr(postDataName.lastIndexOf(\".\") + 1);\n          var svc = self.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Add');\n          svc.AddParam({\n            Name: \"TrustId\",\n            Value: self.TrustID,\n            DBType: \"int\"\n          });\n          svc.AddParam({\n            Name: \"FileCategory\",\n            Value: self.fileType,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FilePath\",\n            Value: filePath,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileName\",\n            Value: postDataName,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileType\",\n            Value: fileType,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"UserName\",\n            Value: self.userName,\n            DBType: \"string\"\n          });\n          svc.ExecResult().then(res => {\r\n\t\t\t  res = parseInt(res);\n            if (isNaN(res)) {\n              self.$message.error('文件上传发生内部服务错误');\n              self.progressSw = false\n            } else {\n\n              self.progressSw = true\n              // self.percentage = parseInt(((postDataI+1)/(postData.length)) * 100)\n              if (postDataI == postData.length - 1) {\n                self.progressText = '已成功上传' + (postDataI + 1) + '个文件'\n                setTimeout(() => {\n                  self.progressSw = false\n                  self.progressText = ''\n                }, 500)\n\n              }\n              postDataI++\n\n              if (postDataI < postData.length) {\n                postDataName = postData[postDataI].name;\n                fsvc.UploadOther(postData[postDataI], postDataName, folderName, 1)(progress, callback1)\n              }\n\n              self.initProductDoc();\n\n\n            }\n          });\n        }\n        fsvc.UploadOther(postData[postDataI], postDataName, folderName, 1)(progress, callback1)\n\n        //})(i,len)\n\n        //}\n      },\n      deleteFile(data) {\n        var removeName = data.FileCategoryName + '—' + data.FileName\n        var self = this\n        this.$confirm(removeName + '文件将被删除,是否继续？', '提示', {\n          confirmButtonText: '确定',\n          cancelButttonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          var svc = self.$http('PortfolioManagement', 'DV.TrustAssociatedDocs_Remove');\n          svc.AddParam({\n            Name: \"ReportDocumentID\",\n            Value: data.TrustDocumentID,\n            DBType: \"int\"\n          });\n          svc.AddParam({\n            Name: \"UserName\",\n            Value: self.userName,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileCategory\",\n            Value: data.FileCategory,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FilePath\",\n            Value: data.FilePath,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"FileName\",\n            Value: data.FileName,\n            DBType: \"string\"\n          });\n          svc.AddParam({\n            Name: \"TrustID\",\n            Value: self.TrustID,\n            DBType: \"int\"\n          });\n          svc.ExecResult().then(res => {\n            if (isNaN(res)) {\n              self.$message.error('文件删除请求发生错误');\n            } else {\n              self.$message.success('文件删除成功');\n              //删除物理文件\n              fsvc.Remove(data.FilePath, 1);\n              self.initProductDoc();\n            }\n          })\n        }).catch(() => {\n        })\n\n      },\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .productDoc {\n    .filterBox{\n      position: relative;\n      display: inline-block;\n      margin-right: 20px;\n      .el-input__inner{\n        width: 400px;\n        background-color: #f5f5f5;\n      }\n      i{\n        position: absolute;\n        top: 7px;\n        right: 10px;\n        color: #c7c7c7;\n        cursor: pointer;\n      }\n    }\n    .content {\n      padding: 0 10px;\n    }\n    .report {\n      line-height: 30px;\n      li {\n        color: $--color-grey;\n        font-size: 13px;\n      }\n      .file {\n        padding-left: 15px;\n        line-height: 30px;\n        li {\n          color: $--color-black;\n          font-size: 14px;\n          span.text {\n            margin-right: 20px;\n          }\n        }\n      }\n    }\n    .el-button--mini.is-round {\n      padding: 5px;\n    }\n    .dialogfileUploadBox .el_fileUploadInput {\n      left: 0;\n      width: 300px;\n    }\n    .progressOut {\n      background-color: rgba(255, 255, 255, 0.7);\n      text-align: center;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100vw;\n      height: 100vh;\n      z-index: 999;\n      .el-progress--circle {\n        top: 50%;\n        margin-top: -45px;\n        position: absolute;\n        left: 50%;\n        margin-left: -45px;\n      }\n    }\n    .hint {\n      font-size: 12px;\n      color: #a0a0a0;\n    }\n  }\n</style>\n"]}]}