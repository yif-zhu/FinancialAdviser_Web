{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\AdvanceFilter.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\AdvanceFilter.vue","mtime":1604385981648},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"AdvanceFilter\",\n  props: {\n    conName: String,\n    templateName: String\n  },\n  data: () => ({\n    advanceFilterUnfold: false,\n    fields: [],\n    conditionAr:[],\n    removeShow:false,\n    bondCode:'',\n  }),\n  mounted() {\n\n  },\n  created() {\n    this.filterOptions = []\n    this.tooglePanel()\n  },\n  methods: {\n    bondCodeClear() {\n      this.bondCode = '';\n      this.handleSearch()\n    },\n    compareDate(s1, s2){\n      if(s1.indexOf('-') > 0) {\n        s1 = s1.replace(/-/g,\"\\/\");\n      }else if(!/\\/|-/.test(s1)) {\n        s1 = s1.slice(0, 4) + '/' + s1.slice(4,6) + '/' + s1.slice(6,8);\n      }\n      if(s2.indexOf('-') > 0) {\n        s2 = s2.replace(/-/g,\"\\/\");\n      }else if(!/\\/|-/.test(s2)) {\n        s2 = s2.slice(0, 4) + '/' + s2.slice(4,6) + '/' + s2.slice(6,8);\n      }\n      return ((new Date(s1)) > (new Date(s2)));\n    },\n    removeAll() {\n\n      for (var i = 0; i < this.fields.length; i++) {\n        this.fields[i].ChosenTitles = []\n        for (var ii = 0; ii < this.fields[i].Options.length; ii++) {\n          this.fields[i].Options[ii].Chosen = false;\n          if (!this.fields[i].UIFormat) {\n            this.fields[i].Options[ii].Chosen = false;\n          } else {\n            this.fields[i].Options[ii].Value = '';\n          }\n        }\n      }\n      this.handleSearch()\n    },\n    conditionOpen(index) {\n      if (!this.conditionAr[index]) {\n        this.$set(this.conditionAr,index,true)\n      }else{\n        this.$set(this.conditionAr,index,false)\n      }\n      // console.log(this.conditionAr)\n    },\n    loadFiledsAndInit() {\n      if (this.conName === undefined || this.templateName === undefined) {\n        return;\n      }\n      var svc = this.$http(this.conName, 'DV.AdvanceFilter_GetSettingByName', true);\n      svc.AddParam({\n        Name: 'TemplateName',\n        Value: this.templateName,\n        DBType: 'string'\n      });\n      svc.ExecTables().then((response) => {\n        if (!response || response.length < 1) {\n          return;\n        }\n        this.filterOptions = JSON.parse(JSON.stringify(response[1]));\n        let fields = JSON.parse(JSON.stringify(response[0]));\n        fields.map((field) => {\n          this.conditionAr.push(false)\n          field.ChosenTitles = (field.ChosenTitles) ? field.ChosenTitles.split(';') : [];\n          let fieldOptions = this.filterOptions.filter((o) => (o.Field === field.Field));\n          if (field.UIFormat === 'select') {\n            field.value = '0';\n            fieldOptions = fieldOptions.filter(v => v.Text !== null);\n          }\n          if(field.UIFormat === 'date') {\n            field.value = '';\n            field.value1 = '';\n          }\n\n          fieldOptions.forEach((v) => {\n            if (field.UIFormat && field.UIFormat === 'input') {\n              v.ValueExpress = v.Value;\n              v.Value = '';\n            }\n          });\n          field.Options = fieldOptions;\n        });\n\n        this.fields = fields;\n      });\n    },\n    removeFieldChosen(field) {\n      let isInput = field.UIFormat;\n      for (let i = 0, length = field.Options.length; i < length; i++) {\n        if (!isInput) {\n          field.Options[i].Chosen = false;\n        } else {\n          field.Options[i].Value = '';\n        }\n      }\n      field.ChosenTitles = [];\n      // console.log(this.fields)\n      this.handleSearch()\n    },\n    toogleOptionChosen(field, option) {\n      console.log('d', field);\n      if (option.Chosen && field.Must) {\n        return;\n      }\n      if (option.Chosen) {\n        for (var i = 0; i < field.ChosenTitles.length; i++) {\n          if (field.ChosenTitles[i] == option.Text) {\n            field.ChosenTitles.splice(i, 1);\n          }\n        }\n        option.Chosen = false;\n      } else {\n        if (field.Radio) {\n          field.ChosenTitles = [option.Text];\n          for (var i = 0, length = field.Options.length; i < length; i++) {\n            field.Options[i].Chosen = false;\n          }\n        } else {\n          field.ChosenTitles.push(option.Text);\n        }\n        option.Chosen = true;\n      }\n      this.handleSearch()\n      this.advanceFilterUnfold = true\n    },\n    formatUIValueChange(field) {\n      var chosenTitles = [];\n      for (var i = 0, length = field.Options.length; i < length; i++) {\n        var option = field.Options[i];\n        if (option.Value) {\n          //var title = option.Text ? '{0} {1}'.Format(option.Text, option.Value) : option.Value;\n          chosenTitles.push(option.Value);\n          option.Chosen = true;\n        } else {\n          option.Chosen = false;\n        }\n      }\n      field.ChosenTitles = chosenTitles;\n      this.handleSearch()\n    },\n    tooglePanel() {\n      this.advanceFilterUnfold = !this.advanceFilterUnfold;\n      if (this.$parent.isOpenFilter !== undefined) {\n        this.$parent.isOpenFilter = this.advanceFilterUnfold;\n      }\n      if (this.advanceFilterUnfold &&\n        this.fields.length === 0 &&\n        this.filterOptions.length === 0) {\n\n        this.loadFiledsAndInit();\n      }\n    },\n    handleSearch() {\n      var ary = [];var num = 0;\n      for (var i = 0, length = this.fields.length; i < length; i++) {\n        var fld = this.fields[i];\n        if(fld.UIFormat === 'date' && fld.value && fld.value1) {\n          if(this.compareDate(fld.value, fld.value1)) {\n            this.$message.error('起始日期不能大于终止日期！');\n            return;\n          }\n          ary.push(`(${fld.Field} between '${fld.value}' and '${fld.value1}')`)\n        }\n        if(fld.UIFormat === 'select' && fld.value !== '0') {\n          ary.push(`${fld.Field} = N'${fld.value}'`);\n        }\n        if (fld.ChosenTitles.length < 1) {\n          num++\n          continue;\n        }\n        var optary = [];\n        if(fld.UIFormat !== 'date' && fld.UIFormat !== 'select') {\n          for (var j = 0, jlen = fld.Options.length; j < jlen; j++) {\n            var opt = fld.Options[j];\n            if (!opt.Chosen) {\n              continue;\n            }\n            if (!fld.OptionUsing) {\n              if (!fld.UIFormat) {\n                if (opt.Value === 'is null') {\n                  optary.push('{0} {1}'.Format(fld.Field, opt.Value));\n                } else {\n                  if (opt.Value.indexOf(',')>-1) {\n                    for (var a = 0; a < opt.Value.split(',').length; a++) {\n                      optary.push('{0}=N\\'{1}\\''.Format(fld.Field, opt.Value.split(',')[a]));\n                    }\n                  }else{\n                    optary.push('{0}=N\\'{1}\\''.Format(fld.Field, opt.Value));\n                  }\n                }\n              } else {\n                optary.push(opt.ValueExpress.replace(/#PH#/g, opt.Value));\n              }\n            } else { //using option value as filter condition directly\n              if (opt.Value) {\n                optary.push(opt.Value);\n              }\n            }\n          }\n          if (optary.length == 1) {\n            ary.push(optary.join(' '));\n          } else if (optary.length > 1) {\n            var cnct = fld.UIFormat ? ' and ' : ' or ';\n            ary.push('(' + optary.join(cnct) + ')');\n          }\n        }\n      }\n      if (num == this.fields.length) {\n        this.removeShow = false\n      }else{\n        this.removeShow = true\n      }\n      this.$emit('handleSearch', ary.join(' and '),this.bondCode);\n      // this.advanceFilterUnfold = false;\n      if (this.$parent.isOpenFilter !== undefined) {\n        this.$parent.isOpenFilter = false;\n      }\n      this.$emit('handleSearchCon',this.fields,this.removeShow)\n    },\n    // 刷新数据\n    refresh() {\n      this.loadFiledsAndInit();\n    }\n  },\n};\n\n",{"version":3,"sources":["AdvanceFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"AdvanceFilter.vue","sourceRoot":"src/components/common","sourcesContent":["<style lang=\"scss\" scoped>\n  .advance-filter {\n    height: 100%;\n    border-right: 1px solid $--color-grey-border;\n    &-header {\n      height: 39px;\n      line-height: 39px;\n      border-bottom: 1px solid $--color-grey-border;\n      .left{\n\n        i{\n          font-size: 14px;\n          margin-right: 5px;\n          color: $--color-primary;\n        }\n      }\n    }\n\n    .condition{\n      line-height: 20px;\n      font-size: 12px;\n    }\n    .clear-condition{\n      font-size: 12px;\n    }\n    .filter-button {\n      font-weight: 500;\n      color: #777;\n      padding: 0;\n\n      i.icon-searchlist {\n        font-size: 25px;\n        vertical-align: -4px;\n      }\n\n      &.is-unfold,\n      &:hover {\n        color: $--color-primary;\n      }\n    }\n\n    &-body{\n      padding: 10px 10px 10px 20px;\n      padding-left: 0;\n      font-size: 12px;\n      height: calc(100% - 47px);\n      overflow: auto;\n      padding-right: 0;\n\n      /deep/ >.el-scrollbar {\n        height: 100%;\n        .el-scrollbar__wrap {\n          overflow-x: hidden;\n        }\n      }\n    }\n\n    .chosen-fields {\n      display: inline-block;\n      margin-bottom: 10px;\n      margin-right: 10px;\n      background-color: #fff;\n      border:1px solid $--color-grey-light;\n      color: $--color-primary;\n      border-radius: 3px;\n      font-size: 12px;\n      position: relative;\n      padding-right: 22px;\n      &:hover{\n        border-color: $--color-primary;\n        .field-remove{\n          background-color: $--color-primary;\n          color: #fff;\n\n        }\n      }\n      .field-titles {\n        margin-right: 5px;\n        display: inline-block;\n        padding: 3px 0 3px 10px;\n        .title{\n          color: $--color-black;\n        }\n      }\n\n      .field-remove {\n        display: inline-block;\n        height: 100%;\n        cursor: pointer;\n        padding:0 5px;\n        position: absolute;\n        top: 0;right: -1px;\n        line-height: 26px;\n      }\n    }\n\n    .filter-condition-row {\n      margin-bottom: 5px;\n      padding-right: 15px;\n      &:last-child {\n        border-bottom: none;\n        padding-bottom: 0;\n        margin-bottom: 0;\n      }\n    }\n\n    .filter-label {\n      min-width: 100px;\n      font-weight: bold;\n      color: $--color-black;\n      margin-bottom: 10px;\n    }\n\n    .filter-title {\n      font-weight: 500;\n      font-size: 16px;\n      color: grey;\n      /*$--color-gray;*/\n      display: inline-block;\n      margin-right: 10px;\n    }\n\n    .filter-tag {\n      height: 26px;\n      line-height: 24px;\n      margin: 0 10px 5px 0;\n      padding: 0 10px;\n      border-color: $--color-grey-border;\n      border-radius: 3px;\n      color: $--color-grey;\n\n      &:hover {\n        border-color: $--color-primary;\n        color: $--color-primary;\n        cursor: pointer;\n      }\n\n      &.active {\n        border-color: $--color-primary;\n        color: #fff;\n        background-color: $--color-primary;\n      }\n    }\n\n    .more{\n      margin-top: 5px;\n      margin-right: 8px;\n    }\n\n    .spea-center{\n      text-align: center;\n      line-height: 26px;\n    }\n\n  }\n\n  .loading-preload{\n    width: 35%;\n    height: 20px;\n    margin-bottom: 10px;\n    border-radius: 2px;\n    &:nth-child(2) {\n      width: 60%;\n    }\n    &:nth-child(3) {\n      width: 42%;\n    }\n  }\n  .date-interval{\n    /deep/ .el-input--suffix .el-input__inner{\n      padding-right: 10px;\n    }\n  }\n</style>\n<style lang=\"scss\">\n  $--load-color: #e1e3ef;\n  $--load-living-color: #e6e8f5;\n\n  /* 数据加载 占位显示效果 */\n\n  .loading {\n    background-color: $--load-color;\n  }\n  .max-width{\n    max-width: 300px;\n  }\n</style>\n\n<template>\n  <div class=\"advance-filter\">\n    <div class=\"advance-filter-header\">\n      <span class=\"left\"><i class=\"iconfont icon-shaixuan\"></i>筛选条件</span>\n    </div>\n    <div class=\"advance-filter-body\">\n      <!-- <div v-if=\"fields.length > 0\" class=\"condition\">\n        <div v-for=\"field in fields\" :key=\"field.Title\" v-show=\"field.ChosenTitles.length>0\"\n             class=\"chosen-fields\">\n          <span class=\"field-titles\"><span class=\"title\">{{field.Title}}：</span>{{field.UIFormat?field.ChosenTitles.join(\" - \"):field.ChosenTitles.join(\", \")}}</span>\n          <span class=\"field-remove\" v-if=\"!field.Must\" @click=\"removeFieldChosen(field)\">\n            <i class=\"el-icon-close\"></i>\n          </span>\n        </div>\n        <span @click=\"removeAll()\" class=\"colorPrimary ml-15 clear-condition\" v-show=\"removeShow\">清除筛选</span>\n      </div> -->\n      <el-scrollbar>\n        <template v-if=\"fields.length > 0\">\n          <div v-for=\"(field,indexs) in fields\" :key=\"field.Title\"\n               class=\"filter-condition-row\" :class=\"{'pb-5':field.UIFormat}\">\n            <div class=\"filter-label text-ellipsis\">\n              {{field.Title}}\n            </div>\n            <div v-if=\"!field.UIFormat\">\n              <el-tag v-for=\"(option,index) in field.Options\"\n                      @click.native=\"toogleOptionChosen(field, option)\" :class=\"{active: option.Chosen }\"\n                      :key=\"option.Text\" class=\"filter-tag\">{{option.Text}} </el-tag>\n\n              <i class=\"iconfont icon-zhankai cursorP fr colorPrimary more\" :class=\"conditionAr[indexs]?'transformRotate180':''\" :title=\"conditionAr[indexs]?'收起':'展开'\" v-if=\"field.Options.length>100\" @click=\"conditionOpen(indexs)\"></i>\n            </div>\n            <template v-else-if=\"field.UIFormat === 'select'\">\n              <el-select size=\"mini\" v-model=\"field.value\" popper-class=\"max-width\" style=\"width: 100%;\" filterable @change=\"handleSearch\">\n                <el-option label=\"全部\" value=\"0\"></el-option>\n                <el-option v-for=\"(option, index) in field.Options\" :label=\"option.Text\" :value=\"option.Value\" :key=\"indexs+'-'+index\"></el-option>\n              </el-select>\n            </template>\n            <template v-else-if=\"field.UIFormat === 'date'\">\n              <el-row class=\"date-interval\">\n                <el-col :span=\"11\">\n                  <el-date-picker v-model=\"field.value\"\n                                  type=\"date\"\n                                  size=\"mini\"\n                                  placeholder=\"起始\"\n                                  style=\"width: 100%\"\n                                  @change=\"handleSearch\"\n                                  :value-format=\"'yyyy-MM-dd'\">\n                  </el-date-picker>\n                </el-col>\n                <el-col :span=\"2\" class=\"spea-center\">-</el-col>\n                <el-col :span=\"11\">\n                  <el-date-picker v-model=\"field.value1\"\n                                  type=\"date\"\n                                  size=\"mini\"\n                                  placeholder=\"终止\"\n                                  style=\"width: 100%\"\n                                  @change=\"handleSearch\"\n                                  :value-format=\"'yyyy-MM-dd'\">\n                  </el-date-picker>\n                </el-col>\n              </el-row>\n            </template>\n            <template v-else v-for=\"option in field.Options\">\n              <div class=\"text-center line\" v-if=\"option.Text\">{{option.Text}}</div>\n              <div>\n                <el-input v-model=\"option.Value\" size=\"mini\" @change=\"formatUIValueChange(field)\"\n                          clearable placeholder=\"请输入查询关键字\"></el-input>\n              </div>\n              <div class=\"text-center line\"  style=\"font-weight: bold;color: rgba(0, 0, 0, 0.85); margin: 5px 0 10px 0;\">证券代码</div>\n             <div v-if=\"field.Field === 'TrustName'\">\n                <el-input v-model=\"bondCode\" size=\"mini\" @change=\"formatUIValueChange(field)\"\n                          clearable placeholder=\"请输入证券代码\"></el-input>\n              </div>\n            </template>\n          </div>\n        </template>\n        <template v-else>\n          <!--数据加载效果-->\n          <div class=\"loading-preload loading\"></div>\n          <div class=\"loading-preload loading\"></div>\n          <div class=\"loading-preload loading\"></div>\n        </template>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"AdvanceFilter\",\n    props: {\n      conName: String,\n      templateName: String\n    },\n    data: () => ({\n      advanceFilterUnfold: false,\n      fields: [],\n      conditionAr:[],\n      removeShow:false,\n      bondCode:'',\n    }),\n    mounted() {\n\n    },\n    created() {\n      this.filterOptions = []\n      this.tooglePanel()\n    },\n    methods: {\n      bondCodeClear() {\n        this.bondCode = '';\n        this.handleSearch()\n      },\n      compareDate(s1, s2){\n        if(s1.indexOf('-') > 0) {\n          s1 = s1.replace(/-/g,\"\\/\");\n        }else if(!/\\/|-/.test(s1)) {\n          s1 = s1.slice(0, 4) + '/' + s1.slice(4,6) + '/' + s1.slice(6,8);\n        }\n        if(s2.indexOf('-') > 0) {\n          s2 = s2.replace(/-/g,\"\\/\");\n        }else if(!/\\/|-/.test(s2)) {\n          s2 = s2.slice(0, 4) + '/' + s2.slice(4,6) + '/' + s2.slice(6,8);\n        }\n        return ((new Date(s1)) > (new Date(s2)));\n      },\n      removeAll() {\n\n        for (var i = 0; i < this.fields.length; i++) {\n          this.fields[i].ChosenTitles = []\n          for (var ii = 0; ii < this.fields[i].Options.length; ii++) {\n            this.fields[i].Options[ii].Chosen = false;\n            if (!this.fields[i].UIFormat) {\n              this.fields[i].Options[ii].Chosen = false;\n            } else {\n              this.fields[i].Options[ii].Value = '';\n            }\n          }\n        }\n        this.handleSearch()\n      },\n      conditionOpen(index) {\n        if (!this.conditionAr[index]) {\n          this.$set(this.conditionAr,index,true)\n        }else{\n          this.$set(this.conditionAr,index,false)\n        }\n        // console.log(this.conditionAr)\n      },\n      loadFiledsAndInit() {\n        if (this.conName === undefined || this.templateName === undefined) {\n          return;\n        }\n        var svc = this.$http(this.conName, 'DV.AdvanceFilter_GetSettingByName', true);\n        svc.AddParam({\n          Name: 'TemplateName',\n          Value: this.templateName,\n          DBType: 'string'\n        });\n        svc.ExecTables().then((response) => {\n          if (!response || response.length < 1) {\n            return;\n          }\n          this.filterOptions = JSON.parse(JSON.stringify(response[1]));\n          let fields = JSON.parse(JSON.stringify(response[0]));\n          fields.map((field) => {\n            this.conditionAr.push(false)\n            field.ChosenTitles = (field.ChosenTitles) ? field.ChosenTitles.split(';') : [];\n            let fieldOptions = this.filterOptions.filter((o) => (o.Field === field.Field));\n            if (field.UIFormat === 'select') {\n              field.value = '0';\n              fieldOptions = fieldOptions.filter(v => v.Text !== null);\n            }\n            if(field.UIFormat === 'date') {\n              field.value = '';\n              field.value1 = '';\n            }\n\n            fieldOptions.forEach((v) => {\n              if (field.UIFormat && field.UIFormat === 'input') {\n                v.ValueExpress = v.Value;\n                v.Value = '';\n              }\n            });\n            field.Options = fieldOptions;\n          });\n\n          this.fields = fields;\n        });\n      },\n      removeFieldChosen(field) {\n        let isInput = field.UIFormat;\n        for (let i = 0, length = field.Options.length; i < length; i++) {\n          if (!isInput) {\n            field.Options[i].Chosen = false;\n          } else {\n            field.Options[i].Value = '';\n          }\n        }\n        field.ChosenTitles = [];\n        // console.log(this.fields)\n        this.handleSearch()\n      },\n      toogleOptionChosen(field, option) {\n        console.log('d', field);\n        if (option.Chosen && field.Must) {\n          return;\n        }\n        if (option.Chosen) {\n          for (var i = 0; i < field.ChosenTitles.length; i++) {\n            if (field.ChosenTitles[i] == option.Text) {\n              field.ChosenTitles.splice(i, 1);\n            }\n          }\n          option.Chosen = false;\n        } else {\n          if (field.Radio) {\n            field.ChosenTitles = [option.Text];\n            for (var i = 0, length = field.Options.length; i < length; i++) {\n              field.Options[i].Chosen = false;\n            }\n          } else {\n            field.ChosenTitles.push(option.Text);\n          }\n          option.Chosen = true;\n        }\n        this.handleSearch()\n        this.advanceFilterUnfold = true\n      },\n      formatUIValueChange(field) {\n        var chosenTitles = [];\n        for (var i = 0, length = field.Options.length; i < length; i++) {\n          var option = field.Options[i];\n          if (option.Value) {\n            //var title = option.Text ? '{0} {1}'.Format(option.Text, option.Value) : option.Value;\n            chosenTitles.push(option.Value);\n            option.Chosen = true;\n          } else {\n            option.Chosen = false;\n          }\n        }\n        field.ChosenTitles = chosenTitles;\n        this.handleSearch()\n      },\n      tooglePanel() {\n        this.advanceFilterUnfold = !this.advanceFilterUnfold;\n        if (this.$parent.isOpenFilter !== undefined) {\n          this.$parent.isOpenFilter = this.advanceFilterUnfold;\n        }\n        if (this.advanceFilterUnfold &&\n          this.fields.length === 0 &&\n          this.filterOptions.length === 0) {\n\n          this.loadFiledsAndInit();\n        }\n      },\n      handleSearch() {\n        var ary = [];var num = 0;\n        for (var i = 0, length = this.fields.length; i < length; i++) {\n          var fld = this.fields[i];\n          if(fld.UIFormat === 'date' && fld.value && fld.value1) {\n            if(this.compareDate(fld.value, fld.value1)) {\n              this.$message.error('起始日期不能大于终止日期！');\n              return;\n            }\n            ary.push(`(${fld.Field} between '${fld.value}' and '${fld.value1}')`)\n          }\n          if(fld.UIFormat === 'select' && fld.value !== '0') {\n            ary.push(`${fld.Field} = N'${fld.value}'`);\n          }\n          if (fld.ChosenTitles.length < 1) {\n            num++\n            continue;\n          }\n          var optary = [];\n          if(fld.UIFormat !== 'date' && fld.UIFormat !== 'select') {\n            for (var j = 0, jlen = fld.Options.length; j < jlen; j++) {\n              var opt = fld.Options[j];\n              if (!opt.Chosen) {\n                continue;\n              }\n              if (!fld.OptionUsing) {\n                if (!fld.UIFormat) {\n                  if (opt.Value === 'is null') {\n                    optary.push('{0} {1}'.Format(fld.Field, opt.Value));\n                  } else {\n                    if (opt.Value.indexOf(',')>-1) {\n                      for (var a = 0; a < opt.Value.split(',').length; a++) {\n                        optary.push('{0}=N\\'{1}\\''.Format(fld.Field, opt.Value.split(',')[a]));\n                      }\n                    }else{\n                      optary.push('{0}=N\\'{1}\\''.Format(fld.Field, opt.Value));\n                    }\n                  }\n                } else {\n                  optary.push(opt.ValueExpress.replace(/#PH#/g, opt.Value));\n                }\n              } else { //using option value as filter condition directly\n                if (opt.Value) {\n                  optary.push(opt.Value);\n                }\n              }\n            }\n            if (optary.length == 1) {\n              ary.push(optary.join(' '));\n            } else if (optary.length > 1) {\n              var cnct = fld.UIFormat ? ' and ' : ' or ';\n              ary.push('(' + optary.join(cnct) + ')');\n            }\n          }\n        }\n        if (num == this.fields.length) {\n          this.removeShow = false\n        }else{\n          this.removeShow = true\n        }\n        this.$emit('handleSearch', ary.join(' and '),this.bondCode);\n        // this.advanceFilterUnfold = false;\n        if (this.$parent.isOpenFilter !== undefined) {\n          this.$parent.isOpenFilter = false;\n        }\n        this.$emit('handleSearchCon',this.fields,this.removeShow)\n      },\n      // 刷新数据\n      refresh() {\n        this.loadFiledsAndInit();\n      }\n    },\n  };\n\n</script>\n"]}]}