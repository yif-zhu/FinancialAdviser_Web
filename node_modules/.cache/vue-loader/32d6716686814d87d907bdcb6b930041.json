{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\DataGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\DataGrid.vue","mtime":1604546251515},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import ToolBar from './ToolBar.vue';\n  import Pager from './Pager.vue';\n  export default {\n    name: \"DataGrid\",\n    inheritAttrs: false,\n    props: {\n      // data-table 参数\n      // 固定高度（基于当前页面高度固定）\n      isFixed: {\n        type: Boolean,\n        default: false\n      },\n      // toolbar 参数\n      title: {\n          type: String,\n          default: ''\n      },\n      // pager 参数）\n      conName: String,\n      procName:String,\n      tableName: String,\n\n      order: String,\n\n      filter: String,\n\n\t\t\tneedUserName:{\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n      },\n      bondCode:{\n        type:String,\n        default:''\n      },\n      showFilter:{\n          type: Boolean,\n          default: false\n      },\n      // table 参数 (不通过pager组件去取数据，直接给表格填充数据)\n      data: {\n        type: Array,\n        default: function () {\n          return [];\n        }\n      },\n\n      height: [String, Number],\n\n      showHeader: {\n        type: Boolean,\n        default: true\n      },\n\n      showTable: {\n        type: Boolean,\n        default: true\n      },\n\n      // 显示分页 默认显示\n      showPager: {\n        type: Boolean,\n        default: true\n      },\n      pageSize: {\n        type: Number,\n        default: 20\n      },\n      //是否允许多选\n      multiSelection: {\n        type: Boolean,\n        default: false\n      },\n      //是否显示loading\n      showLoading: {\n        type: Boolean,\n        default: true\n      },\n      trustId:{\n        type: [Number,String],\n        default: 0\n      }\n    },\n    components: {\n      Pager,ToolBar\n    },\n    data: () => ({\n      gridData: [],\n      loading: true,\n    }),\n    computed: {\n      tableHeight() {\n        return (this.height) ? this.height : this.isFixed ? 'auto' : undefined;\n      }\n    },\n    watch: {\n      data(v) {\n        if (v && Array.isArray(v)) {\n          this.gridData = v;\n        }\n        this.$emit('listDataChanged', v);\n        this.loading = false;\n      }\n    },\n    methods: {\n      tableScroll() {\n        this.$refs.table.bodyWrapper.scrollTop = 0\n      },\n      loadGridData(data) {\n        this.gridData = data;\n        this.$emit('listDataChanged', data);\n      },\n      loadingSwitcher(isDisplay) {\n        this.loading = isDisplay;\n      },\n      // 对Element @selection-change 事件的封装，\n      // 在使用时，建议使用此方式 @selectionChange\n      handleSelectionChange(data) {\n        if (this.multiSelection) {\n          this.$emit('selectionChange', data);\n        } else {\n          if (data.length > 1) {\n            this.$emit('selectionChange', data.splice(1, 1));\n            this.$refs.table.toggleRowSelection(data[0])\n          } else {\n            this.$emit('selectionChange', data);\n          }\n        }\n      },\n      handleSortChange(sorter) {\n        if (!sorter.prop || !sorter.order) {\n          this.$emit('sortChange', null);\n          return;\n        }\n        let order = ' asc';\n        if (sorter.order === 'descending') {\n          order = ' desc';\n        }\n\n        let targetOrder = sorter.prop + order;\n        if (targetOrder === this.order) {\n            return;\n        }\n        this.$emit('sortChange', targetOrder);\n      },\n      // 刷新数据\n      refresh() {\n        this.$refs.pager.getListWithPager();\n      },\n      clearSelection() {\n        this.$refs.table.clearSelection();\n      }\n    },\n    mounted() {\n      if (this.data) this.gridData = this.data;\n      this.loading = this.showLoading;\n    }\n  };\n\n",{"version":3,"sources":["DataGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DataGrid.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n  <div class=\"data-grid\" :class=\"{'data-grid--fixed':isFixed}\">\n    <tool-bar :title=\"title\" :showFilter=\"showFilter\" ref=\"data-grid-toolbar\" v-if=\"showFilter\">\n      <template slot=\"tool-filter\">\n          <slot name=\"toolbar-filter\"></slot>\n      </template>\n      <template slot=\"tool-right\">\n          <slot name=\"toolbar-right\"></slot>\n      </template>\n    </tool-bar>\n    <el-table :data=\"gridData\" v-show=\"showTable\" v-bind=\"$attrs\" v-on=\"$listeners\"\n      v-loading=\"loading\" :height=\"tableHeight\" @selection-change=\"handleSelectionChange\"\n      @sort-change=\"handleSortChange\" size=\"mini\" ref=\"table\">\n      <slot name=\"table-column\"></slot>\n    </el-table>\n    <template v-if=\"conName && tableName\">\n      <div class=\"grid-pager-control\" v-show=\"showPager\">\n        <pager :conname=\"conName\" :procname=\"procName\" :tablename=\"tableName\" :order=\"order\" :dataloaded=\"loadGridData\" :trustId=\"trustId\"\n          :loadingswitcher=\"loadingSwitcher\":needUserName=\"needUserName\" :filter=\"filter\" :pageSize=\"pageSize\" ref=\"pager\"\n          @tableScroll=\"tableScroll\">\n        </pager>\n      </div>\n    </template>\n    <template v-else>\n      <slot name=\"pager\"></slot>\n    </template>\n  </div>\n</template>\n\n<script>\n  import ToolBar from './ToolBar.vue';\n  import Pager from './Pager.vue';\n  export default {\n    name: \"DataGrid\",\n    inheritAttrs: false,\n    props: {\n      // data-table 参数\n      // 固定高度（基于当前页面高度固定）\n      isFixed: {\n        type: Boolean,\n        default: false\n      },\n      // toolbar 参数\n      title: {\n          type: String,\n          default: ''\n      },\n      // pager 参数）\n      conName: String,\n      procName:String,\n      tableName: String,\n\n      order: String,\n\n      filter: String,\n\n\t\t\tneedUserName:{\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n      },\n      bondCode:{\n        type:String,\n        default:''\n      },\n      showFilter:{\n          type: Boolean,\n          default: false\n      },\n      // table 参数 (不通过pager组件去取数据，直接给表格填充数据)\n      data: {\n        type: Array,\n        default: function () {\n          return [];\n        }\n      },\n\n      height: [String, Number],\n\n      showHeader: {\n        type: Boolean,\n        default: true\n      },\n\n      showTable: {\n        type: Boolean,\n        default: true\n      },\n\n      // 显示分页 默认显示\n      showPager: {\n        type: Boolean,\n        default: true\n      },\n      pageSize: {\n        type: Number,\n        default: 20\n      },\n      //是否允许多选\n      multiSelection: {\n        type: Boolean,\n        default: false\n      },\n      //是否显示loading\n      showLoading: {\n        type: Boolean,\n        default: true\n      },\n      trustId:{\n        type: [Number,String],\n        default: 0\n      }\n    },\n    components: {\n      Pager,ToolBar\n    },\n    data: () => ({\n      gridData: [],\n      loading: true,\n    }),\n    computed: {\n      tableHeight() {\n        return (this.height) ? this.height : this.isFixed ? 'auto' : undefined;\n      }\n    },\n    watch: {\n      data(v) {\n        if (v && Array.isArray(v)) {\n          this.gridData = v;\n        }\n        this.$emit('listDataChanged', v);\n        this.loading = false;\n      }\n    },\n    methods: {\n      tableScroll() {\n        this.$refs.table.bodyWrapper.scrollTop = 0\n      },\n      loadGridData(data) {\n        this.gridData = data;\n        this.$emit('listDataChanged', data);\n      },\n      loadingSwitcher(isDisplay) {\n        this.loading = isDisplay;\n      },\n      // 对Element @selection-change 事件的封装，\n      // 在使用时，建议使用此方式 @selectionChange\n      handleSelectionChange(data) {\n        if (this.multiSelection) {\n          this.$emit('selectionChange', data);\n        } else {\n          if (data.length > 1) {\n            this.$emit('selectionChange', data.splice(1, 1));\n            this.$refs.table.toggleRowSelection(data[0])\n          } else {\n            this.$emit('selectionChange', data);\n          }\n        }\n      },\n      handleSortChange(sorter) {\n        if (!sorter.prop || !sorter.order) {\n          this.$emit('sortChange', null);\n          return;\n        }\n        let order = ' asc';\n        if (sorter.order === 'descending') {\n          order = ' desc';\n        }\n\n        let targetOrder = sorter.prop + order;\n        if (targetOrder === this.order) {\n            return;\n        }\n        this.$emit('sortChange', targetOrder);\n      },\n      // 刷新数据\n      refresh() {\n        this.$refs.pager.getListWithPager();\n      },\n      clearSelection() {\n        this.$refs.table.clearSelection();\n      }\n    },\n    mounted() {\n      if (this.data) this.gridData = this.data;\n      this.loading = this.showLoading;\n    }\n  };\n\n</script>\n"]}]}