{"remainingRequest":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\Highcharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\src\\components\\common\\Highcharts.vue","mtime":1604281046033},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yif_z\\Desktop\\DealViewer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport Highcharts from 'highcharts';\nimport highcharts3d from 'highcharts/highcharts-3d.js';\nimport exporting from 'highcharts/modules/exporting.js';\nimport highchartsMore from 'highcharts/highcharts-more.js';//扩展图表类型\n\nhighcharts3d(Highcharts);\nhighchartsMore(Highcharts);\nexport default {\n  name: \"Highcharts\",\n  props: {\n    rows: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    dims: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    options: Object,\n    isItExport:{//加一个“isItExport”参数判断图表是否需要导出功能\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    chart: null\n  }),\n  watch: {\n    options (options) {\n      if (!this.chart && options) {\n        this.renderChart();\n      } else {\n        this.chart.update(options);\n      }\n    }\n  },\n  methods: {\n    renderChart() {\n      if(this.chart || !this.options) return;\n      Highcharts.setOptions({//图表导出\n        lang: {\n          contextButtonTitle:'导出图表',\n          printChart:\"打印图表\",\n          downloadJPEG: \"下载JPEG 图片\" ,\n          downloadPDF: \"下载PDF文档\"  ,\n          downloadPNG: \"下载PNG 图片\"  ,\n          downloadSVG: \"下载SVG 矢量图\" ,\n          exportButtonTitle: \"导出图片\",\n          thousandsSep: ','\n        }\n      });\n      let options = Object.assign({},this.options);\n      if (this.dims.length>0 && this.rows.length>0) {\n        var seriesObj = {};\n        for (var i = 0, len = this.dims.length; i < len; i++) {\n          var d = this.dims[i];\n          seriesObj[d] = [];\n        }\n        for (var i = 0, len = this.rows.length; i < len; i++) {\n          var r = this.rows[i];\n          for (var key in seriesObj) {\n            seriesObj[key].push(r[key]);\n          }\n        }\n\n        var ss = [];\n        for (var key in seriesObj) {\n          ss.push({\n            name: key,\n            data: seriesObj[key]\n          });\n        }\n\n        options.series = ss;\n      }\n\n      options.credits = {\n        enabled: false\n      };\n      if(typeof options.series === 'undefined'){\n        options.title = {\n          text:null\n        };\n      }\n      options.exporting = {\n        enabled: this.isItExport\n      }\n      this.chart = new Highcharts.Chart(this.$el, options);\n\n      //this.dragInit();\n    },\n    // colorInit(){\n    //   Highcharts.getOptions().colors = $.map(Highcharts.getOptions().colors, function (color) {\n    //     return {\n    //       radialGradient: {\n    //         cx: 0.4,\n    //         cy: 0.3,\n    //         r: 0.5\n    //       },\n    //       stops: [\n    //         [0, color],\n    //         [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]\n    //       ]\n    //     };\n    //   });\n    // },\n    // dragInit(){\n    //   let chart = this.chart;\n    //   $(chart.container).bind('mousedown.hc touchstart.hc', function (e) {\n    //     e = chart.pointer.normalize(e);\n    //     var posX = e.pageX,\n    //       posY = e.pageY,\n    //       alpha = chart.options.chart.options3d.alpha,\n    //       beta = chart.options.chart.options3d.beta,\n    //       newAlpha,\n    //       newBeta,\n    //       sensitivity = 5; // lower is more sensitive\n    //     $(document).bind({\n    //       'mousemove.hc touchdrag.hc': function (e) {\n    //         // Run beta\n    //         newBeta = beta + (posX - e.pageX) / sensitivity;\n    //         newBeta = Math.min(100, Math.max(-100, newBeta));\n    //         chart.options.chart.options3d.beta = newBeta;\n    //         // Run alpha\n    //         newAlpha = alpha + (e.pageY - posY) / sensitivity;\n    //         newAlpha = Math.min(100, Math.max(-100, newAlpha));\n    //         chart.options.chart.options3d.alpha = newAlpha;\n    //         chart.redraw(false);\n    //       },\n    //       'mouseup touchend': function () {\n    //         $(document).unbind('.hc');\n    //       }\n    //     });\n    //   });\n    // },\n    reflow() {\n      this.$nextTick(()=>{\n        this.chart.reflow();\n      });\n    }\n  },\n  mounted() {\n    if (!this.chart && this.options !== undefined) {\n      this.renderChart();\n    }\n    exporting(Highcharts);\n  },\n  beforeDestroy() {\n    if(this.chart !== null) {\n      this.chart.destroy();\n    }\n  }\n};\n",{"version":3,"sources":["Highcharts.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Highcharts.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n  <div class=\"highcharts-container\" />\n</template>\n\n<script>\n  import Highcharts from 'highcharts';\n  import highcharts3d from 'highcharts/highcharts-3d.js';\n  import exporting from 'highcharts/modules/exporting.js';\n  import highchartsMore from 'highcharts/highcharts-more.js';//扩展图表类型\n\n  highcharts3d(Highcharts);\n  highchartsMore(Highcharts);\n  export default {\n    name: \"Highcharts\",\n    props: {\n      rows: {\n        type: Array,\n        default: function() {\n          return [];\n        }\n      },\n      dims: {\n        type: Array,\n        default: function() {\n          return [];\n        }\n      },\n      options: Object,\n      isItExport:{//加一个“isItExport”参数判断图表是否需要导出功能\n        type: Boolean,\n        default: false\n      }\n    },\n    data: () => ({\n      chart: null\n    }),\n    watch: {\n      options (options) {\n        if (!this.chart && options) {\n          this.renderChart();\n        } else {\n          this.chart.update(options);\n        }\n      }\n    },\n    methods: {\n      renderChart() {\n        if(this.chart || !this.options) return;\n        Highcharts.setOptions({//图表导出\n          lang: {\n            contextButtonTitle:'导出图表',\n            printChart:\"打印图表\",\n            downloadJPEG: \"下载JPEG 图片\" ,\n            downloadPDF: \"下载PDF文档\"  ,\n            downloadPNG: \"下载PNG 图片\"  ,\n            downloadSVG: \"下载SVG 矢量图\" ,\n            exportButtonTitle: \"导出图片\",\n            thousandsSep: ','\n          }\n        });\n        let options = Object.assign({},this.options);\n        if (this.dims.length>0 && this.rows.length>0) {\n          var seriesObj = {};\n          for (var i = 0, len = this.dims.length; i < len; i++) {\n            var d = this.dims[i];\n            seriesObj[d] = [];\n          }\n          for (var i = 0, len = this.rows.length; i < len; i++) {\n            var r = this.rows[i];\n            for (var key in seriesObj) {\n              seriesObj[key].push(r[key]);\n            }\n          }\n\n          var ss = [];\n          for (var key in seriesObj) {\n            ss.push({\n              name: key,\n              data: seriesObj[key]\n            });\n          }\n\n          options.series = ss;\n        }\n\n        options.credits = {\n          enabled: false\n        };\n        if(typeof options.series === 'undefined'){\n          options.title = {\n            text:null\n          };\n        }\n        options.exporting = {\n          enabled: this.isItExport\n        }\n        this.chart = new Highcharts.Chart(this.$el, options);\n\n        //this.dragInit();\n      },\n      // colorInit(){\n      //   Highcharts.getOptions().colors = $.map(Highcharts.getOptions().colors, function (color) {\n      //     return {\n      //       radialGradient: {\n      //         cx: 0.4,\n      //         cy: 0.3,\n      //         r: 0.5\n      //       },\n      //       stops: [\n      //         [0, color],\n      //         [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]\n      //       ]\n      //     };\n      //   });\n      // },\n      // dragInit(){\n      //   let chart = this.chart;\n      //   $(chart.container).bind('mousedown.hc touchstart.hc', function (e) {\n      //     e = chart.pointer.normalize(e);\n      //     var posX = e.pageX,\n      //       posY = e.pageY,\n      //       alpha = chart.options.chart.options3d.alpha,\n      //       beta = chart.options.chart.options3d.beta,\n      //       newAlpha,\n      //       newBeta,\n      //       sensitivity = 5; // lower is more sensitive\n      //     $(document).bind({\n      //       'mousemove.hc touchdrag.hc': function (e) {\n      //         // Run beta\n      //         newBeta = beta + (posX - e.pageX) / sensitivity;\n      //         newBeta = Math.min(100, Math.max(-100, newBeta));\n      //         chart.options.chart.options3d.beta = newBeta;\n      //         // Run alpha\n      //         newAlpha = alpha + (e.pageY - posY) / sensitivity;\n      //         newAlpha = Math.min(100, Math.max(-100, newAlpha));\n      //         chart.options.chart.options3d.alpha = newAlpha;\n      //         chart.redraw(false);\n      //       },\n      //       'mouseup touchend': function () {\n      //         $(document).unbind('.hc');\n      //       }\n      //     });\n      //   });\n      // },\n      reflow() {\n        this.$nextTick(()=>{\n          this.chart.reflow();\n        });\n      }\n    },\n    mounted() {\n      if (!this.chart && this.options !== undefined) {\n        this.renderChart();\n      }\n      exporting(Highcharts);\n    },\n    beforeDestroy() {\n      if(this.chart !== null) {\n        this.chart.destroy();\n      }\n    }\n  };\n</script>\n"]}]}